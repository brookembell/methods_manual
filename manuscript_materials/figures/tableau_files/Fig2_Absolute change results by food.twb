<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Colorblind 1' type='regular'>
      <color>#4059ad</color>
      <color>#6b9ac4</color>
      <color>#97d8c4</color>
      <color>#eff2f1</color>
      <color>#97d8c4</color>
      <color>#f4b942</color>
    </color-palette>
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all_results_by_foodgroup_tableau_020724' inline='true' name='federated.00lcrex1owyp5i15js4py0ea9o2w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_results_by_foodgroup_tableau_020724' name='textscan.0y7ug450lz2k2612zwc081yuwtnp'>
            <connection class='textscan' directory='/Users/bmb73/Library/CloudStorage/Box-Box/lasting_aim_3/model development/data_final/tables_figures/clean_data' filename='all_results_by_foodgroup_tableau_022924.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_group' ordinal='1' />
            <column datatype='string' name='outcome' ordinal='2' />
            <column datatype='real' name='impact_median_day' ordinal='3' />
            <column datatype='real' name='impact_median_year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_group' ordinal='1' />
            <column datatype='string' name='outcome' ordinal='2' />
            <column datatype='real' name='impact_median_day' ordinal='3' />
            <column datatype='real' name='impact_median_year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diet_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[diet_pattern]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>diet_pattern</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_group]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>food_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_day]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>impact_median_day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_year]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>impact_median_year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='all_results_by_foodgroup_tableau_020724.csv' datatype='table' name='[__tableau_internal_object_id__].[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]' role='measure' type='quantitative' />
      <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Med&quot;' value='MED' />
          <alias key='&quot;Veg&quot;' value='VEG' />
          <alias key='&quot;Vegan&quot;' value='VEGN' />
        </aliases>
      </column>
      <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;added_sugar&quot;' value='Added sugar' />
          <alias key='&quot;dairy_cow&quot;' value='Dairy, cow' />
          <alias key='&quot;dairy_soy&quot;' value='Dairy, soy' />
          <alias key='&quot;dairy_tot&quot;' value='Dairy, total' />
          <alias key='&quot;fruit_exc_juice&quot;' value='Fruit, whole' />
          <alias key='&quot;fruit_juice&quot;' value='Fruit, juice' />
          <alias key='&quot;gr_refined&quot;' value='Grains, refined' />
          <alias key='&quot;gr_whole&quot;' value='Grains, whole' />
          <alias key='&quot;leg_tot&quot;' value='Protein, legumes' />
          <alias key='&quot;oil&quot;' value='Oil' />
          <alias key='&quot;pf_egg&quot;' value='Protein, eggs' />
          <alias key='&quot;pf_ns&quot;' value='Protein, nuts &amp; seeds' />
          <alias key='&quot;pf_pm&quot;' value='Protein, processed meat' />
          <alias key='&quot;pf_poultry_tot&quot;' value='Protein, poultry' />
          <alias key='&quot;pf_redm&quot;' value='Protein, redmeat' />
          <alias key='&quot;pf_redm_tot&quot;' value='Protein, red meat' />
          <alias key='&quot;pf_seafood&quot;' value='Protein, seafood' />
          <alias key='&quot;sat_fat&quot;' value='Saturated fat' />
          <alias key='&quot;sodium&quot;' value='Sodium' />
          <alias key='&quot;ssb&quot;' value='Sugar sweetened beverages' />
          <alias key='&quot;veg_dg&quot;' value='Vegetables, dark green' />
          <alias key='&quot;veg_exc_sta&quot;' value='Vegetables, excl. starchy' />
          <alias key='&quot;veg_oth&quot;' value='Vegetables, other' />
          <alias key='&quot;veg_ro&quot;' value='Vegetables, red orange' />
          <alias key='&quot;veg_sta&quot;' value='Vegetables, starchy' />
        </aliases>
      </column>
      <column aggregation='CountD' datatype='real' name='[impact_median_day]' role='measure' type='quantitative' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BLUEWATER (L)&quot;' value='Bluewater consumption (L/capita/year)' />
          <alias key='&quot;Cancer (cases)&quot;' value='Cancer (cases/population/year)' />
          <alias key='&quot;Cancer (deaths)&quot;' value='Cancer (cases)' />
          <alias key='&quot;CED (mJ)&quot;' value='Cummulative energy demand (mJ/capita/year)' />
          <alias key='&quot;CVD (deaths)&quot;' value='Cardiovascular disease (deaths/population/year)' />
          <alias key='&quot;FL (mrh-eq)&quot;' value='Forced labor risk (mrh-eq/capita/day)' />
          <alias key='&quot;Food_price ($)&quot;' value='Food price (USD/capita/year)' />
          <alias key='&quot;GHG (kgCO2eq)&quot;' value='Greenhouse gas emissions (kg CO2-eq/capita/year)' />
          <alias key='&quot;WATER (litereq)&quot;' value='Water scarcity footprint (L-eq/capita/year)' />
        </aliases>
      </column>
      <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:food_group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pf_redm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;added_sugar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit_juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_egg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_poultry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sodium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gr_refined&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pf_pm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;veg_sta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dairy_cow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;veg_oth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gr_whole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pf_seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sat_fat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;veg_ro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dairy_tot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pf_ns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;leg_tot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dairy_soy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;veg_dg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ssb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:diet_pattern:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Med&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Veg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_results_by_foodgroup_tableau_020724.csv' id='all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678'>
            <properties context=''>
              <relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='diet_pattern' ordinal='0' />
                  <column datatype='string' name='food_group' ordinal='1' />
                  <column datatype='string' name='outcome' ordinal='2' />
                  <column datatype='real' name='impact_median_day' ordinal='3' />
                  <column datatype='real' name='impact_median_year' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='all_results_by_foodgroup_tableau_022924' inline='true' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_results_by_foodgroup_tableau_022924' name='textscan.015nxhi1pxoi870zlbm4e15ixpmv'>
            <connection class='textscan' directory='/Users/bmb73/Library/CloudStorage/Box-Box/lasting_aim_3/model development/data_final/tables_figures/clean_data' filename='all_results_by_foodgroup_tableau_022924.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_cat' ordinal='1' />
            <column datatype='string' name='food_group' ordinal='2' />
            <column datatype='string' name='outcome' ordinal='3' />
            <column datatype='string' name='impact_median_day' ordinal='4' />
            <column datatype='real' name='impact_median_year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_cat' ordinal='1' />
            <column datatype='string' name='food_group' ordinal='2' />
            <column datatype='string' name='outcome' ordinal='3' />
            <column datatype='string' name='impact_median_day' ordinal='4' />
            <column datatype='real' name='impact_median_year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diet_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[diet_pattern]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>diet_pattern</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_cat]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>food_cat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_group]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>food_group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[impact_median_day]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>impact_median_day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_year]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>impact_median_year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_4524076938093170688]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_results_by_foodgroup_tableau_022924.csv' datatype='table' name='[__tableau_internal_object_id__].[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]' role='measure' type='quantitative' />
      <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
      <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;added_sugar&quot;' value='SUG' />
          <alias key='&quot;dairy_cow&quot;' value='Cow' />
          <alias key='&quot;dairy_soy&quot;' value='Soy' />
          <alias key='&quot;dairy_tot&quot;' value='Total' />
          <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
          <alias key='&quot;fruit_juice&quot;' value='Juice' />
          <alias key='&quot;gr_refined&quot;' value='Refined' />
          <alias key='&quot;gr_whole&quot;' value='Unrefined' />
          <alias key='&quot;leg_tot&quot;' value='Legumes' />
          <alias key='&quot;oil&quot;' value='OIL' />
          <alias key='&quot;pf_egg&quot;' value='Eggs' />
          <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
          <alias key='&quot;pf_pm&quot;' value='Processed meat' />
          <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
          <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
          <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
          <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
          <alias key='&quot;pf_seafood&quot;' value='Seafood' />
          <alias key='&quot;sat_fat&quot;' value='SFAT' />
          <alias key='&quot;sodium&quot;' value='SOD' />
          <alias key='&quot;ssb&quot;' value='SSB' />
          <alias key='&quot;veg_dg&quot;' value='DG' />
          <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
          <alias key='&quot;veg_oth&quot;' value='OTH' />
          <alias key='&quot;veg_ro&quot;' value='RO' />
          <alias key='&quot;veg_sta&quot;' value='Starchy' />
        </aliases>
      </column>
      <column caption='Impact Median Day' datatype='string' name='[impact_median_day]' role='dimension' type='nominal' />
      <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
          <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
          <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
          <alias key='&quot;Food_price ($)&quot;' value='USD' />
          <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
          <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
        </aliases>
      </column>
      <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:food_group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pf_redm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;added_sugar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit_juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_egg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_poultry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sodium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gr_refined&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pf_pm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;veg_sta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dairy_cow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;veg_oth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gr_whole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pf_seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sat_fat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;veg_ro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dairy_tot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pf_ns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;leg_tot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dairy_soy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;veg_dg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ssb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:diet_pattern:nk]' palette='Colorblind 1' type='palette'>
            <map to='#2e2585'>
              <bucket>&quot;Med&quot;</bucket>
            </map>
            <map to='#5da899'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#94cbec'>
              <bucket>&quot;Veg&quot;</bucket>
            </map>
            <map to='#dccd7d'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_results_by_foodgroup_tableau_022924.csv' id='all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE'>
            <properties context=''>
              <relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='diet_pattern' ordinal='0' />
                  <column datatype='string' name='food_cat' ordinal='1' />
                  <column datatype='string' name='food_group' ordinal='2' />
                  <column datatype='string' name='outcome' ordinal='3' />
                  <column datatype='string' name='impact_median_day' ordinal='4' />
                  <column datatype='real' name='impact_median_year' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_exc_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_refined&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_whole&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_seafood&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' max='1400.0' min='-700.0' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='276' />
                <format attr='maxwidth' value='276' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{6FC07335-7933-457B-93DA-A9E4DBC9BFA9}' />
    </worksheet>
    <worksheet name='Cost_meat'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' max='1400.0' min='-700.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='276' />
                <format attr='maxwidth' value='276' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{0BCA08D4-49A3-497A-B400-A0FB13D6430E}' />
    </worksheet>
    <worksheet name='FNDDS'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_exc_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_refined&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_whole&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_seafood&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='276' />
                <format attr='maxwidth' value='276' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{A982AB6E-A512-4AE1-A1AF-E6A8B735679A}' />
    </worksheet>
    <worksheet name='FNDDS (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;added_sugar&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;oil&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sat_fat&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sodium&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;ssb&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_dg&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_exc_sta&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_oth&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_ro&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_sta&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='276' />
                <format attr='maxwidth' value='276' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{6A8A1A81-DE23-488F-BE20-52BE609C4925}' />
    </worksheet>
    <worksheet name='FNDDS_meat'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='276' />
                <format attr='maxwidth' value='276' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{109CE5E5-FE36-44C4-A502-54EB68D9A144}' />
    </worksheet>
    <worksheet name='Meat_a'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]'>
            <groupfilter function='level-members' level='[none:food_cat:nk]' />
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='12' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='true' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{B05E8631-09A4-4BCE-8B49-EFCD9FFE763D}' />
    </worksheet>
    <worksheet name='Meat_b'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' max='1000.0' min='-1000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='19' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{54481B33-4631-4240-8CD5-0EECC41F9DED}' />
    </worksheet>
    <worksheet name='Other_a'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_exc_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_refined&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_whole&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_exc_sta&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_sta&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='9' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='76' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='313' />
                <format attr='maxwidth' value='313' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{D49DF200-3DF0-4177-B8F5-FA6BA149D821}' />
    </worksheet>
    <worksheet name='Other_b'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_exc_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_refined&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_whole&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_exc_sta&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_sta&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='332' />
                <format attr='maxwidth' value='332' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{3AD60B88-F626-4A18-85B5-DCB4C16AA721}' />
    </worksheet>
    <worksheet name='Protein_a'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='16' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='true' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{95BF07F8-9930-4E01-A4C9-00A6CC6C7738}' />
    </worksheet>
    <worksheet name='Protein_b'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='16' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{B96BF22D-4EB6-4ED0-B517-05CC4328A754}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='Seafood' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FLR (mrh-eq)' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG (kgCO2-eq)' />
                <alias key='&quot;WATER (litereq)&quot;' value='WS (L-eq)' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_cat:nk]' member='&quot;Dairy&quot;' />
              <groupfilter function='member' level='[none:food_cat:nk]' member='&quot;Protein&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;WATER (litereq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;WATER (litereq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='132' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='12' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='12' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='517' />
                <format attr='maxwidth' value='517' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{DAEC9806-897A-4E3C-9F8C-FC7E13414BC7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Cost_combined'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='63250' id='3' name='Cost' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone h='34750' id='10' name='Cost_meat' show-title='false' w='90400' x='8800' y='64250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone h='34750' id='11' type-v2='empty' w='8000' x='800' y='64250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='16' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='63250' id='3' is-fixed='true' name='Cost' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='34750' id='10' is-fixed='true' name='Cost_meat' show-title='false' w='90400' x='8800' y='64250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4614DEC5-91BD-4614-9E97-DDCD99CDA4A1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='46111' id='3' name='Other_a' show-title='false' w='49500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46111' id='10' name='Other_b' show-title='false' w='42312' x='57188' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29333' id='12' name='Protein_a' show-title='false' w='49500' x='500' y='47000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29333' id='14' name='Protein_b' show-title='false' w='42312' x='57188' y='47000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22778' id='16' name='Meat_a' show-title='false' w='49500' x='500' y='76333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22778' id='18' name='Meat_b' show-title='false' w='47500' x='52000' y='76333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46111' id='19' type-v2='empty' w='7188' x='50000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29333' id='20' type-v2='empty' w='7188' x='50000' y='47000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22778' id='21' type-v2='empty' w='2000' x='50000' y='76333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='46111' id='3' is-fixed='true' name='Other_a' show-title='false' w='49500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46111' id='10' is-fixed='true' name='Other_b' show-title='false' w='42312' x='57188' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='29333' id='12' is-fixed='true' name='Protein_a' show-title='false' w='49500' x='500' y='47000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='29333' id='14' is-fixed='true' name='Protein_b' show-title='false' w='42312' x='57188' y='47000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='22778' id='16' is-fixed='true' name='Meat_a' show-title='false' w='49500' x='500' y='76333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='22778' id='18' is-fixed='true' name='Meat_b' show-title='false' w='47500' x='52000' y='76333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{99F6EEF3-D6EF-4DAA-8748-45979121B73B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='20' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='65778' id='3' name='FNDDS' show-title='false' w='49500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98222' id='14' type-v2='empty' w='2223' x='50000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98222' id='15' name='FNDDS (2)' show-title='false' w='47277' x='52223' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32444' id='18' name='FNDDS_meat' show-title='false' w='49500' x='500' y='66667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='65778' id='3' is-fixed='true' name='FNDDS' show-title='false' w='49500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98222' id='15' is-fixed='true' name='FNDDS (2)' show-title='false' w='47277' x='52223' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32444' id='18' is-fixed='true' name='FNDDS_meat' show-title='false' w='49500' x='500' y='66667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E569BD0F-5468-48D8-BCD9-689384762136}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='51'>
    <window class='worksheet' name='Meat_a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7CBFBA52-B8E7-4AD8-927D-02C613F25E85}' />
    </window>
    <window class='worksheet' name='Meat_b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
                </multibucket>
                <axis>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{884FF447-6AD5-47E7-86AD-14F1DE2E6F07}' />
    </window>
    <window class='worksheet' name='Protein_a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B8F49733-456F-4101-AC33-904957AFAA5B}' />
    </window>
    <window class='worksheet' name='Protein_b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Protein&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2ACC141A-FB37-44B8-8DE4-EA3F3E498AE3}' />
    </window>
    <window class='worksheet' name='Other_a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{5C02D8C8-1721-4AC6-A205-D7D2807979C2}' />
    </window>
    <window class='worksheet' name='Other_b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A236908D-42FB-4424-8EEB-D6E4A520158F}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Meat_a'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Meat_b'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Other_a'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Other_b'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Protein_a'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Protein_b'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FEBD8FEB-788A-4513-BD55-7C4339FA091B}' />
    </window>
    <window class='worksheet' name='FNDDS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E953DDFB-68D4-4323-B1FD-F20449F878C1}' />
    </window>
    <window class='worksheet' name='FNDDS_meat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{5C15446B-A569-4428-BB7B-2EAD7BBFCE2A}' />
    </window>
    <window class='worksheet' name='FNDDS (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{F376396A-F978-4229-854A-BB4657F65221}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='FNDDS'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FNDDS (2)'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FNDDS_meat'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7A74F591-3C22-47CF-A2E0-56ACB37BD74B}' />
    </window>
    <window class='worksheet' name='Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{01A47E8E-AFF5-41BF-83BE-CEEB93AA937A}' />
    </window>
    <window class='worksheet' name='Cost_meat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{CED6F46A-5A82-4138-90DF-0507412ADECC}' />
    </window>
    <window class='dashboard' name='Cost_combined'>
      <viewpoints>
        <viewpoint name='Cost'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Cost_meat'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4D0D5431-980C-4A52-871E-D4E3A6B398A4}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='279'>
            <card pane-specification-id='0' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE2C2F1A-8568-4C15-A4DD-850BCDEC30FD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Cost' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Cost_combined' width='384'>
      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
      TABERDL1/wNKSARN4EnPCwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='332' name='Cost_meat' width='384'>
      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
      mPj5+TF16lQAtm/f3u0X7tTX17vNA3A0B3X1NNTW1sauXbu6DFyVSuXsXO3NxDmbzYbFYsFi
      sfT6ycFRmZaVlbm9o8eTWbNm4e3tjclk6vQGAzquRWZmJoDHp6LenqvjGjs64DtTVFTU5Sg5
      IfpiUAcAuIfA9u3b2bNnj8s6YWFhzJgxA4C0tDT++te/uv2jam9vJzc3l/fff58NGza4BYC/
      vz9PPPEEAIcOHWLz5s1uFYher+ejjz7yGEKDyTPPPINWq8VoNPLuu+967Bw3Go2kpaXxq1/9
      yu18HCOyvvnmG5f5GdDRSX/8+HF+/etfdxuUgHOW8p49e9z21dLS4rGC/+qrr3jjjTd44403
      et3+HRMTg0qlwmQy8eWXX7r9Dm8NxICAAObOnQvArl272LZtm1uZrly5wocffkh7ezs6na7T
      /qjenGtkZCQajYYbN26wZcsWt4l0BoOBP//5z/z2t7+lrKys5xdAiF4YlH0At3KEwLp16ygu
      LuYf//gHN27ccJmwtXjxYqqqqrh06RLHjh3j+PHjhIaGEhISQl1dHVVVVc67VV9fX4/D/ubN
      m8eFCxfQ6/UcOXKE7Oxs59f7lZSUDJmmoeDgYF588UW2bNlCQ0MD69atc77B08vLi/LycpeX
      ot06Bv7xxx/nyJEjNDU18dvf/pb77ruPkSNHUl5eTklJifM6Tp06tdvRKYsXL+b06dM0Nzfz
      29/+ltjYWIKCgmhqakKv1/PGG2+4dNzb7XaOHTvm/LmriX2ehIWFMXPmTDIzMzl27Bi5ublE
      R0ejVqspLy9Hp9Px9ttvu2wzb9489Ho958+fJyMjg6ysLOf7maqrqykvL8dut+Pv78/LL7/c
      6Uig3pyrVqtl0aJF7NixgxMnTnDlyhUSExOxWq0UFBQ4m5GCg4MJCAhwu2ERoj8MaAA4/iH1
      ZGidIwR+//vfU1xcTHp6OiNGjHC+g2b48OG8+eabZGZmsmfPHhobG6mqqnKO84aOVy3Pnj2b
      OXPmuAx5vPkYb7/9NmlpaRw6dIiWlhaXt0wGBASwcOFCvLy82Lx58x35fuLb6bT1JCUlhbFj
      x7J582YKCgqcb/B00Gg0JCUlMX/+fLe2/uHDh/P666+zadMmSktLuXjxost2CQkJPPPMMyQm
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
      fl5/tfbpdpOhGn1HauWs5vvr69jSBCSEEGFKhoGGEa2bPgIhB623Hyg5+Jpa+6Rmk6VaOav5
      /vo6thSAMBIIQzC1zkHr7QdKDr6m1j6p+WWqVs5qvr++jh16P0WEEEKMiBSAMKIoindOoNv8
      OS5fURS0HnNw9/7ffVst99v3u7ftz+Pj8Xh8tq37fa7GEutOvvp83h3XlznfTc2/qdHEdrvd
      w/b/zvfe8A//8A//4KvkhHYsFsuw0R3/+Z//SVVVFZWVlaSmpjI4OMif/vQnysvLMRgMpKen
      s2fPHi5fvszZs2eZM2eOqqfb9fX1lJSUcOHCBZKTk0lMTFRtWwBXrlxh37591NbWEhMTg8lk
      4v3336eqqoqenh4mTpzI8ePHOXnyJKdPn2bGjBk+GV2hKAplZWX84Q9/YNmyZej1+vvu+7Zt
      27h27RpXr15l9uzZfjk+DocDgOrqavbv38/Zs2eZNGkSDoeD06dPM2nSJA4fPozb7SY5Ofm+
      MS5fvsx7771Hbm4usbGxdHZ23vO52rVrFzNmzKC+vp5z586NaC3tiooKDhw4QGVlJXV1deTm
      5t7z+Tx//jwej4f4+Hg++ugjcnJyMJlMD43rcrnYunUrNTU1nDx5kpycHAYGBu7J+erVq6Sn
      pz9y/+9269Ytfvazn7Fo0SL0ej1btmzh+vXr1NXVMX36dO+xsNlsbN++nTlz5oyoX+Po0aOU
      lZVRVVUFQHJy8qhi79q1i8rKSioqKpg5cyZXrlwZ9t6jiJDQ1NQ07PZ//ud/DrtdUlKi9PX1
      KR6PR3n//feVgYEBZfv27YqiKMr58+eVy5cvq5rf1q1bFZfLpbhcLmXr1q2qbktRFGXv3r1K
      T0+P9/bhw4eVhoYGRVEU5f333x/2/4aGBuXw4cM+2a7b7VauXr2qfPzxx4rL5VIU5d59b25u
      Vg4cOKAoiqIcOHBAaW5u9svx6evrU/r6+pT3339f8Xg8Sl9fn1JSUqJ0dXUppaWlSmNjo1JS
      UvLQGFeuXFEOHz6stLW1KYpy7+dKUYY+ezabTXn33Xe9x+BRuru7vf/+4IMP7vv5PHXqlFJf
      X68cOXJEuXDhwmPv/4ULF5QLFy7cN+cLFy6MaP/v5PF4lC1btiglJSVKf3+/cvnyZeX8+fOK
      oijK9u3blYGBAe/f4QcffKB0dHSMOPa2bdsUt9vtvT2a2A0NDcqRI0eG3Xf3ey9NQCGqs7OT
      7du3s3fvXjweDw6Hg/j4eHQ6HSaTia6uLjIyMgDIzs7m1q1bquZjMBiG/ac2t9tNaWkpu3bt
      wm63c+vWLbKzswEwm8309vZiNpsB3+6/Xq9n1qxZw+67e9/vzOX2tv15fEwmEzqdjvj4eO9Z
      wdWrV/n0009Zv379Q187e/bsYb8y7/5cAbS1tfHuu+/y3HPPjXhfEhMTcbvd7Nq1iylTpjzw
      83nkyBGam5uZN2/eiPf3+vXrvP/++1y+fJk5c+bcN+fy8vIR7f+dTpw4QXFxsffM8c73NSMj
      g66uLlwuF1u2bGHKlCmkpKSMODZASUkJH3/8MX19faOK3djYyI0bN9ixYwc7d+5EUZR73nsp
      ACHkxIkT7Ny5E5vNxltvvcXmzZsZN24c586dA4a3g5pMJu8fv8Ph0PziKF979tln2bx5M/Pn
      z+fgwYMYjUbv/jqdTqKjo3E6nYD/9//uY/+oZgy13Pl5mD59OmlpaTQ1NY0pDkBqaioLFy7k
      6tWrI45ht9v54x//SH5+PosXL37g57OoqAir1crAwMCIY+fk5LBhwwYSEhKorq6+b86Pu/9W
      q5Xjx4/T2tpKXV0dZWVlwz5jt99Xg8HAypUrqampeaw+l82bN/P888+zcuVK9u7dO6rYERER
      rFixgueff57U1FRqa2u9j91+vhSAELJ06VI2btyIy+WiqqoKRVGwWq1ERUWRlZXF1atX6enp
      wePxkJKSQm1tLW63m9OnTzN9+nRVc4uOjqa5uZmmpiaio9VfGP7SpUs4HA6sVivR0dHk5uZS
      VlbG4OAgVqsVk8mE1WplcHCQsrIycnNzVcvl7n2fOHEiFy9exOPxcPHiRSZOnOjX4+PxeOjp
      6eHq1aveq8dNJhMbN27kwIED9Pf3jzjW3Z8rGDrjKS4upqenZ9iXzsP8+c9/ZuXKlYwfPx6n
      0/nAz2dsbCybNm1i+/btI/pC7enpoa2tjYSEBKZNm0ZbW9t9czYajY+1/9HR0fz1X/81c+fO
      JSMjg7y8PKZPn87p06dxu93U1taSkpKCTqcjOzubuXPncvDgwREdC4Dz58/jcrmw2WxERkaO
      Kva0adM4deoUiqLQ19dHXFzcPe+9dAKHiDs7gY1GIzU1NZSVlZGQkEBhYSETJkzg0qVLVFVV
      8eyzzxIZGUl6ejqlpaVMnTqVadOmqZrflClTvL+Y1q1bp3ozh91u5+jRozidTp588knS09Np
      amri/PnzPPPMM8TExDBhwgRKS0sxm80UFBT4ZLu9vb2Ulpai1+uprq7GaDRSWFg4bN+joqKI
      jo7m0KFDFBYWkpGR4Zfjc/sXZF5eHn/+859xOBysWLECnU6H0WgkJSWFKVOm0NzcTGpq6n1f
      v2fPHux2O01NTbhcLgoKCoZ9rm6fzaSnpzN9+nSuX7/ubbp4GKvVSk1NDTU1Nd5O4Pt9Ps1m
      M0lJScTFxeF2u4mNjX1k7C+//NL7hfrkk08yceLEe3LW6XSYzeaH7v+d9Ho9UVFRREVFERER
      QXZ2NmazGbvdzhdffMFTTz1FQkKC91iMGzeOrq4u0tLSRvTe9vX18cUXX9DV1cWaNWtISEh4
      7NjR0dEYjUaOHDnC+PHjmT59Ojk5OcPfe+VxzktEwBrJXEAivKk5F5AITtIEJIQQYUoKgBBC
      hClpAhJCiDAlZwBCCBGmpAAIIUSYkgIghBBhSgqAEEKEKSkAQggRpqQACCFEmJICIIQQYUoK
      gBBChCkpAEIIEaakAAghRJiSAiCEEGFKCoAQQoQpKQBCCBGmpAAIIUSYkgIghBBhSgqAEEKE
      KSkAQggRpqQACCFEmJICIIQQYUoKgBBChCkpAEIIEaakAAghRJiSAiCEEGFKCoAQQoQpKQBC
      CBGmpAAIIUSYkgIghBBhSgqAEEKEqYgHPdDc3OzPPMQYGQwGYmJixhTD7XZ7Y6kh2OM7nU6M
      RqMqsUcSv+lmD7tKLo86fs7UWNY9WzDq16tN7eM7FqGa2wMLQFZW1qgTEv5nsViIj48fUwyX
      ywVARMQDPxZhHd9utxMZGalK7JHEt/R18cEfLow6/obnp/LCS2P7jKhJ7eM7FqGa24iagDo6
      Ojhy5AjHjx+npaXlkc/3eDz09PQ88PG9e/ficDhGnuUj9Pb2cuTIEY4dO/ZYZy4nTpwAhiqo
      EEKEmxEVgMbGRq5evYqiKPzmN7+htbUVj8cDfP3labVasdlsAAwMDPC73/0Ot9uNoih4PB66
      u7tRFAWACRMmYDAY8Hg8KIpCb2+v97HRuHXrFjqdjhkzZnDo0CHa29uBoV+ED4t7u5jt2rVr
      1NsWQohgNeJz5aysLJ544gna2tpobm7m97//PTk5OQwODjJ58mTOnDmD0+lkw4YNVFZW0tTU
      xNtvv82rr77Ku+++S2pqKr29vfzd3/0dO3fu5Ec/+hH/8R//gcViwW63M3fuXNavXz/qHYmL
      iyM9PZ3Zs2fT0dFBeXk5XV1dWCwWnn32Wb788ktWrVqF0Wjk008/5bnnngPg5s2b1NTU8Omn
      nzJr1iwqKiqIjIzEbrdjs9l47rnniIyMZNu2bbz44oujzk8IIQLNiAvA5cuXuXXrFu3t7axb
      t459+/Yxfvx4li9fzk9/+lN++MMf0tfXx5YtW3jzzTdpbGzke9/7HlVVVURFRbFw4UI+/fRT
      Ojo6hsV94403sNvtlJaWjmlHTp06RV1dHXa7nc2bN3Pp0iVefvllbDYb+/fvx2AweM8G7mx+
      Gj9+PNOmTfMWhLNnzzJt2jTy8vKora2lrKyMyZMnS5+I0FzxoklcrPrRqF8vAzvE3UZcAKZM
      mcK6detISkpCrx9qOVq6dOmw5yiKgk6nQ6fTeZuIAGw2G319faxYsYLo6Oh7Yut0utHm77V4
      8WIKCr4e4XA7pl6vf6zmJZPJRF5eHjC0z8ePH6e7u5t169aNOUchxqKivZl/OrR71K9flJTJ
      38oPGXGHERUAnU5HbGwsKSkp9338ySef5F//9V9xOp1861vfIioqisHBQX75y1/yxhtvYDAY
      +PLLLxkcHCQ3N9enO/AgSUlJfPbZZ3R2drJmzRoaGxvZuXMnRqORwcFB734BpKam8umnnzJ7
      9ux74uTl5XnPYqxWK8eOHeMb3/iGX/ZBCCHUpFPG0vt6h4GBAQwGg3c4ksfjwWazERsbCwyd
      BURGRnrPHvzBarUSFRXlHRZosViIiYm57zjxgYEBoqKi7snv+PHjZGRkMG3aNI4cOUJubi6Z
      mZl+yf9xyDDQ0B8G6pMzgGeeG/Xr1RaqQy3VNpbcfPaXcvdFSHq93vvlD9y36UdtcXFxw24/
      7AvyfhdR1dfXYzAYmDZtGgDLly9X7SIjIYTwN3V+KoWISZMmMWnSJO9t+fIXWkqNjWfT7MJR
      v97s8snJvgghUgBEyGjpd9NkcarWzOh2uTFEuFWJPbL4BrKTZ446vs5ya9SvFaFJCoCf9ff3
      YzQaMZlMWqcSclr63ZxrtWudRsDKxkmx1kmIgCKzgfrZlStXvFcqCyGElkLiDKClpQWz2Uxs
      bCw1NTVMmzaNixcv0t7ejl6vZ9WqVdTU1NDS0kJ/fz8rVqwgIiKC1tZWOjo6yMzMRKfTUVZW
      xoQJEygoKMDtdnPy5ElsNhtPPPEETU1NlJeXk5+fz+TJk6mtreXq1atMmjSJuXPncvbsWVpb
      W5k/fz7jx4/nypUr1NXVUVRUREZGBrdu3eLMmTO0tLSQnZ2t9SETQojQOAOoq6ujr68PgEuX
      LgHwxRdfsGjRIlwuF21tbVy4cIGZM2dSVFTE559/jt1u57333sPj8ZCSksLevXt59tln6e3t
      paqqiv3795OZmcnChQvp7+/n3LlzrF+/ni+++AKXy8WxY8dYu3Ytqamp9PT0UF9fzzPPPIPR
      aKSlpYWbN2+ybt06Dhw4gMvlYvfu3axcuZLp06dreaiEEMIrJM4A7iczMxOz2UxiYiJut5uI
      iAjS0tKGPWfBggUUFRVhtVoZN24cRqORuXPncunSJfr7+5k6dSowVGBiY2O5ceMGU6ZMwW63
      k5+fz6VLlxgYGGD58uWkpKRw5coV71XQcXFxNDQ0MHHiRDo7O5k6dSrR0dEBO5Y4FMxLsjEr
      tgeDSp3AWq8HMFbtHdI/IoYLiQIQFRVFZWWlt0nnftxuN7W1tTQ0NJCeng7g7YiNjY2ltbWV
      uro6zpw5w9KlS7lx4wZHjx4lOTmZcePG0drayqxZs3A6h0aZWK1WJk+ezJ///Gdmz55NXFwc
      iYmJnD17ltWrV/PZZ5+RnZ2Ny+UiOTmZa9euMXHiRCorK6UJSCX9PZfobjmkdRoBy6bMgJx7
      r3YX4ctnVwJryePxcOnSJeLi4khISCAtLY1bt26RlpZGX18fkZGR7N69m+nTp2M2m5k8eTIu
      l4u+vj6Sk5OBoSuBy8vLyc7O9l7pe+PGDWw2GzNmzGBgYIDa2lrGjRtHRkYG7e3tNDQ0MGnS
      JFJTU7lx4wZdXV3Mnj2b6Ohourq6aGxsZPz48aSkpNDT00NNTQ2ZmZmkpqb6/ExArgSGrpZD
      UgAewqbMYE7hq1qn8UCherWt2saSW0gUgJE4duwYTzzxhNZpqEYKgBSAIUNIFAAAFHpJREFU
      R5ECMHqhmltIdAKPRCh/+QshxGgE7RmAxWLROoWA0tHRMeZfKLen8FbrSlq14zsGu3A5enwy
      vfj9eDweVSczVDu+zW4gOXWiavHHyuVyqXZ2OFahmpsUgBAS7k1AwTob6M//v1KuVbSpXgCK
      Fqdy9tT9B0mM1P/+8RryZo7zUUbDhWozi9oCYjZQfxvrl12okYIYvK5VtHH2dIPq28maYBzz
      dix9gz7KRgSCkOgDaG1t5cMPP6SkpIRjx4498vm+WgReURTvwvJCCBFsQqIAWK1WcnNz2bRp
      E06nk9raWmDoAq76+nrv8/r7+6mqqqK3t9d7n8PhoKenh8rKSqxWKw0NDTQ2NgJDX/DV1dXe
      L/k7ryUAuHXrFvv376exsRG3W71ZIoUQQg1B2wT0IE6nk4iICI4fP47BYMBut9PR0cG0adP4
      +OOPWbRoEVar1fv85uZmDhw4wKJFi/j1r3/NqlWruHjxIq+88gqHDx8mOzubyspKZs+ejaIo
      9PX10dvby82bN0lPT2dgYMA7n5AQozHjqzZ1tfsAsrITKFo4tk7geHOUj7IRgSBkCkBZWRl7
      9uxhzZo1TJw4kYMHD5KTk4NOp6OyspLBwUHWrl1LVlYWFRUVw15bUFBAfn4+VVVVFBUV0dfX
      h8PhoLGxkdjYWKKioigvL2fx4sVUVlai1+vp6upiyZIlXLp0iQULFmi01yIUvPS9BQw4HapP
      BeHotfDUi3PHFGNCYqKPshGBIGQKwKJFi8jIyKC0tJSCggKio6NZsGABERERFBYWUl5eTn9/
      PzDUtDMSsbGxFBUVodPpUBSFzz77jE2bNqEoCrt3D63Nento451x1RqGKELTB+dPUnlL/b6k
      RUmZlHWPbTt/v3I9M9OzfJSR0FpIFIDo6Gg8Hg9ZWVmsXr2aw4cP89RTT7Fnzx4iIyPJyclh
      /vz57NixwzuB221RUVHetYNvTxaXmJhIREQES5cuZffu3RiNRvLz88nJyWHXrl1ERkaSlpaG
      TqfDZDKxc+dOvvnNb/LOO+/w3e9+N2DHCwshxJ2C9jqAQNPb28v169cpKCjQZPsyFUTwXgfw
      jwc/lTMAQnesvdpkKogAkJCQoNmXvxBCjIa0VQihsVcXLPFbJ/Cq+YVjijExMcVH2YhAIAUg
      xFV0DFLZObKFQNTuxA76+B4FnV6NK2GNgPGr+OoNIDDbB+nzxI4pRmX3IKDO1cDqHd+Ry0uJ
      ZGZq+Ax1lQLgZy0tLcTFxfltKguLw0OzxeWXbYnApsNDs0M+Cw+THa/eGVggkj4AP2toaBh2
      JbIQQmglJM4Arl27Rnp6OklJSZw8eZIlS5awfft29Ho9/f39vPzyy5w+fZr29nYGBwdZsWIF
      SUlJXL16lfr6ehYuXEhbWxv19fVERESwfv16+vv7KS0tRVEUnnnmGc6fP09vby/JycksX76c
      Y8eO0d7eTkJCAqtWreKTTz5BURSmTJnCvHnz2Lt3Lw6Hg4kTJ7JgwQIuXLhAbW0tra2tsiSk
      ECIghEQB6Orqwmw2A3jn7XE6nbzyyit88cUXtLe309raysaNG/F4POzYsYNvfvOb7N27l7/5
      m7/BbDZz4sQJXnrpJSorK7lw4QL19fWsW7eOmJgYOjs7sdvtbNiwgZ07d2Kz2aipqeHll1/G
      ZDJ5rxzevHkzADU1NaSlpVFUVMSHH35IXl4eVVVVvPjii5SVlfn12MSb9GTFj+xtDvo2er/0
      AajXRq92/Hi7nqzIwP2TV3v/RyLeFF6NIoH7aRijqKihjpzbY8L1ej0GgwGDweAdabFo0SJS
      UlLo6+sj8atL3NPT0zl//jxut5vY2KEOM4vFQn19PXv37kWn+//bO7egJq9vgf9CIBBKoBAC
      IRERFEEUOtbSsbbVWnE6Q6tjGe04p7Wvffi/deY/0zPnxZdzHs5rn32pWmeUem2tUxRRAY+C
      WhHE0gjIJY1cQsgVctvngZIREzU0BCHs3+P37W/ttfb+kvXt21oK/H4/n3zyCb/99hter5cD
      Bw6wadMmTp8+TX5+Punp6fT09DA2NkZaWhoTExOv7at/ncbDmlRbVGUDf59qVsYpHs1ylx/v
      XTrxlj8y5iEv1xo3+bESb/ujIVn1JiAXgZcVaWlpPHr0CIvFwthY5IQXz0byzMvLm3NPo9Fg
      Npvp7++nra2Nbdu20dfXx/Xr18nJySE/P5+kpCTKysoYHBwkOTkZk8nE5s2buXLlCuPj43g8
      HrZs2UJ7ezs1NTV0d3dTVlZGX18fOp2OX375JRRYbjGdgcP6u8yTKwFmcgL7J/543WosabIL
      dpJTsPN1q7FoJMRJ4GAwSEdHBxkZGWRlZaHT6RgdHUWn02G320lNTeXnn3+mtLSUzMxM1qxZ
      g9/vx263k5OTA4Db7ebhw4cYjcZQZM++vj48Hg9lZWW43W56e3vJz89Hr9czMjLCwMAARUVF
      5Obm0tfXh9VqZePGjajVaqxWK4ODg6xatQqtVovNZsNkMlFQUEBubu6Cnyp80UlgmShdMotH
      lKFWSAfwMl7kABL1JHBCOIBouHHjRkInhpcOQPIqpAN4NSvNAayYFY9E/vOXSCSSf8KyHQHI
      HLhzGRsbi/gV4JuewO+NbhF42e/SibP8eCdsibd8z7QSderSzVwXb/ujIVn1Jimp2WHX/X7/
      ko3yG4tu0gEkEDIa6PKMBrqQ8v/3vxv4o/tpxHvvbM2l/f8ib5JYCjzrAP79X7sp/ztT2lIg
      UaeAlqZLi4LFCqWwXJAOUQLwR/dT2m8PRLxnKEx54b2lhsP+emMCrRSWrQN4FovFQlNTEyqV
      Cp1O99rm+202G/fv32fHjh0xy7JaraSnp4fOM0gkEslCkxCLwE6nk/Xr11NXV4fP56O3t5fJ
      yUl8Ph8WiwUhBCaTicHBwdAzDocDk8mEz+dDCMGff/4ZOkUcCAQwmUxYLBYAvF4vPT09jI+P
      AzNDrocPH86J6TM4OMjAwEBoGgJmksSMjY3R09PD1NQUjx49Cn2pu1wuurq6QtnJHA4HPT09
      TE5O4vf7aW1tpbu7+4XnGiQSiSRWEmIE8CwpKSkIIbh48SI+n4/q6mru3r1Lbm4uDocDs9nM
      mjVraGhooKqqiqGhIbq7u0OHtDZu3MiDBw8oLCxkeHiYnJwcTp8+TUVFBZ2dnWzfvp2TJ0+y
      detWzp07xxdffEFjYyOZmZlhC1iXLl1Cr9fjcrlobW1ly5YtXLhwgQMHDlBfX8/777/PqVOn
      OHToEJ2dnWRlZfHTTz+xf/9+HA4HExMTZGVlkZub+5paU7LcKHvJvLnBmMU7765eRG3mx7Nr
      AJpMOfJdDBLGAfT39yOEQKFQUFJSQktLCwcOHECtVtPZ2UltbS0A9fX1OBwOPv30U7KzZ1b7
      r169isFgID8/n+HhYdatW4fH4yEQCJCUlERpaSk+nw+FQoHT6cTr9eJyudDpdIyMjOB2u6mt
      rcVms3Hnzp2QTiqVih07djAwMMDTp0+prKzEZDJhNptRq9U4nU4yMjJwOBwIIVCpVGi1Wlwu
      F0VFRRQXF4cOpUkk0fDef6ym1JUT8V6mX6D/SLfIGkWPP+AnWTnzl6Rdnf6atVkZJIwDWLNm
      zZyUjBqNBrVaDcxM6bhcLpxOJ2lpaRgMBh4+fMh7772H0+kkPT2ddevWkZKSwsTEBMFgkIqK
      Cm7evMmTJ0/Q6/UYjUYuXLiA1+slOTmZyspKioqKSE5OxuPxMD09jc0W3XbLWcfz1ltvodfr
      USqVmM1mtm7dyv3794GZkYzD4UCv18dtW6Mk8bjR1/PC/MILkRN4sSjPK0D3htzoEW+Uhw8f
      Pvy6lVgI1Gp12M4gnW7ma2f16tU0NjYyMjJCTU0Ner0ei8VCW1sbeXl5bNy4kWvXrtHX10dR
      URF2u53r168DsGXLFvr7+7l58yY5OTmUl5eTnZ3N9evXGR8fp7i4GIPBQGNjI263m5KSktAf
      /LM6pKamhiKWrlq1CqVSSWtra+gZm81GR0cHBQUFrFq1CqPRyO3bt5mcnIwqdpDX6415m1rw
      72Bq8dqLvdzlBwKBuO4FXwj5N/p6GHM7I95bpdYwPBX53lLjw+L1S8oBxLvvYyEW3ZbtOQDJ
      XF4UCmI+LPd9+vIcAPxP44WEGAH8587P2JBneN1qhEjUcwAJsQtIIpFIJPNHjgASBDkCkCOA
      V2E2mzEYls5X9fMk6ld2vFmRJ4ElkqXMmT8mMTv+SQL2+M3RG3EzbB6Pm/yFYSmvUSSWbv96
      RyungCQSiWSlIh2ARCKRrFCkA5BIJJIVilwDkEjiQLk2FaNmfgnOA/4AymRlnDQChcOJQaOO
      m/xYibf9sZCoukkHIJHEAaOiG78iupPhswQUfpSK+P0kJ1CRreiNm/xYibf9sZCYuu2UDkAi
      iQeO8XtMOftftxpz8IgycMmcwJIZcgp2yjUAiUQiWalIByCRSCQrFOkAJBKJZIXywlAQZrN5
      sXWRxIDf7485BMLsqxCv8NPLXf6zCUuWo/ylHM4A4m9/LCSqbjIWUIKwUHFefD4fKSnz2764
      UuQHAgEAlMr4bAeMt/zZdKSxxoyKF/F+N2IhUXVbmi5NIpFIJHFHbgOVzCHew9zlLD/emdlW
      eua3pTrFAomrm3QAkjnEa/ohEeQvZ+e1HIj3uxELiarbyn7jJBKJZAUjHYAEmNlJ8Px+gNlF
      yZeVeRXPlxdChHL3vqie+RAMBufIW2j5kep7VTvNh+dlLbT859viZfUsJtG8F0uJhXyHYkEI
      EaZLLLrJKaAVRiAQ4Nq1a/z+++98++23AHR2dnLv3j28Xi/79u3jzTff5Pjx46Snp5Oenk5t
      bW1YGa1W+9J6hBCcOHGCtLQ0Jicnqaurw+/3c/bsWVQqFZs3b2bTpk1cvHgRt9uN2+3myy+/
      nNdwtr29HZPJhFKppKamhmAwOEf+hg0bwuyYL+fOnSMYDPL5559H1U7RMj4+zqVLl0hPT8du
      t/PVV1/R3d29YPIBmpubGRoawu12c/DgwdD15+1QKpV0dHSwfft2mpqaKCwsZO3atfOqK1qC
      wSCnTp1CpVJhtVrZu3cvSUlJYe/F+fPn2bt3L0+ePMFkMrFr16646BOJ0dFRvv/+e7777jtS
      U1PD+mBWN4/Hw9mzZzl48OCirN+YzWYaGhrQaDRUVFRQWloau25CkhAMDw9HVc7hcIje3l5x
      6tSp0LWjR4+KYDAo7Ha7OHPmjHjw4IG4d++eEEKI+vp64Xa7w8q8CqfTGSrX1dUl7t69K86c
      OSPsdrsIBoPi6NGjwu12i/r6eiGEEPfu3RMPHjyI2l6/3y9+/PHHOdeelx/Jjvnw6NEj0dzc
      LE6ePCmEiK6dosXhcAifzyeEEOLSpUtibGxsQeXP6iuEEAMDA6KpqUnY7XZht9vD6rFaraKh
      oUEMDg5G1bexEAgExOTkpBBCiN7eXtHS0hLWb0IIcfLkSeHxeMSRI0eE3++Pq07PEgwGxbFj
      x8SZM2eEy+WK2Aez78Px48fF2NjYoul24sSJOW2xELrJKaAVRkZGBsXFxXOuqVQqFAoFGo0G
      r9fL6OgoRqMRAL1ej9VqDSvzKt544w28Xi8//PADV65cYdOmTXi9XjQaDQqFIvQFqNfrATAa
      jYyOjkZtx8TEBBaLhdOnT3PixAkcDkeY/Eh2RIvX66W9vZ1t27bNq52iJSMjg+TkZNra2nA4
      HOTk5Cyo/KmpKTIzM4Hwto3Ul11dXVy4cIHPPvss6jr+CUlJSWRmZjI4OMjVq1fZvHlzWL8B
      PH36lCNHjrBnz55FXYBtbW2luro6tK8+Uh/4/X6OHTtGSUnJK0fCC4nFYuHcuXMcP36c/v7+
      BdFNOoAVwvnz52loaHhpGfH3vGxKSkroj8Hr9YZ+lM+WeRGtra2cPXsWs9mMSqXi0KFDfPjh
      h3R0dIQ9r1Kp5tQTzWGWWfk+n4+Kigrq6urYtWsXzc3NYfJfZseLmG2nX3/9FbVazY0bNxga
      GmJoaCisDWKRD4Ts2L9//5xheizyZ0lJScHn84WejdS2z7ZVaWkpOp2O4eHhqOv4p9y5c4e2
      tja+/vpr1Gp1mC4Aubm5vPvuu3R1dcVdn1mcTifNzc1YLBb6+/u5detWxD5QKpXs3LkTk8m0
      qOsoBoOBuro6Dh48SHNz84LoJh3ACmHv3r3s3r074r1gMIjNZqOrqwuDwUBpaSm3b98mEAjQ
      29uLVqsNK/Mitm3bFppXnl2cSkpKwuPxYDAY6OrqwmazEQwG0Wq19Pb2EggEuH37NqWlpa+0
      Y1a+Xq9naGiI6elp7HY7Go0mTH4kO6Jtp5qaGj7++GOqqqrQ6XTodLqo2ila+Y8fPyY9PZ3q
      6mp8Pl9oETRW+bMolUqcTidTU1PcunWL9evXh+5F6kuVSsW+ffu4fPkyLpcr6nrmi9fr5f79
      ++zZsydk8/P9Nqt/dXU1NpuN3t7FyWGgVqv55ptvqKqqQq/XU15eHrEPFAoFRqORqqoqGhsb
      F0U3mPkdjYyMMDU1hUqlWhDdlIcPHz4cf9Ul8cbhcER1xP+vv/6iqamJ5ORkenp6yMrKorKy
      kitXruD1etmxYwcajYbp6WlaWlr46KOPyMrKori4eE6ZVy16ZWRkEAgEaGlpQaFQ8MEHH1BY
      WEhHRwc9PT3U1taSmppKXl4eDQ0NrF27lnXr1kVtr0KhoLCwkMuXL+N2u9m+fTurV6+eIz87
      OzvMjmhRqVSkpaWRlpZGcnIyBQUFYW0QqZ2ixel0Mjw8jMlkwmQyodfr2bBhw4LJBygsLKSh
      oYHMzEzefvvt0NdieXl5WF+mpKSg1WopKSnBbDaTm5s7r7qiZWpqipGRkZDdKpWKysrKOf02
      O9LJy8ujtLSUx48fh6Y64klSUtKcPjcajWRmZkbsg7y8PPLz87Fareh0ukWZplq7di3Nzc2Y
      TCZ2796NVquNWTcZCyhBWKhYQJLEZanHApIsPnIKSCKRSFYo0gFIJBLJCkVOAUkkEskK5f8B
      PPrbtiiJDXkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='FNDDS' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='FNDDS (2)' width='384'>
      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
      1fwfSYEqRoqVdwcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='332' name='FNDDS_meat' width='384'>
      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
      6Ky/pWuH2eZiFSeEw+G41wkAGG/v3r1JVwIvxq5du5SdnT3vOVZFiFUuuhCrI7P+2S09PT1x
      x1PV398vaaYznWuCdC7RaFQjIyN2YOXm5uqDDz7Q+Pi4jh8/rjNnzqilpSWujt/lcqm6ulqP
      PfZYwv1qampUU1Oj7u5unThxQg0NDaqrq4s7x+fz6fnnn497uliKtp87d07SzOT1f531ffj9
      fvn9/pSuufaJiAAAllF+fr6kxF+myVjnXfu0UFxcrEAgkDCmuxDrV3Zubq5efPHFlK+bq5zS
      5XKpsrJSlZWVmpyc1Pnz53Xu3Dn98ssvikQiqq+vl9Pp1NatW+e8Z2lpqUpLS/Xcc88pHA6r
      o6NDp0+f1h9//KHOzk59+OGHevPNN+01DEvRdo/HI0nXvWjsRpCXl6dQKKTt27drw4YNKV1j
      fX4LAQAsI+sX7fDwsGKx2ILDENaQxbXj7EVFRQoEAnE15qmwxu+j0ajKysrmncRdDKfTKZ/P
      J5/PpyeffFJ+v19nzpzR999/nzQAZsvLy1N5ebnKy8vV2dmpjz76SENDQzp16pQefvjhJWu7
      dY9UA/hGlp+fr1AopMzMzIQJ81REIhGqgIDllJ+fL6fTqampKR09enTec8fGxtTW1iZJCSuC
      rQqjY8eOaWxsbFHv73A49M8//+j06dOLbH1qMjMztWvXLknSyMjIorem8Pl8dnno7PLHpWi7
      FQDt7e326uX/Kqu66+TJk5qamlr09T09PQQAsJwyMjL0yCOPSJIaGxvtrQHm8t1332liYkIe
      jydhK4Dy8nJ5PB6Nj4/r66+/nnfPmNn7zrjdbntl8bfffrvg/j0jIyMJpZStra0Ldp7WfbOy
      suImxcfGxuJW3y50/ewy0qVo+z333KOsrCzFYjF7AVUyix1eW24VFRVKT09Xf3+/vU4lmenp
      aZ08edJeeS7NDI0RAMAyq6qqktvtViQS0bvvvpswjDM5OamDBw/qp59+kiRVV1cnDBW5XC49
      ++yzkqQTJ06otrY2ocO6dOmSPvvsM33yySdxrz/11FPKyMhQOBzWW2+9pY6OjoQ2hsNh1dfX
      64033tCRI0fijjU3N2v//v06dOjQnJ1wKBTSwYMHJc2M888equnt7dXHH3+s9957b873HR8f
      V1NTk9rb2yUpYWjjetuek5NjT0w3Nzerrq4uYWO2YDCo999/P+HaG01BQYG9LqW+vl5ffPFF
      wnqBiYkJ/f777zpw4ID8fn9cABQXFzMHACw3t9utF154QX6/X0NDQ3rnnXd02223yev1KhaL
      qbu7W9FoVNJMyaQ1Bn6tzZs323vudHZ26vXXX5fX65XL5bKrX6TEipfc3Fzt2bNHX375pa5c
      uaLa2lq53W4VFxcrPT1dFy9etN9fmilFnS07O1uxWEyHDx9WY2OjCgsLdcstt+jq1avq6+uz
      h6RWrFih3bt3x13rcrmUlpamCxcuqLa2Vjk5OSopKVFeXp76+/sVDAbt4Yy5Fspdb9ulmUVk
      Z8+eVTAYVEtLi9ra2nT77bcrIyNDgUDgPzU0tHPnTg0MDKijo0PHjh3T8ePHlZ+fL6/Xq+Hh
      YQ0MDNjf54oVK+wiBGnmaZQAgLGsmvVUateX2r333qv9+/fr008/VW9vrwKBgL2wR5oZR6+p
      qZl35bHD4dDTTz+tjRs36quvvlJ/f3/c5Ka1F9Fci9ceeOABlZWVqa6uTl1dXbp69ar++usv
      +7g1qVtVVZWw1mDv3r369ddfdeTIEQWDQfX399sliRafz6dnnnkmoUx13bp1OnDggJqamvTz
      zz8rEokkbLzmdru1bdu2pAvlrqft0kwIvfrqq6qvr1dzc7P+/vvvuDbcfPPN2rFjh9LT01VX
      V/ev/X0sxQR8dna2Xn75ZR09elQNDQ0aHR3VwMBAXNnwypUrtXXrVlVWVibsCuuY/jc3vwaw
      oHA4rGAwqL6+Pnk8Hq1Zs0YlJSWL7njGx8fV29ur0dFR5eXlqaCgYMF1CdLMFguXL19WKBRS
      enq6CgsL5fV6U+qgwuGwLl++rMHBQcViMXm9XhUVFaW0PiEWi2lwcFCDg4MKh8Nyu90qKCjQ
      6tWr59y+eqnbLs3MNfT09OjixYtKS0tTUVGR7rzzziWrjlpu0WhUoVBIV65c0apVq1RUVJSw
      HcdsBAAAGOq/GXMAgOtGAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAA
      gKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAAwFAE
      AAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAM
      RQAAgKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAA
      wFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGMp5vTdoa2tbinYA
      AJYZTwAAYCjH9PT09P+7EQCA5ccTAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIA
      AMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQxEAAGAo
      AgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAA
      hiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQxEA
      AGAoAgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAYigAAAEMRAABgqP8BqeGEilCfeB4AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='356' name='Meat_a' width='384'>
      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
    </thumbnail>
    <thumbnail height='372' name='Meat_b' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Other_a' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Other_b' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Protein_a' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Protein_b' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ/0lEQVR4nO3d+VPU9x3H8dd3T2C5BATBO9GKGiUVIZqrmZgmaZrWjk07mck/0H+p+akz
      mTZt06m16aSpo2lSY42OV4LihUpAUDkWlj3Y4/vdb3/IsBMCXoTD8n4+fhP2i5/vfHe/z++9
      ju/7vgAA5gSWegAAgKVBAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADAqNJeJJicnlUwm53ssAIBFNKcAJJNJTUxMqLKyUpLk+77y+bxCoZCCweC8DhCP
      l3w+L0mKRCJLPBIsJM/z5LquIpGIHMdZ6uFggcwpAJJUVVWlpqYmSd+8WTKZjCKRiKLR6LwN
      Do+fVColx3EUi8WWeihYQNlsVoVCQbFYTIEAR4qXK5YsABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      QnOdMJ1Oa3R0VJJULBaVy+UUCoUUDofnbXB4/ORyOUlSNptd4pFgIRUKBbmuq2w2q0CA7cTl
      as4BiMfjisfj8zkWAMAimnMA6uvrVVNTI0nyfV/ZbJY9AAOm9gCi0egSjwQLaWoPoKysTI7j
      LPVwsEDmHICKigrV1dVJkjzPUyaTUSQSYcWwzKVSKTmOo1gsttRDwQLKZrMqFAqKxWIcAlrG
      WLIAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgVGiuE8bjcWUymdK/C4WCgsGgAgGaspy5ritJ
      CoXm/NbB/4FisSjP8xQOh5d6KFhAc/4Up9NppdPp+RwLAGARzTkALS0tWrlypaRvthYymYwi
      kYgikci8DQ6Pn6m9voqKiiUeCRZSPp9XPp9XRUUFe/XL2JwDEAwGS7uHnucpFAopFAqxy7jM
      BYNBOY7Dcl7mpj7T4XCYACxjLFkAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwKrTUA3ic
      FIsFDfX+damH8VjzPE+SlAwGl3gkWEjFYlHFYlHpEKuI5Yyl+21+Uenxi0s9CuCxkVvqAWBB
      cQgIAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGMWXwn+L44TUsOaNpR7GYy2Xz0uS
      opHIEo8EC8l1Xbmep0gkooDjLPVwsEDmHIDh4WElEglJku/78jxPgUBAgcD/+05F3VIP4LHm
      eZ4kKRgMLvFIsJCKxaKKxaKCwaAcArBszSkAjuMol8spl8vN93gAAIvE8X3ff9SJXNdVPp9X
      NBotbQn6vi/f9+U4DlsMy9jUcpa0DPb2cD/FYlGS+EwvY3P6BMfjcXV3dyuZTJZ+5nmestls
      6RABlq9sNqtCobDUw8ACKxQKymazSz0MLCA24QDAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACj5u1ZQIFA4JvnhnBz0LIXiUS4MciAUCjEIz+WuXkNACv/5c9xHIVCPEPQAlb+yx9rbAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADBqSQPg+77S6bSSyWTp+0cfdrpc
      Lqd0Ov1I02FxeZ6niYkJltEyVywWlUqllM/nNYevGMci8n1f+XxenufJ9/35exTEowwgkUjo
      9OnTunnzpoaHh+V5nsrKyrRmzRo9/fTTeuKJJxSNRmedtqurS+fPn9fg4KCKxaIaGhq0efNm
      Pfvss7NOg0czPDysCxcuTPu+59msWrVKnZ2dM37u+75u3bqls2fP6saNG0qlUqqurtaTTz6p
      9vZ2rVq1iucIPaYKhYJOnz6tnp4eSVJbW5u2bds266M/pjbevvjiC/X09Gh0dFShUEjr16/X
      zp07tXXrVpbzYyKVSpXWt+Pj45qcnFQwGNSKFSsWNwDFYlEDAwN6//33devWLQUCgdKbKx6P
      69atW7p06ZLefvttbdu2bdq0+Xxen376qQ4fPqx8Pl+a7u7du/rqq690/fp1vfPOOyovL1/M
      WVp2+vv7dfToUSUSifs+82f79u3q6OiY9iH3PE+XL1/WwYMHdffuXYVCIQUCAY2Ojqqnp0cX
      LlzQW2+9pSeeeILnRj2G+vv79ec//1n5fF7FYlH19fVqbW2d9bUTExN67733dOXKFQWDQQWD
      Qfm+r4GBAX355Zd6/fXX9eyzzyocDi/yXGBKNpvVxx9/rOPHjyubzSoYDMpxnNJn9vbt24sb
      gP7+fv32t79VOp3Wzp07tXfvXm3YsEGRSETDw8O6dOmS+vv7VVZWNm0613V17Ngxffzxx3Ic
      R/v371dbW5sikYguX76so0eP6uzZswoGg3rnnXcUiUQWc7aWlUQioWQyqR07dmjHjh33XFHX
      1tZOW/n7vq/+/n796U9/0vj4uHbv3q3nnntOa9euVW9vr44dO6Yvv/xSv//97/Wb3/xGTU1N
      izVLeAjpdFp//etfFQwGtW7dOvX29sr3/VkP6eRyOb333nu6ePGiNm3apJdfflmbN29WOp3W
      qVOn9Mknn+gf//iHIpGIOjs7eajcEslms7px44ai0ai2bt2qnTt3qrGxUbW1tXJdV319fYsX
      gHw+ryNHjiiZTOr555/Xq6++qhUrVpR+39LSopaWFrmuO2PXcWRkRBcuXJDneXrjjTf08ssv
      l17T2dmpyspK/eEPf9CVK1d0/fp1bd26dbFma1nxPE/JZFK5XE47d+5UZ2fnQ2+pe56nc+fO
      aXR0VO3t7XrzzTdVX18vSdqyZYtqamrkuq6++uornT17Vj/5yU8WclbwCFzX1eeff66vv/5a
      u3bt0tq1a/X111/f8/WXL19WT0+PVq9erZ///OfavHmzJKmyslKvvvqqfN/XkSNH1NXVpS1b
      tqiurm6xZgXfUlZWpj179qi+vl6bN2+e8VlesWLF4p0E7unp0bVr19TY2KjXXntt2sr/2777
      DPJisaj+/n719fXpySef1DPPPDNjmq1bt2rXrl1KpVLq6uqS67oLNh/LWTab1cTEhBzHUX19
      /SMdw81kMjpz5ozq6+vV2dk540Pf1NSkjo4O1dTU6OTJk8rn8/M9fMzR9evXdfz4cdXW1mrf
      vn2qqKi452sLhYLOnj0r13W1e/dubdq0adrvp7b6161bp2vXrunOnTucGF4iZWVlevbZZ7Vl
      y5ZZN+Qcx1mcAHiep7Nnz2piYkKdnZ2qra196Gmz2ax6e3uVyWT01FNPKRaLzVgxOY6jzs5O
      eZ6n/v5+xePx+Z4FEyYnJ5VMJlVZWXnflcBsent7NTIyolWrVmn9+vWzLqNNmzapvr5eQ0ND
      6uvrm8+hY47Gx8d17NgxjYyM6JVXXtHatWvv+/rh4WHdunVLoVBI7e3tsy7nFStWaMuWLUom
      k7p586YKhcJCzgK+h0UJQDqd1ujoqCRpz549jzRtPp/X+Pi4ampq1NLScs8Tk42NjVq1apUy
      mcwDr2DB7DKZjCYmJlRXV/fI3/o1NDSkcDisNWvWqLKyctbXVFdXa+3atQoEAhoeHp6vYWOO
      PM/T+fPn1d3drdbWVu3evfuBy3x8fFzZbFYtLS2lQ3zfFYlE1NLSoqqqKo2OjrJH/phatMtA
      k8mkJicn1dDQoGg0qmQyqXw+r2QyqfHxcVVVVam2tlbl5eUqLy+f9iYsFAqlrdLv/u7bAoGA
      6uvrdefOHaXT6cWYrWUnk8kokUioublZmUxG8Xj8m93EQEDBYFDhcPieYRgbG1M4HFZNTc09
      l9HU1mEwGNTY2NhCzw7uo1gs6vr16/rPf/6j8vJy7d+//6H2+lKplAqFghoaGu55fshxHMVi
      MVVUVGhiYkKe58338PEIpg7BFYtFFYtFeZ5XOkG8KAFIpVLK5XIKhUI6duyYLl26pIGBgdIN
      YL7vq6amRm1tbXruuee0evXq0uVjrusqnU6roqLigZeUVVVVqa+vT5OTk4sxW8tONptVKpXS
      tWvX9O6775ZW/uXl5WpoaFBLS4s2bdqkdevWzbjcduqy0Vgsdt//IxaLKRAIKJFILOSs4D58
      31cqldKJEyc0OjqqN99886Hvz0in03JdV9XV1fd9XSQSKW3scSPg0vJ9Xz09PRobG9PExITG
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 12' width='384'>
      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
      pQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhF
      KQBERCxKASAiYlEKABERi1IAiIhYlCPaBVyvzp49SygUinYZMgb8fj99fX0YhhHtUsaFaZo3
      7b6NFR2jkRmmaZrRLuJ61N3djQ7NzaG/v5/09HRiYmKiXcq48Pl8uFwu7HZ7tEu5bnm9XhIS
      EqJdxnVHLYCLSElJiXYJMkZsNvV0ioxE/2eIiFiUWgBXyO/34/V6L3g9Pj4et9sdhYpEREZH
      AXCFTpw4wcsvv3xBF9GaNWuYPXt2lKoSEblyCoArFAwGyc/P58EHHxz2usvlilJFIiKjowAY
      BbvdTlxc3IjLTNOktbWVw4cP4/F4yMrKIiUlhdmzZ2O32wkGg5w8eZKqqirC4TB5eXlkZmZS
      XFxMOBzm9OnTHDlyhGAwSEFBAXPnzr1pZ6+ISHRpEHiMnTp1iieeeIL+/n6Ki4vp7u7mP//z
      PwmFQpimyVtvvcVrr71GcnIy+fn57N27lyNHjgDQ0NDA5s2bcbvd5OXlUVlZSXV1dZT3SERu
      VmoBjEJlZSU//vGPI7/bbDY2btxIUVER//mf/8mdd97J0qVLMQyDKVOmRE7w3bYMaHEAACAA
      SURBVN3d7N+/n7/4i78gKysLgL6+PjweDwCtra3k5+dz++23Y7PZWLJkie5FEJFxowAYhZKS
      EjZu3Bj53TAMkpOT8fv9tLW1MX/+/BHvOmxqaiI/P5/MzMyLrvedd97hiSeeYNasWcyePZu0
      tLRx2w8RsTYFwCi43e7IFfxn+f1+gItetRuGcckr+vT0dH70ox9RVVXF8ePH2bFjBxs2bGDh
      woVjU7iIyGdoDGAMuVwucnNzqaioIBwOY5omTU1NkeV5eXk0NjZSX1+PaZoEAgHa29sjywcG
      BnC73cybN4+vf/3rfPnLX+bgwYPqBhKRcaEWwCg0Nzezbdu2Ya/NnDmT/Px8NmzYwKZNmzh8
      +HBk1s95SUlJrF69mv/4j/8gNzeX3t5eAoEAc+bMAWDv3r3U1NRQVlZGOBxmz549TJ48+Zru
      m4hYhwLgCuXl5bFo0aILrsrP9/kXFBTwd3/3dzQ3N+NwOHA6nfzqV7/CZrNhGAarV69m0aJF
      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
      xMTE5H/KX4T9ICWnxkzFAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
