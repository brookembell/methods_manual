<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Colorblind 1' type='regular'>
      <color>#4059ad</color>
      <color>#6b9ac4</color>
      <color>#97d8c4</color>
      <color>#eff2f1</color>
      <color>#97d8c4</color>
      <color>#f4b942</color>
    </color-palette>
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all_results_by_foodgroup_tableau_020724' inline='true' name='federated.00lcrex1owyp5i15js4py0ea9o2w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_results_by_foodgroup_tableau_020724' name='textscan.0y7ug450lz2k2612zwc081yuwtnp'>
            <connection class='textscan' directory='/Users/bmb73/Library/CloudStorage/Box-Box/lasting_aim_3/model development/data_final/tables_figures/clean_data' filename='all_results_by_foodgroup_tableau_022924.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_group' ordinal='1' />
            <column datatype='string' name='outcome' ordinal='2' />
            <column datatype='real' name='impact_median_day' ordinal='3' />
            <column datatype='real' name='impact_median_year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_group' ordinal='1' />
            <column datatype='string' name='outcome' ordinal='2' />
            <column datatype='real' name='impact_median_day' ordinal='3' />
            <column datatype='real' name='impact_median_year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diet_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[diet_pattern]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>diet_pattern</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_group]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>food_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_day]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>impact_median_day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_year]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_020724.csv]</parent-name>
            <remote-alias>impact_median_year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='all_results_by_foodgroup_tableau_020724.csv' datatype='table' name='[__tableau_internal_object_id__].[all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678]' role='measure' type='quantitative' />
      <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Med&quot;' value='MED' />
          <alias key='&quot;Veg&quot;' value='VEG' />
          <alias key='&quot;Vegan&quot;' value='VEGN' />
        </aliases>
      </column>
      <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;added_sugar&quot;' value='Added sugar' />
          <alias key='&quot;dairy_cow&quot;' value='Dairy, cow' />
          <alias key='&quot;dairy_soy&quot;' value='Dairy, soy' />
          <alias key='&quot;dairy_tot&quot;' value='Dairy, total' />
          <alias key='&quot;fruit_exc_juice&quot;' value='Fruit, whole' />
          <alias key='&quot;fruit_juice&quot;' value='Fruit, juice' />
          <alias key='&quot;gr_refined&quot;' value='Grains, refined' />
          <alias key='&quot;gr_whole&quot;' value='Grains, whole' />
          <alias key='&quot;leg_tot&quot;' value='Protein, legumes' />
          <alias key='&quot;oil&quot;' value='Oil' />
          <alias key='&quot;pf_egg&quot;' value='Protein, eggs' />
          <alias key='&quot;pf_ns&quot;' value='Protein, nuts &amp; seeds' />
          <alias key='&quot;pf_pm&quot;' value='Protein, processed meat' />
          <alias key='&quot;pf_poultry_tot&quot;' value='Protein, poultry' />
          <alias key='&quot;pf_redm&quot;' value='Protein, redmeat' />
          <alias key='&quot;pf_redm_tot&quot;' value='Protein, red meat' />
          <alias key='&quot;pf_seafood&quot;' value='Protein, seafood' />
          <alias key='&quot;sat_fat&quot;' value='Saturated fat' />
          <alias key='&quot;sodium&quot;' value='Sodium' />
          <alias key='&quot;ssb&quot;' value='Sugar sweetened beverages' />
          <alias key='&quot;veg_dg&quot;' value='Vegetables, dark green' />
          <alias key='&quot;veg_exc_sta&quot;' value='Vegetables, excl. starchy' />
          <alias key='&quot;veg_oth&quot;' value='Vegetables, other' />
          <alias key='&quot;veg_ro&quot;' value='Vegetables, red orange' />
          <alias key='&quot;veg_sta&quot;' value='Vegetables, starchy' />
        </aliases>
      </column>
      <column aggregation='CountD' datatype='real' name='[impact_median_day]' role='measure' type='quantitative' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BLUEWATER (L)&quot;' value='Bluewater consumption (L/capita/year)' />
          <alias key='&quot;Cancer (cases)&quot;' value='Cancer (cases/population/year)' />
          <alias key='&quot;Cancer (deaths)&quot;' value='Cancer (cases)' />
          <alias key='&quot;CED (mJ)&quot;' value='Cummulative energy demand (mJ/capita/year)' />
          <alias key='&quot;CVD (deaths)&quot;' value='Cardiovascular disease (deaths/population/year)' />
          <alias key='&quot;FL (mrh-eq)&quot;' value='Forced labor risk (mrh-eq/capita/day)' />
          <alias key='&quot;Food_price ($)&quot;' value='Food price (USD/capita/year)' />
          <alias key='&quot;GHG (kgCO2eq)&quot;' value='Greenhouse gas emissions (kg CO2-eq/capita/year)' />
          <alias key='&quot;WATER (litereq)&quot;' value='Water scarcity footprint (L-eq/capita/year)' />
        </aliases>
      </column>
      <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:food_group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pf_redm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;added_sugar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit_juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_egg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_poultry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sodium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gr_refined&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pf_pm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;veg_sta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dairy_cow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;veg_oth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gr_whole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pf_seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sat_fat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;veg_ro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dairy_tot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pf_ns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;leg_tot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dairy_soy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;veg_dg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ssb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:diet_pattern:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Med&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Veg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_results_by_foodgroup_tableau_020724.csv' id='all_results_by_foodgroup_tableau_020724.csv_8D39C0FC12A84F4BBAF945328C111678'>
            <properties context=''>
              <relation connection='textscan.0y7ug450lz2k2612zwc081yuwtnp' name='all_results_by_foodgroup_tableau_020724.csv' table='[all_results_by_foodgroup_tableau_020724#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='diet_pattern' ordinal='0' />
                  <column datatype='string' name='food_group' ordinal='1' />
                  <column datatype='string' name='outcome' ordinal='2' />
                  <column datatype='real' name='impact_median_day' ordinal='3' />
                  <column datatype='real' name='impact_median_year' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='all_results_by_foodgroup_tableau_022924' inline='true' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_results_by_foodgroup_tableau_022924' name='textscan.015nxhi1pxoi870zlbm4e15ixpmv'>
            <connection class='textscan' directory='/Users/bmb73/Library/CloudStorage/Box-Box/lasting_aim_3/model development/data_final/tables_figures/clean_data' filename='all_results_by_foodgroup_tableau_022924.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_cat' ordinal='1' />
            <column datatype='string' name='food_group' ordinal='2' />
            <column datatype='string' name='outcome' ordinal='3' />
            <column datatype='string' name='impact_median_day' ordinal='4' />
            <column datatype='real' name='impact_median_year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='diet_pattern' ordinal='0' />
            <column datatype='string' name='food_cat' ordinal='1' />
            <column datatype='string' name='food_group' ordinal='2' />
            <column datatype='string' name='outcome' ordinal='3' />
            <column datatype='string' name='impact_median_day' ordinal='4' />
            <column datatype='real' name='impact_median_year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diet_pattern</remote-name>
            <remote-type>129</remote-type>
            <local-name>[diet_pattern]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>diet_pattern</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_cat]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>food_cat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_group]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>food_group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>outcome</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[impact_median_day]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>impact_median_day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impact_median_year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[impact_median_year]</local-name>
            <parent-name>[all_results_by_foodgroup_tableau_022924.csv]</parent-name>
            <remote-alias>impact_median_year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_4524076938093170688]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_results_by_foodgroup_tableau_022924.csv' datatype='table' name='[__tableau_internal_object_id__].[all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE]' role='measure' type='quantitative' />
      <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
      <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;added_sugar&quot;' value='SUG' />
          <alias key='&quot;dairy_cow&quot;' value='Cow' />
          <alias key='&quot;dairy_soy&quot;' value='Soy' />
          <alias key='&quot;dairy_tot&quot;' value='Total' />
          <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
          <alias key='&quot;fruit_juice&quot;' value='Juice' />
          <alias key='&quot;gr_refined&quot;' value='Refined' />
          <alias key='&quot;gr_whole&quot;' value='Unrefined' />
          <alias key='&quot;leg_tot&quot;' value='Legumes' />
          <alias key='&quot;oil&quot;' value='OIL' />
          <alias key='&quot;pf_egg&quot;' value='Eggs' />
          <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
          <alias key='&quot;pf_pm&quot;' value='Processed meat' />
          <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
          <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
          <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
          <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
          <alias key='&quot;pf_seafood&quot;' value='SEA' />
          <alias key='&quot;sat_fat&quot;' value='SFAT' />
          <alias key='&quot;sodium&quot;' value='SOD' />
          <alias key='&quot;ssb&quot;' value='SSB' />
          <alias key='&quot;veg_dg&quot;' value='DG' />
          <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
          <alias key='&quot;veg_oth&quot;' value='OTH' />
          <alias key='&quot;veg_ro&quot;' value='RO' />
          <alias key='&quot;veg_sta&quot;' value='Starchy' />
        </aliases>
      </column>
      <column caption='Impact Median Day' datatype='string' name='[impact_median_day]' role='dimension' type='nominal' />
      <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
      <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
          <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
          <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
          <alias key='&quot;Food_price ($)&quot;' value='USD' />
          <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
        </aliases>
      </column>
      <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
      <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:food_group:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pf_redm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;added_sugar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit_juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_egg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pf_poultry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sodium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gr_refined&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pf_pm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;veg_sta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dairy_cow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;veg_oth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gr_whole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pf_seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sat_fat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;veg_ro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dairy_tot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pf_ns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;leg_tot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dairy_soy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;veg_dg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ssb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:diet_pattern:nk]' palette='Colorblind 1' type='palette'>
            <map to='#2e2585'>
              <bucket>&quot;Med&quot;</bucket>
            </map>
            <map to='#5da899'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#94cbec'>
              <bucket>&quot;Veg&quot;</bucket>
            </map>
            <map to='#dccd7d'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_results_by_foodgroup_tableau_022924.csv' id='all_results_by_foodgroup_tableau_022924.csv_A9E8B51D06A8412B87E3E8F3D9FDC5BE'>
            <properties context=''>
              <relation connection='textscan.015nxhi1pxoi870zlbm4e15ixpmv' name='all_results_by_foodgroup_tableau_022924.csv' table='[all_results_by_foodgroup_tableau_022924#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='diet_pattern' ordinal='0' />
                  <column datatype='string' name='food_cat' ordinal='1' />
                  <column datatype='string' name='food_group' ordinal='2' />
                  <column datatype='string' name='outcome' ordinal='3' />
                  <column datatype='string' name='impact_median_day' ordinal='4' />
                  <column datatype='real' name='impact_median_year' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='FIG2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CVD &amp; USD</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;Veg&quot;</bucket>
              <bucket>&quot;Vegan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_dg&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_oth&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_ro&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='40' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='40' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</cols>
      </table>
      <simple-id uuid='{2CD16502-55A1-4330-ACDD-6B8C4CAD4CD8}' />
    </worksheet>
    <worksheet name='FIG2 (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GHG &amp; FL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='40' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='15' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='40' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</cols>
      </table>
      <simple-id uuid='{3F6F5D68-C5A7-4CCC-8D81-55A2F1DA9712}' />
    </worksheet>
    <worksheet name='FIG2_All'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='36' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='40' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='10' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</cols>
      </table>
      <simple-id uuid='{FCB73EE2-6632-4F90-9DF9-98BBBA55F113}' />
    </worksheet>
    <worksheet name='FIG2_Fru (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_exc_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;fruit_juice&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_refined&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;gr_whole&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_exc_sta&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_sta&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='348' />
                <format attr='maxwidth' value='348' />
                <format attr='minheight' value='720' />
                <format attr='maxheight' value='720' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{D49DF200-3DF0-4177-B8F5-FA6BA149D821}' />
    </worksheet>
    <worksheet name='FIG2_Pro'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='60' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='326' />
                <format attr='maxwidth' value='326' />
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{82DE4119-DB81-4AD5-9DCF-6256A3F5F802}' />
    </worksheet>
    <worksheet name='FIG2_Pro (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='100' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{B05E8631-09A4-4BCE-8B49-EFCD9FFE763D}' />
    </worksheet>
    <worksheet name='FIG2_Pro (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='60' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{54481B33-4631-4240-8CD5-0EECC41F9DED}' />
    </worksheet>
    <worksheet name='FIG2_Pro (4)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column datatype='string' name='[food_cat]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_cat]' derivation='None' name='[none:food_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dairy&quot;</bucket>
              <bucket>&quot;Fruit&quot;</bucket>
              <bucket>&quot;Grain&quot;</bucket>
              <bucket>&quot;Protein&quot;</bucket>
              <bucket>&quot;Vegetable&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;leg_tot&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_egg&quot;' />
              <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_ns&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;dairy_cow&quot;</bucket>
              <bucket>&quot;dairy_soy&quot;</bucket>
              <bucket>&quot;dairy_tot&quot;</bucket>
              <bucket>&quot;fruit_exc_juice&quot;</bucket>
              <bucket>&quot;fruit_juice&quot;</bucket>
              <bucket>&quot;gr_whole&quot;</bucket>
              <bucket>&quot;gr_refined&quot;</bucket>
              <bucket>&quot;leg_tot&quot;</bucket>
              <bucket>&quot;pf_ns&quot;</bucket>
              <bucket>&quot;pf_egg&quot;</bucket>
              <bucket>&quot;pf_poultry_tot&quot;</bucket>
              <bucket>&quot;pf_redm_tot&quot;</bucket>
              <bucket>&quot;pf_poultry&quot;</bucket>
              <bucket>&quot;pf_redm&quot;</bucket>
              <bucket>&quot;pf_pm&quot;</bucket>
              <bucket>&quot;pf_seafood&quot;</bucket>
              <bucket>&quot;veg_exc_sta&quot;</bucket>
              <bucket>&quot;veg_dg&quot;</bucket>
              <bucket>&quot;veg_ro&quot;</bucket>
              <bucket>&quot;veg_sta&quot;</bucket>
              <bucket>&quot;veg_oth&quot;</bucket>
              <bucket>&quot;sat_fat&quot;</bucket>
              <bucket>&quot;oil&quot;</bucket>
              <bucket>&quot;sodium&quot;</bucket>
              <bucket>&quot;added_sugar&quot;</bucket>
              <bucket>&quot;ssb&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' />
              <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='11' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='11' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='bold' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='11' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]' value='false' />
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='339' />
                <format attr='maxwidth' value='339' />
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk] / ([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]))</rows>
        <cols>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk] * [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk])</cols>
      </table>
      <simple-id uuid='{63BE8C3A-B9ED-463E-8376-EB662B0906D9}' />
    </worksheet>
    <worksheet name='Fig2a_h'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;added_sugar&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;oil&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sat_fat&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sodium&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;ssb&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;GHG (kgCO2eq)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='GHG Emissions (kgCO2-eq/capita)' />
            <encoding attr='space' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' field-type='quantitative' major-origin='0.0' major-spacing='100.0' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='196' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='12' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='398' />
                <format attr='maxwidth' value='398' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk])</rows>
        <cols>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]</cols>
      </table>
      <simple-id uuid='{D7495712-E9F3-4252-9499-BDA3F8D54C08}' />
    </worksheet>
    <worksheet name='Fig2b_h'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_cow&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_soy&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;veg_exc_sta&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;Food_price ($)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='Food Expenditures (USD/capita)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='112' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='160' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='450' />
                <format attr='maxwidth' value='450' />
                <format attr='minheight' value='1520' />
                <format attr='maxheight' value='1520' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk])</rows>
        <cols>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]</cols>
      </table>
      <simple-id uuid='{4752160F-836E-4016-96E6-AF31288BE56D}' />
    </worksheet>
    <worksheet name='Fig2c_h'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;CVD (deaths)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='CVD Deaths (deaths/population)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='104' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='284' />
                <format attr='maxwidth' value='284' />
                <format attr='minheight' value='880' />
                <format attr='maxheight' value='880' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk])</rows>
        <cols>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]</cols>
      </table>
      <simple-id uuid='{B52401D2-6376-4A16-9C82-D4A4FF5E9736}' />
    </worksheet>
    <worksheet name='Fig2d_h'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;added_sugar&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;dairy_tot&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;oil&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_pm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_poultry&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;pf_redm&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sat_fat&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;sodium&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='&quot;ssb&quot;' />
                <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='member' level='[none:outcome:nk]' member='&quot;FL (mrh-eq)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' scope='cols' value='FL Risk (mrh-eq/capita)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='196' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='false' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]' value='12' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='398' />
                <format attr='maxwidth' value='398' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk] / [federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk])</rows>
        <cols>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]</cols>
      </table>
      <simple-id uuid='{9F7B2D4F-9550-4CB0-86BC-279E09AAB202}' />
    </worksheet>
    <worksheet name='Table 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Absolute change in enviromental (per capita/per year), economic (per capita/per year), and health (per year) outcomes, by dietary pattern</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_results_by_foodgroup_tableau_022924' name='federated.0q3i7iy0692hf41f2zj0y0cyqfqf' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3i7iy0692hf41f2zj0y0cyqfqf'>
            <column caption='Diet Pattern' datatype='string' name='[diet_pattern]' role='dimension' type='nominal' />
            <column caption='Food Group' datatype='string' name='[food_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;added_sugar&quot;' value='SUG' />
                <alias key='&quot;dairy_cow&quot;' value='Cow' />
                <alias key='&quot;dairy_soy&quot;' value='Soy' />
                <alias key='&quot;dairy_tot&quot;' value='Total' />
                <alias key='&quot;fruit_exc_juice&quot;' value='Whole' />
                <alias key='&quot;fruit_juice&quot;' value='Juice' />
                <alias key='&quot;gr_refined&quot;' value='Refined' />
                <alias key='&quot;gr_whole&quot;' value='Unrefined' />
                <alias key='&quot;leg_tot&quot;' value='Legumes' />
                <alias key='&quot;oil&quot;' value='OIL' />
                <alias key='&quot;pf_egg&quot;' value='Eggs' />
                <alias key='&quot;pf_ns&quot;' value='Nuts seeds' />
                <alias key='&quot;pf_pm&quot;' value='Processed meat' />
                <alias key='&quot;pf_poultry&quot;' value='Poultry, unprocessed' />
                <alias key='&quot;pf_poultry_tot&quot;' value='Poultry, total' />
                <alias key='&quot;pf_redm&quot;' value='Red meat, unprocessed' />
                <alias key='&quot;pf_redm_tot&quot;' value='Red meat, total' />
                <alias key='&quot;pf_seafood&quot;' value='SEA' />
                <alias key='&quot;sat_fat&quot;' value='SFAT' />
                <alias key='&quot;sodium&quot;' value='SOD' />
                <alias key='&quot;ssb&quot;' value='SSB' />
                <alias key='&quot;veg_dg&quot;' value='DG' />
                <alias key='&quot;veg_exc_sta&quot;' value='Non-starchy' />
                <alias key='&quot;veg_oth&quot;' value='OTH' />
                <alias key='&quot;veg_ro&quot;' value='RO' />
                <alias key='&quot;veg_sta&quot;' value='Starchy' />
              </aliases>
            </column>
            <column caption='Impact Median Year' datatype='real' name='[impact_median_year]' role='dimension' type='quantitative' />
            <column-instance column='[diet_pattern]' derivation='None' name='[none:diet_pattern:nk]' pivot='key' type='nominal' />
            <column-instance column='[food_group]' derivation='None' name='[none:food_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[outcome]' derivation='None' name='[none:outcome:nk]' pivot='key' type='nominal' />
            <column caption='Outcome' datatype='string' name='[outcome]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BLUEWATER (L)&quot;' value='BWT' />
                <alias key='&quot;CVD (deaths)&quot;' value='CVD' />
                <alias key='&quot;FL (mrh-eq)&quot;' value='FL' />
                <alias key='&quot;Food_price ($)&quot;' value='USD' />
                <alias key='&quot;GHG (kgCO2eq)&quot;' value='GHG' />
              </aliases>
            </column>
            <column-instance column='[impact_median_year]' derivation='Sum' name='[sum:impact_median_year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:food_group:nk]' />
              <groupfilter function='member' level='[none:food_group:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:outcome:nk]' />
              <groupfilter function='member' level='[none:outcome:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GHG (kgCO2eq)&quot;</bucket>
              <bucket>&quot;CED (mJ)&quot;</bucket>
              <bucket>&quot;BLUEWATER (L)&quot;</bucket>
              <bucket>&quot;WATER (litereq)&quot;</bucket>
              <bucket>&quot;Cancer (deaths)&quot;</bucket>
              <bucket>&quot;Food_price ($)&quot;</bucket>
              <bucket>&quot;FL (mrh-eq)&quot;</bucket>
              <bucket>&quot;CVD (deaths)&quot;</bucket>
              <bucket>&quot;Cancer (cases)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</column>
            <column>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='184' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='78' />
            <format attr='text-align' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='center' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='120' />
            <format attr='width' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='340' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='left' />
            <format attr='text-align' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='center' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' value='10' />
            <format attr='font-size' field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[sum:impact_median_year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</rows>
        <cols>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</cols>
      </table>
      <simple-id uuid='{B7854703-1090-4793-AE2A-46DF485EE1CD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='94212' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='94212' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='43555' id='3' name='FIG2 (2)' show-title='false' w='99000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43545' id='11' name='FIG2 (3)' show-title='false' w='99000' x='500' y='51556'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3561' id='15' type-v2='empty' w='99000' x='500' y='47995'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3551' id='16' type-v2='empty' w='99000' x='500' y='44444'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='4010' id='10' param='horz' type-v2='layout-flow' w='99000' x='500' y='95101'>
            <zone h='4010' id='8' name='FIG2 (2)' pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type-v2='color' w='99000' x='500' y='95101'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='21' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='43555' id='3' is-fixed='true' name='FIG2 (2)' show-title='false' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4010' id='8' name='FIG2 (2)' pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type-v2='color' w='99000' x='500' y='95101'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43545' id='11' is-fixed='true' name='FIG2 (3)' show-title='false' w='99000' x='500' y='51556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FB40B09D-2BF3-4472-B7F5-2E86B6DF685E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2 (2)'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='28' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='26' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='67667' id='23' param='horz' type-v2='layout-flow' w='99000' x='500' y='31444'>
                <zone h='67667' id='20' param='horz' type-v2='layout-flow' w='99000' x='500' y='31444'>
                  <zone h='67667' id='18' type-v2='layout-basic' w='99000' x='500' y='31444'>
                    <zone h='29222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='69889'>
                      <zone h='29222' id='5' type-v2='layout-basic' w='99000' x='500' y='69889'>
                        <zone h='26016' id='3' name='FIG2_Pro (2)' show-title='false' w='49500' x='50000' y='69889'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='26016' id='10' name='FIG2_Pro (3)' show-title='false' w='49500' x='500' y='69889'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='3206' id='8' leg-item-layout='horz' name='FIG2_Pro (2)' pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type-v2='color' w='99000' x='500' y='95905'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='38445' id='17' name='FIG2_Pro' show-title='false' w='49500' x='500' y='31444'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='38445' id='21' name='FIG2_Pro (4)' show-title='false' w='43125' x='56375' y='31444'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='38445' id='24' type-v2='empty' w='6375' x='50000' y='31444'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='30555' id='25' name='FIG2_Fru (2)' w='99000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='29' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='267' h='30555' id='25' is-fixed='true' name='FIG2_Fru (2)' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38445' id='17' is-fixed='true' name='FIG2_Pro' show-title='false' w='49500' x='500' y='31444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38445' id='21' is-fixed='true' name='FIG2_Pro (4)' show-title='false' w='43125' x='56375' y='31444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='26016' id='10' is-fixed='true' name='FIG2_Pro (3)' show-title='false' w='49500' x='500' y='69889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='26016' id='3' is-fixed='true' name='FIG2_Pro (2)' show-title='false' w='49500' x='50000' y='69889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3206' id='8' leg-item-layout='horz' name='FIG2_Pro (2)' pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type-v2='color' w='99000' x='500' y='95905'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8EEA5976-79CA-4DFA-866D-7B6AF0258C20}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Table 1'>
      <cards>
        <edge name='left'>
          <strip size='238'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_group:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC2FCC74-3479-4C2B-ABBB-71479A4BAA97}' />
    </window>
    <window class='worksheet' name='Fig2a_h'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='highlighter' />
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CC48DEB-DE79-4709-9869-370FC239CA37}' />
    </window>
    <window class='worksheet' name='Fig2b_h'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='226'>
            <card pane-specification-id='0' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59621C0E-7660-4085-B21E-BA39157BA972}' />
    </window>
    <window class='worksheet' name='Fig2c_h'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9BFC1C2-3A37-441A-85EC-7AFE2008D9F4}' />
    </window>
    <window class='worksheet' name='Fig2d_h'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='highlighter' />
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26CC91DF-A00C-4D9A-B353-AE7A760D2A9D}' />
    </window>
    <window class='worksheet' name='FIG2_All'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0C49F19F-A5BA-4871-B6F2-52B9A411D691}' />
    </window>
    <window class='worksheet' name='FIG2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A299DA89-6835-4642-8598-0A03D7608426}' />
    </window>
    <window class='worksheet' name='FIG2 (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{6D95B715-419E-44C0-AD73-B10B19464B1C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='FIG2 (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FIG2 (3)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C6FEC0CD-0328-4D31-94DD-B875B6761F0F}' />
    </window>
    <window class='worksheet' name='FIG2_Pro (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7CBFBA52-B8E7-4AD8-927D-02C613F25E85}' />
    </window>
    <window class='worksheet' name='FIG2_Pro (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{884FF447-6AD5-47E7-86AD-14F1DE2E6F07}' />
    </window>
    <window class='worksheet' name='FIG2_Pro'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{ECDD6106-09BA-4A46-81BB-EFD5ED95051D}' />
    </window>
    <window class='worksheet' name='FIG2_Pro (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{4AD6A0E4-8E23-4D5F-8959-4A5F1D0ED48F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2 (2)'>
      <viewpoints>
        <viewpoint name='FIG2_Fru (2)'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FIG2_Pro'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FIG2_Pro (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FIG2_Pro (3)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='FIG2_Pro (4)'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='24' />
      <simple-id uuid='{B6273F4A-923D-42CD-B5B5-7252499F3EFD}' />
    </window>
    <window class='worksheet' name='FIG2_Fru (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' show-title='false' type='highlighter' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:diet_pattern:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:food_cat:nk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:impact_median_year:qk]</field>
            <field>[federated.0q3i7iy0692hf41f2zj0y0cyqfqf].[none:outcome:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{5C02D8C8-1721-4AC6-A205-D7D2807979C2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      BgYG6OnpIT09nZSUlCnXoSgKFRUVjIyMsGnTJvR6PXV1dbS2tjI8PDyrXLm5uWzfvp2Ojg5q
      ampIT0+noaGBpqYmSktLsVqtdHR0kJaWRnJyMqmpqbhcLlpbW+np6UGv17NixQq8Xi/nz5/H
      4/GwevVq9Ho9tbW1tLe3MzIyclt9197eTnV1NQUFBWRkZDAwMEBVVRUGg4GioiLGxsaIiooi
      LCyMjo4OkpKSaGpqoru7G7PZ7H9dlpWVodPpJuXU6XRcvXqV3t5eioqKAp6QUVEU0tPTuXz5
      MsuXL8fn8+F0Ounv7yc5OZm+vj4UReHixYsMDAwwNDREQUEBDQ0NN617YGCAy5cvExMTQ0FB
      AV1dXZMe342Pd77k5uaybds2/3Wn00lVVRU2m43s7GwyMjLo6OigtraWmJgY9ewBXLt2jaKi
      Iv91n8/HW2+9xcaNG2lpaaGhoYGamhoGBwcpLy/nxIkTAJw+fXrRMsbGxrJr1y6uXbsGwKlT
      p1AUhdWrV7N7925GRkb8nxSPHz++YDM8LVu2jLq6Oq5evUpZWRkjIyMMDQ35p2Ps6+ujrKyM
      U6dOAbBnzx5KS0vR6XSTPpU2NjbS3NzMxo0b2bNnz4JkndDX1+f/VHb27FkAzp8/j9vt5s03
      3yQrK4u4uDi8Xi979+5ly5YtnD59etYb0dk4ePAgaWlpKIpCfX09TU1N/OEPf8BkMtHS0jKp
      L5KTk7FYLCxduhSv18uFCxemXMeJEycwGAwUFxezb98+ampqaGxsZN26dbM+BbTT6WRgYIDa
      2lqio6NpbW2lrq6OdevWcfjwYcxmM3FxceTl5eHxeKiursZut3PixAkyMjKwWq1cv36dkydP
      YjKZiIuL4+TJk5w7d46+vj5WrVp1W6ejHhgY4NSpU2zYsIGKigpaW1t5//33yc/Px+Vy0dXV
      RUNDA0NDQ7hcLi5duoTdbqeiooK8vDxqampwOp2YTCZqa2tvytnU1ER7ezuFhYUzDm8VFBTQ
      0tLC6OgoMD4HxeXLlwFoaWlhYGCAxMREUlNTycrKoqWl5aZ1+3w+Dh8+TG5uLmazmd7e3kmP
      79q1a5Ou9/f3z7nvbtTa2sqhQ4f44IMPGBwc5MiRI+j1ejIyMrh69SpdXV2cPHmSlStX0tXV
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2 (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='FIG2 (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='FIG2 (3)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='FIG2_All' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daWxb55kv8D95uG9aSVmULMmWZUleJDtyvMtLPLKTOLbjzLTzoZ0C05mi
      6b03nwaDi84Ag36ZzgUGBS4wmJuLor39kBZdUqTxNk6sOI5teUtiO1YqyZJj2dZCSdZGkRIp
      8vCccz/IYnysJdZCUtT5/4AgPo+ohw+PDvnwfc+mUxRFARERaY4+1QUQEVFqsAEQEWkUGwAR
      kUalTQPw+XypLmFJS/f1k871B4NBBIPBVJdBNGdp0wCIiGhxsQEQEWkUG8AMZFnGO++8g3Pn
      zuHOnTtTft7S0gJZllNQWeLcunULH330ET755BPMdnRwU1MTRFHEw4cPk1fcc/j4449x/vx5
      XLhwYcbHKIqC5ubmJFZFyTI0NIQ//vGPqK+vR0tLy4yP6+npwdjY2JT4cnxPfxNDqgtYyrxe
      Lw4cOIAPP/wQlZWVuHr1KiKRCLZs2QJZlqHX6/HFF1+gp6cHbrcbVVVV8Pv9EEURBQUFqS5/
      zkKhEHbu3AmbzYZwOIzGxkaMj4/D7XZj3bp1aGpqwvr16wEAd+/exc2bN7Fz506sXbs2xZUD
      HR0dcLvd2LhxIwCo6i8pKUF7ezvMZjN27twJRVHQ3t6O9vZ2hEIhHDp0CGazOcWvgBZKkiSs
      WbMGmzZtwocffghFUTA4OIiysjK0tbUhHA5j06ZNuHr1Kmw2G2pqatDa2orx8XFs3bo1/p4+
      d+4cBEFAVlYWXnjhhVS/rITiCOA55ObmYnR0FPn5+TCbzfjyyy/R19cHAPjiiy/w0ksvobi4
      GDdv3kRjYyM8Hk+KK56/y5cv49KlSxBFEe3t7dizZ0/8tT79/7KyMqxdu3ZJfPgDwPDwMDwe
      D1pbW/G73/1OVX9OTg6sVmv8W2FfXx+GhoawdetWlJWVYXBwMMXV02L58ssvUV9fj5UrV6Kt
      rQ1r166FIAhwOBw4ePAg7ty5gzVr1uDFF1+ETqdDIBBAUVERPvvss/j2bTAYcODAAfj9/hS/
      msRjA/gGT0919Pb2Ytu2baphYnFxMcxmM9xuN4aGhqAoCoxGY4qqXbja2lrs2bMHALB27Vro
      dDpIkgQAiEQi8cfp9XqIopiSGqdTVFSEO3fuoLy8HLm5uQC+rv/SpUuoqalBfn6+6nd0Oh10
      Ol0qyqUE2bhxI+rq6rBu3TpkZGQgLy8PRqMR4+Pj8e14cts1GAzQ6XTIzMxEVVVVPMfkNqGF
      bUP4yU9+8pNUF/E8gsEgnE5nUp/zq6++Qk9PD3bt2gWXy4X29nYMDQ2hsLAQWVlZyMrKAoD4
      /4eGhlBSUoLMzMyk1gks3vrJyMiAIAgAAEEQ4HQ6oSgKbt68CZfLhZUrVwKYGBV1dnZifHw8
      /oG7EAut32q1QpZl3L59GxkZGSgoKIjXLwgCGhsb4XQ64/VnZWXB6XTCYDDAZrMtaAooGo0C
      AKeRlgCTyQSHwxFfzsrKgsViwcDAAO7evYvt27fD7Xbj888/j2+3nZ2dyMnJgdPpnPKenvz/
      cqVLl2sB+Xw+eL3eVJcxo+HhYdy5cwf79u1LyfMv9fXzTdK5/slzAJL9BYVooTgFtEiysrJS
      9uFPRDQfbABPJPpM1HQ+0xVg/amU6DONmV+7+dkAiIg0Kq3PA1AUBd3d3dDr9fB6vYjFYrh/
      /z5yc3ORk5ODkZERZGRkQBRFjI6OIisrC6Ojo7BYLDAYnu+lRyIRdHR0wOPxICMjA7Iso729
      HQ6HAytWrIDf74fL5YJer8fIyAicTif0+ufvq52dnfGTrjIzM+FyufDw4UPo9XoUFRVhaGgI
      o6OjAACj0TjlSJbZTL7+0dFR6PV62Gw2jIyMwGKxQFEUWCwWjI2NwWw2IxQKwel0zvvIh0Ag
      AJvNhkgkArvdjnA4DEEQYDKZEAgE8PjxYxQXF8/pCKnx8XHodDqYzWYEg0HY7XYMDg4iOzsb
      giAgEAjA5XKhp6cHkiTB7XbPeUdsKBTCwMAArFYr3G43gK//Jg6HI74DEQA8Hg8sFsuc8gcC
      gfh6jUQi8UMNHQ4HsrOzEQ6H0d3dDY/HA5fLNafcT+vt7cWKFSviz+lyudDb24twOIzi4uI5
      bZOTpqs3Go2is7MTmZmZyMnJAQAMDAxgZGQExcXFz/W+kiQJ3d3dMBgMyMvLAzBx3obD4cDY
      2JjqsNzJnfkjIyMYGRkBMHF0zuTO/Ol0dnZCr9fD4/HAaDSq3kN5eXkIBAKIRqNwu90wmUzx
      33ve91ogEIDf74/vNH76b/z48WOMj48DACwWS/yQ8LGxMVgsFtV2O51nt8fJdTWZLycnB93d
      3bDZbMjJyVG9X5/OO9tzPC2tRwDnzp1DX18furu7IUkS3nvvPej1ely7dg2PHj3CJ598AlmW
      0dLSgtOnTwMALl26NKcPuRMnTgAAbt++DQA4c+YMotEo7t69izt37mBoaAiffvopZFlGfX39
      nN9oo6OjuHDhAsbGxhCNRnHhwgUMDQ2ht7cXly9fxvj4OHp6enDz5k2EQqE55Z48I7ahoQHX
      rl0DMPH6fT4f2tvbAQCNjY0IBAK4du1a/DC5+bhy5Qr8fn/8LNt79+7h8ePH6OjowIULFyBJ
      Enp6euaU8+HDh/GN//PPP0ckEsGHH34Yfy1XrlwBAHzyyScIBAJ477335jyUbm5uRnd3N9rb
      21FfXx/PFwqFEIlE4j8PhULzWj9Pr1efz4eWlpZ47uHhYZw6dQqyLKOxsXHOuZ/285//PD7N
      deXKFfz5z3/GvXv3MDY2hvv3788r57P1RiIR/PGPf0QsFkNTUxMkScK1a9fQ0tICURTR1tb2
      XHlDoRCuX7+O/v5+vPvuuwiFQvH3lyiKGBsbi78nJr8cRaNRVXw2Fy5cwPDwMH7/+99DkiQ0
      NDQgFArF/4YXL17E4OAgTpw4gc7OzvjvPe977dq1awgGg2hsbMT169dVf+NwOIzW1lbcu3cv
      3giAifOFJptLQ0PDjLmf3R5DoRBu3LiBUCiE8fHx+Lprb2/HH/7wB9Uh6U/nne05npa2IwBF
      URCJRFBTUwMA8Pv9WLFiBcrKylBaWor/+q//QmFhIXw+H3p6erBixQpIkgRZluOHOT4PURRh
      sViwb9+++Mpet24d1q1bh5MnT+Lo0aO4ffs2rly5gu3bt8/5dVRWVuLBgweorKwEMDFft3//
      fgDAyZMn4fV6499qS0tL55RbEAQoigKdTgdRFBGJROLfYEOhEAKBAMLh8Jxrnos7d+7gyJEj
      8/oGOp2cnBwMDw+rzknIyMjAunXrMDo6Gv82NherV6+G2+3GqVOnAEwczeP1emEymdDd3Y3V
      q1fHv6kuRv2TuS9duoQjR45AUZQ5jeymU1NTg+vXr+ONN96Ix8bHx1FWVragw1OfrvfLL7/E
      3r17kZOTg/z8fOj1evT39+PIkSMIBoOqb9PfJD8/H9XV1VMuJ5KZmYnMzEzVewIA3G433G43
      Hjx4gIqKillz5+bmYsOGDejq6kI0GoUgCPEjzCwWC2w2G6qqqrBhwwacPn06PpqYy3utvLwc
      FRUVOHv2rGpUW1xcjEgkEh/Bz8ez22NmZia8Xi+MRiNisRjy8/OxdetWOBwOfPXVVws6GTNt
      RwCSJKlWfDQajX+4TX7YlJeX4969ewCAkpIStLa2znkI/61vfQtdXV347W9/O+U5J59n7969
      aG9vR2Fh4YJeEwBVc1roh2ZBQQHa2trgcDhgMBjQ1taGNWvWAAAePXqEpqam+DfshZr8pvbs
      UcU6nW7er0On002bd8+ePbh06VJ8uaenB7/85S8RDAbndQmOixcv4u2338bOnTsBTExpNDc3
      x6c/GhoacO7cOQQCgXm9jqd1dHTEc4uiCLPZjO7ubrz77rsLyqvX61FaWhrf3jds2IB169bh
      zJkzaGpqWpR6I5EIbDYbHj9+jPfeew/j4+PQ6/WQZRnNzc3xEdTzaGpqwgcffDDrVA4A3L9/
      H+fOnYufa/E82tvb8fbbb8fPABdFEc3NzWhublZ9K9fr9RAEAU1NTTh//vxz5weA+vp6nD17
      Fjt27Jj1cZcvX8bt27dV2/I3eXZ77OnpQXNzs2q0AkxMy0UikW+89tFs0rYBGAyG+DfYUCiE
      7OxstLe3Q5Zl3Lt3D263Gw6HA729vXA6nVi1ahXOnz8/52/R/f392LFjB1wuFyRJwsjICERR
      RF9fX/wbT25u7qKcDAVMzLuOjY0hGAwiFostKNfatWtx+vRplJeXo6SkBJcuXYp/K6msrMSO
      HTviDWG+FEWJjyKcTid6e3sBAN3d3fF54rt370JRlDlPYWVlZcU3+qGhoXjzntwXMzndk5+f
      j7/+67/G48eP5zWi2bt3LzZv3oyOjg4AE98Et2/fjuLiYgDA7t27cfDgwQXN0U+qrKyM5y4r
      K8PVq1dRVla2KCOMqqqq+FTS48eP4fF48Oqrry7oon3P1nvlyhWsXLkyvh2JoohAIIBt27bN
      aWS9fv16vPzyy994rZ3S0lIcPHhwTqOL1atX41vf+hYePHiAWCwGk8mE7du3Y/v27bDZbAAm
      ttvbt2/D4/Fg/fr1OHDgwHPnB4C6ujq89tpr8f0gM6mtrcXmzZuRnZ2Nzs5OyLL8jdvos9vj
      qlWrsH37dtU3/UgkgmvXrqG0tBR1dXWorKxERkYGfD4fYrGYaoQ8m7Q+E7ikpAQNDQ3o6upC
      aWkpcnJy0NDQAEmSsH379vhlDNauXQubzQZRFLFhw4Zpv5HOdCZqc3MzvvzySxQVFcHr9aKg
      oAAXL17E8PAw9u3bF8+l0+lm3Ri+6UzXyd8tLi7G5cuX0d3djQMHDsR3qhmNxlk/gKbLbzKZ
      EIvF4htHLBZDcXExdDodLBYL7HY7gIkPVIPBgJs3b6KjowOrVq167vpv3bqFpqYm7NmzBzab
      DbFYDDdv3kR+fj6KiopQWFiI9vZ2NDY2Ijs7W3WW5jflt9vt6O/vR2NjIyorK5GbmwudTofs
      7GwUFBRgbGws/kGUn5+PVatW4cGDB9Nei2m29e90OlFaWor+/n5kZmaio6MD9+/fRyQSgcfj
      gdPpnPUD6JvOBJ5cr6tXr0ZTU1M8d2VlJUZGRnDr1i1kZWXN+G34ec40ntz+XC4X7HY7bDZb
      /L1RW1s7r/p1Op2q3lWrVkGv1+PTTz+FyWRCaWkp1qxZgxs3bqC1tRUbN25ERkbGc+UXBEF1
      xnxrayva29vj9QOY8f30bHy6/CtXroTH48Hjx49ht9tx+/Zt3L9/Hzk5OYhEImhqakJubi6q
      q6un5H/2vfZs/slt8Ol9ic++d2w2G6xWq6rmtrY2NDc3o6amZtb8T2+PGRkZuH//Ptrb2+H3
      ++H1etHa2gqfzxe/QsEkr9eLzz//HG1tbdi1a1e82c22/fBMYOZn/gVK9JnAzM/8icqftlNA
      RES0MFNGAEv1jElBEOJDmsU2OTfN/Mw/HwMDA4u2D4j5mT+Z+accBrpUL8iVjKuBMj/zz0ei
      t03mZ/5E5ecUEBGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsA
      EZFGsQEQEWlUUhvA0NAQTp48iTNnzsRvK3f69Glcv34dwMQlVYGJ2/8txs03iIhoZkm9JeSV
      K1dw+PDh+I0j7t27h9dffz1+n92+vj709PRgaGhoUW6+QUREM0tqA+jr60N9fT2CwSAOHz4c
      v0mFx+PByMgIfD4fOjs78YMf/AAA4vfwBRC/p20iiKIIAMzP/PMylzswMT/zL6X8SW0AeXl5
      ePnll9HV1YXW1lZIkgRg4mp1NpsNXq8XK1aswJ07d7B582YIghAfLRiNxgXd3Ho2z3PHJeZn
      /pkYDIaE5WZ+5k9k/qTuAygsLMTZs2dx9epVlJSUwGKx4Pz58xgZGYHdbodOp8MLL7wAn88X
      vyE3ERElRlJHAJs3b8b4+DgEQYDRaERdXR1CoVD83pmvvPIKAODw4cPJLGvZePs/LquWt2wt
      wovbilNUDREtdUltAABgsVhUy4m6S5MW/d9nGsCbb9WyARDRjHgeABGRRrEBEBFpFBsAEZFG
      sQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWlU0i8FQTST6rU/VS2/+VYt
      fvRWLb73+5+r4sfX1+D4hhr85+eDqviLXiu2em24f+tfVHGDYwuy8/cnpmiiNMYRABGRRrEB
      EBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFG8UxgohToDop4vzWg
      ir1e7kI2uuC79yv1g+2HAHiTVxxpBkcAREQalfQGEIvF0NPTAwAQRRGtra0Ih8MAgEBg4htR
      KBSKx4iIKDGS3gAuXryITz75BABw5swZ6PV6nDhxAoqioKGhAbIs4+TJkzAYODtFRJRISf2U
      9fl8sFgsyMjImHhygwFlZWXo7e1FIBCAKIqor6/Hnj17YDQaVb8rSRJisVhC6pIkCQDSPv+z
      ZFlelOdcavXPNa4oSkK3n/ms5+lesyRJkHTylLiiKAmrHVi87YT50y9/0kYAsizjo48+Qmlp
      KUZHRzE6Ogq9fuLpTSYTRFGE3+9Hb28vMjMzAUy8IURRhCiKySqTiEgzkjYCkGUZmzdvRn9/
      P8bGxhAKhRAKhSDLMrq6urBlyxa43W7s3bsXp06dwre//W0IggBBEAAAgiAkbFpo8jnSPf+z
      9Ho9DAbDol1PP1X1LzSu0+kSuv3M9LyzEQRlmpgAYZrvZDqdLqFTovOpn/mXR/6kNQCDwYCN
      GzcCACwWCzweD3bt2oWzZ8+iuroagiCgrKwMdrsdu3fvRn9/PzweT7LKI1pWAhEJdwcjqlhF
      jhlWBBAc+kIVFyMe8DBTbUrJntaysjIAQH5+Pg4fPjwlXlBQkIqyiJaNYFTGZz71kXQFTiOM
      8GO454L6wfZDSayMlhIeakNElGYW60TCWRtAOBzGRx99BIvFgsLCQiiKgnXr1uHWrVtYs2YN
      Tpw4gby8POTl5aG6unpBL4iIiJJr1qOAbty4gZdeegl1dXWoqKjAgwcPAAB9fX1wOBzwer04
      ePAgent7EY1Gk1IwEREtjlkbQDQahd1uB/D1kQihUAgWi0X1uNzcXIyOjiauSiIiWnSzNoCc
      nBzcv38fiqIgGo2ioqICf/rTn+JH8wATl3N4+PBh/Nh9IiJKD7M2gBdeeAGDg4M4f/48wuEw
      ioqK4PF4kJubC51OB0mScPXqVdTV1cVP6iIiovQw605gnU6HrVu3qmJ1dXXxnx08eDBxlRER
      UULxazsRkUaxARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEB
      EBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRiW1AUiShPb2djx+/BjAxN3EWltbEQ6H
      AQCBwMRd7kOhUDxGRESJkdQG0NDQgEgkguvXr6Ovrw9nzpyBXq/HiRMnoCgKGhoaIMsyTp48
      CYNh1nvVEBHRc/rsxiNUr/2p6r/Pbjya/Y5gi23v3r1QFAVtbW0wmUwwGAwoKytDb28vAoEA
      RFFEfX099uzZA6PRqPpdSZIQi8USUpckSQCQ9vmfJcvytM8517iiKElZ/89bz1Krf6bnnc10
      r1mSJEg6eUpcUZQll38u5rN+mH92c/37yvLUuCzLyR0BjI2N4Xe/+x1qamqQmZkZv4+wyWSC
      KIrw+/3o7e2N32BekiSIoghRFJNZJhGRJiR1BPDhhx/iyJEjcDgcACbm+mVZRldXF7Zs2QK3
      2429e/fi1KlT+Pa3vw1BECAIAgBAEISETQtNPke653+WXq+f9jnnGtfpdElZ/89bz1Krf6bn
      nY0gKNPEBAjTfCfT6XRLLv9czGf9MP/s5vr3nfyyPeV55/SsC+R2u3HlyhUAQE1NDXbt2oWz
      Z8+iuroagiCgrKwMdrsdu3fvRn9/PzweTzLLIyLSlKQ2gNra2imxw4cPx/9dVlYGACgoKEha
      TUREWsXzAIiINIoNgIhIo9gAiIg0ig2AiEij2ACIiDSKDYCISKPYAIiINIoNgIhIo9gAiIg0
      ig2AiEij2ACIiDSKd10hWgSf3XiEv/+b36hiv3jnO3CsMuLfLpxWxX+8/zW4rO5klkc0LY4A
      iIg0iiMAIqIUS9UIkiMAIiKNYgMgItIoNgAiIo1iAyAi0qiU7gQWRRHt7e0oKiqC1WpFIBCA
      y+VCKBSCTqeD1WpNZXlESwYPM6VESOkI4MyZM9Dr9Thx4gQURUFDQwNkWcbJkydhMPAAJSKi
      RErpp6zBYEBZWRl6e3sRCAQgiiLq6+uxZ88eGI3GVJZGRLTspWwEoCgK9PqJpzeZTBBFEX6/
      H729vcjMzExVWUREmpGyBqDT6RAKhSDLMrq6upCVlQW3242/+qu/wqlTp6AoSqpKIyLShJTu
      A9i1axfOnj2L6upqCIKAsrIy2O127N69G/39/aksjYho2UvpPoD8/HwcPnw4vlxWVgYAKCgo
      SFVJRESaoVOemWvx+XypqmVWkUgEZrM5YbkBpH3+xi96VXFvQQYKCjPR8lj9N821O+G2O9Ed
      FFVxp0kPl1lAOPhAFZdhg8GUyfpnEAwGoShGtLb0qeLllXkQLDp0+AdV8aLMHBj0RgyEJVU8
      1yrAgAiiYfV6iMTs0AuuhObPzPI8/wueo2AwCKfTyfyz5E/V9jOlASxVifwjBINBAGB+5p8X
      n88Hr9ebkNzMz/yJzM8zgYmINIoNgIhIo9gAiIg0ig2AiEij2ACIiDSKDYCISKPYAIiINIoN
      gIhIo9gAiIg0ig2AiEij2ACIiDSKDYCISKPYAIiINIoNgIhIo1LaAGRZxvXr1yHLMgDgwYOJ
      67h3dXXFL+FLRESJkdIGcOXKFbS2tsYbQEtLC0KhEK5fvw6Hw5HK0oiIlr2U3hKytrYW4+Pj
      8eXBwUG8//77OHbsGHQ6HWRZjt8cXhTF+J2jFpsoTtxZivmZfz5isVjCcjM/8ycyf0obwLMc
      DgeMRiNGRkZgt9tVPzMajQm7pV80GgWQuFs2Mv/yzm8wGBKWm/mZP5H5UzoF1NPTA7/fj+7u
      boyPj8NsNuPVV1/FpUuXEA6HodfrIQgCBEFIZZlERMtSShtAKBRCVVUVxsfHIcsytm/fDr1e
      j6NHj8a/tRERUWKkdAqotLRUtWyz2VT/JyKixOF5AEREGsUGQESkUWwAREQataQOA6WF+bvv
      /lq1fPSNKhx7oypF1RDRUscGsIx8/mmHannLtuIUVUJE6YBTQEREGsUGQESkUWwAREQaxQZA
      RKRRbABERBrFBkBEpFFsAEREGsXzADSg5bFPtZxrd8Jtd6I7KKriTpMeLrOAcPCBKi5GBBjN
      WQmvk4iSiw1AA/7twmnV8vH1NTi+oQbvtwZU8Re9Vmz12uC79ytV3ODYguz8/Qmvk4iSi1NA
      REQaxQZARKRRbABERBrFBkBEpFFsAEREGsUGQESkUTwMlNIWz2MgWhg2AEpbPI+BaGE4BURE
      pFEcAdCSMdM9jX/68SlVvHbVWtSuKk9maUTLEhvAEjDXa/UsVzPd0/huf48qXunxJq0mouWM
      DWAJmOu1emj5ioR6MNB1VhWL6qsBsOnR4pu1AbS1taGsrAw6nQ6tra3wer24fv06ZFnG7t27
      0dzcjEAggNzcXFRXVyerZqK01x+KoaFzTBXbvdIOhzSO8dGH6gfbOd1FiTFrA+jq6sKaNWug
      0+nQ2dmJ7u5u7Ny5ExaLBbIsw+/3o66uDo2NjWhubsa6deuSVTdRWotKCnzB2JQYUTLN6Sig
      LVu24KOPPsLFixchCF/PRVdVVaG7u3vRiyMiosSZtQGYTCaEQiEoigJJkuBwOHDs2DEUFxej
      ubk5/jifz4esLJ5oQ0SUTmadAtq0aRM+/vhjCIKA6upqtLW1oaOjA7FYDHv37sXAwED857W1
      tcmqOW3NdJhjuvjsxiPVsrcgAwWFmSmqhogWatYG4HA4cPToUVWsoqIi/u99+/Yt6MkHBgbw
      2WefYf369SgqKsKDBw+watUqdHV1ISMjA06nc0H5l5qZDnNMF3//N79RLb/5Vi1+9FYtbzlJ
      lKZSehjohQsX8MYbb+C9995DQUEBWlpakJeXh+vXr+Mv//IvU1kazQFvOQncbenDv/9rvSr2
      j/9cB+sKAb+5fU0V/87mHTAYMhJaTyQmYyAsqWK5VgGI9vEwU4pLWQNQFAV2ux2CIKCoqAh+
      vx+Dg4N4//33cezYMeh0OsiyDEWZODIiGAzi9uddEAwGSLGJoye8hZnIzDLi0agfBsGAmDQR
      d9udsOkEDEtGCIIASZp4IzhNehikCHRSnyqPDBtEyZzw/Os25KrimVlGDAwMoMiRocpv0wkY
      GBhAlhBT5TfE9BgYCCU8v6L3qPLoBCeCwWDa55/v3xcAotEocq0CDIggGu6FyWyeiEcikGJ2
      BIMKgsGgKh4MBhGzCwgGgzA/iUeexG1mAU6EYTY9iUcjiIT0GIMIUclRPd4sWNDd3Y/Wlj5V
      vLwyD4JFhw7/oCpPUWYOQjEBDZ1jqvjulXa4EJxSjzkDc85v0BsxEJZgMpmea/0w/9LMr1Mm
      P2FT4MyZMzh8+DCuXLmC9evX48KFCzAajXjhhRfg9XpVDSAUCuFu85Dq9yfnoBc6BRF+MgWR
      6PyLNaV1/9a/qJYnv0EnasosGAwCQNrn313zH6r45BTW937/c1V8cgTzn58PquKvl7uQja4p
      IxjYD6G0fNfiF/6Ez+eDw5GN1pY+VfzpD4inFWXmwP7kA+N583d3ilOm+H7xznfgWGWcMsL7
      8f7X4LK6p4zwZls/7vyaOdU/+QH3tKc/4J42MCwjI7Mgofl7ewwJXT9D/sKU5E/pFFAkEkFn
      Zyc6Ojqwc+dOmM1mvPzyy/jDH/6AY8eOwWq1qh7/4gxz5jNdGqDAaZw2bnWuUhgTF/0AABMy
      SURBVC3HEExKfqL5crksc94+l5L51F/gnO4gReuU95cQ9CU8PyBO89j0l9IG8Oqrr+Lu3bt4
      7bXXoNPpsH37duj1ehw9ehTRaHRKAyCixHC6LNiytWhKzGoUUOHOV8VtRlMyS6NFUF6Zh1+8
      850psZQ2AIvFgk2bNsWXs7OzAQA2G693Q5RMFZV5+OWvvzvtz/7ppSNTYs9Of9LSNtMIiReD
      I6I5y7UKeL3cNSUmh1NUUIIt1xESGwARzZnZoJ92Dn2Zfv4v2xES7whGRKRRHAGkIW/Z36qW
      w5Hle5MYIkocNoA0xMNMiZaXmY7SESw6/Hj/a6p4UWYO/JHFeV42ACKiFJvreQz+yOLsY+A+
      ACIijWIDICLSKDYAIiKNYgMgItIo7gQmzXj2KAtvwcQ1+Z89yiLXPnFV0unOdDVgxZTDcAeG
      5cUulSgp2ABIMxbnaq8zXS2SKP2wARDRotELFlgcJapYVG9JTTH0jdgAiGjRmG35KFj7fVXM
      5+MIaaniTmAiIo1iAyAi0ig2ACIijWIDICLSKO4EJiJaZCZBB6/TMCWmx9I6SooNgIhokblt
      Bhwvz5jmJ0vrKClOARERaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGR
      RrEBEBFpFBsAEZFGsQEQEWlUShvAF198gZ/97GeIxWIAgPr6egDAmTNnEAgEUlkaEdGyl9IG
      UFJSgqqqqviyKIpobGxEQUEBXC5XCisjIlr+kn410NHRUXz11VcoKSlBZmam6mc+nw+PHj3C
      D3/4QwCAJEmQZRnARHOIRCIJqUkURQBgfuafl1gslrDczM/80xFFaZqYCBHilLgsyzPmT3oD
      MJlM8Hq9sFimXgPb6/Wiuroa586dw8svvwxBECAIAgDAaDTCbDYnpKZoNAoAzM/882IwGBKW
      m/mZfzrGqAggrI4ZjTDCOOWxer1+xvxJnwIymUzweDywWCxoaGjAwMAAPvnkEwwPDyMnJwcF
      BQXweDzo6+tLdmlERJqS0hvC7N69W7W8bds2AMALL7yQinKIiDSFdwQjIkozuVYBr5e7psQM
      WAFv2d+q4gPD8ox52ACIiNKM2aBHgXO6GXwrrM5VqogQnPmWkzwRjIhIo9gAiIg0SqcoivJ0
      IBgMpqqWWQ0MDCTsUKzJY2SZn/nnIxgMwul0JiQ38zN/IvOnTQMAkLCVNPmamZ/558Pn88Hr
      9SYkN/MzfyLzT9kJnMhOtBBLuTEREaUj7gMgItIoNgAiIo1iAyAi0qhlcSJYy2P1iQ65difc
      die6g+or4zlNerjMQjJLIyJaspZFA/i3C6dVy8fX1+D4hhq836q+qcyLXiu2em3JLI2IaMni
      FBARkUaxARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFp
      VFpdCuKzG49Uy96CDBQUZqaoGiKi9JZWDeDv/+Y3quU336rFj96qTVE1S8/ffffXquWjb1Th
      2BtVKaqGiJa6tGoANLvPP+1QLW/ZVpyiSogoHbABJEB32/9TB0xr4MrZnJpiMPfLZYeDD1Rx
      MSLAaM5KeJ1ElFxsAAkwPvpQtWxw5KamkCfmerls371fqeIGxxZk5+/nPhiiZWbJNQBJkiAI
      vGnLUjTTPpjFGmHM1GBmyv+n1hFVvCLHjMpcy5IbgU2nPxRDQ+eYKrZ7pR0u9GOg66wqHtVX
      A/AmsTrSiiXVAM6cOQO9Xg+TyYQDBw6kuhx6Tos1wpipwcyU3xeMqeIFTiOApTcCm05UUqbU
      H5UUyBifUj/s5ckrjDRlyTSASCQCg8GAQ4cO4eTJk6kuh2hOAoFxtLb0qWLllXkQLDp0+AdV
      8aLMHCT6FJxITMZAWFLFcq0CDIggGu5VxaWYnNBaaOnSKYqipLoIABgaGkJrayt27NiBDz74
      AHV1dQAAWZ7YOPv7+/FV6wgEgwFSbOKbk7cwE5lZRjwa9cMgGBCTJuJuuxM2nYBhyQhBECBJ
      E28Ep0kPgxSBv+t3qjwm53oYrOX47TtfwiAIiD15/Itbi7BuoxsftrdAMAiQYhPxCk8+ih2Z
      +LMfquctcBqRJYjQSX2q/DJsECXzouUfH7mhyiOYvFCEvEVbPzPVn+75/+F/nFbFj75RhbqX
      1+B/3zivyl9bUo6avEKc64zFpyMj0YhqisZsNk/EIxGYM3bDZC1Ca0ufKv50AzCbzPE8RZk5
      MOiNGAhLMJlMAIBoNKr6gDY9yRONRBCJ2TE2ZsLJP30J85PHR6JRHD2+EaYsAQ0P2mAyP8kT
      iWL3qrVwme1zyt/bq+Df/7VeFf/Hf66DdYWA39y+pnpd39m8AzZzJho6x1Sva7b1MzCUkdb5
      I6JnTuvfbLDh7mBElb8ixwwrAggOfaHKA2MpwuOulORfMiMAp9OJoaEhABMrffKNN/l/p9OJ
      PfunnwfNzZ1+iD991ImRjseQo4DuSUSRiuB0OvEP//PQtL/xndzpzzXYN+PMgvoHwWAQFmDx
      8ucenpIfwKKtn5nqT/f8zX8eUMX37BeRm5uLjlH1voSQIiE3NxfDDweB+JdoK8w2B+zwY0Q3
      CDk6ETXqAFkaR0GBGwUF7mkrWpEzQ/0zHViV5VEt+nw+VFR6UVG5ctqHr14xw3qbQ/7yimz8
      4z+9qoqXV0w0sO/t2KeKF2XmIBQT4HR+PYoxmU1wOu2wS9OvH6ezEE6nM/54s8kEp9MJq1NQ
      xU1P4gaDA0HICEYnfzL7+oeSi9aWYfXrVIwQLEZ0j48C46PxsGAxw2ydW/6KypVzXv8F0/7Z
      M5GdW6SK+Hw+FK+a+993MfIvmQZgNBqRmZmJ06dPo7CwMNXl0DL0i3e+o1r2FmQAAH68/zVV
      PNc+8YH0erlLHbcKMGAFvGV/q4oPDKf/FIrLZcGLM5w3UumZ+gFkNwHHyzOmxMPB6fNXVObh
      l7/+7rQ/+6eXjkyJPXsAASXGkmkAALBr165Ul0DL2Fw+4ICvdyqrWWF1rlJFhKBvmscRLX28
      GBwRkUYtqREAEaU3k3V5TpEtV2wARLRoBAOnyNIJp4CIiDSKDYCISKM4BURES06uVZjbYbj+
      ZFa3fLABENGSYzboUeCcboJipn0MPG9gPjgFRESkUWwAREQaxQZARKRR3AdARGnP6bJgy9ai
      KTGrUUCFO18VtxlNySxtSWMDIKK0x4vNzY8mG4DFUaIOmHhfWyLSHk02gIK131ctT15Pn4hI
      S7gTmIhIo9gAiIg0ig2AiEij2ACIiDSKDYCISKO+sQHEYjEMDQ1BlmXEYjFIkgQAiEaj8ccE
      AgGEw+HEVUlERItu1sNABwYG0NDQgKKiIgiCALPZDLvdjpUrV+LixYuoq6vD+fPnYbPZEIlE
      sG3bNlit1mTVTkRECzBrA7h16xaOHDkCv98Po9EIn8+HoaEhmM1mjI+PIxaLQZZlbN68GYFA
      ACYTT7EmIkoXs04BKYoCvV6P4eFhXL58GQAwPDyM/v5+RCIRSJIEg8GASCSCGzduYHh4OClF
      ExHRws3aAMrKynD+/Hk4nc54rLS0FOvXr0dGRgbMZjP8fj9GRkY49UNElGZmnQJavXo1nE4n
      ent7sXfvXuj1egiCAADYsmULAODIkSO4d+8eVq9ejZycnMRXTEREi+IbrwXkdrvhdrunxLOy
      siYSGAyorKxc/MqIiCiheB4AEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFG
      sQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUalvAFIkjTrMhER
      JcY33hBmMV24cAHRaBQAsHfvXly7di1+c/kjR47gzJkz0Ov1MJlMOHDgQDJLIyLSnKSOAEKh
      EP7iL/4Chw4dgsViQTAYxCuvvAKr1Yrh4WEYDAa88sorGBsbS2ZZRESalPARQDQaRXNzM7xe
      L1auXInz589jYGAAr7/+OgyGiafPyMjA48eP4XK5AAAmkyk+FSTLMgBAFEVEIpGE1CiKIgAw
      P/PPSywWS1hu5k9MflGcOtUsiiJEiFPisiwvufoXK3/CG4AgCPB6vXA4HKioqEBVVRUaGxvR
      29sbf2MODAxg3bp1+OqrrwBMvFEnbz4/+X+j0Qiz2ZyQGienpZif+efDYDAkLDfzJya/MSoC
      CKtjRiOMME55rF6vX3L1L1b+pDQAj8cDYGIfQDgcRiwWw+HDhxEIBHD69GlkZGTAbrcjMzMT
      p0+fRmFhYaLLIiLSvKTuBN6/f79qedOmTdi0aVN8edeuXcksh4hI01J+GCgREaUGGwARkUax
      ARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFG
      sQEQEWkUGwARkUaxARARaRQbABGRRrEBEBFpFBsAEZFGsQEQEWkUGwARkUYl9abwRERLgUnQ
      wes0TInpYYHFUaKKR/WWJFaWXGwARKQ5bpsBx8szpvlJPgrWfl8V8fl8ySkqBTgFRESkUWwA
      REQaxQZARKRROkVRlKcDS3W+KxKJwGw2Jyw3AOZn/nkJBoNwOp0Jyc38zJ/I/FMawFKVyJUU
      DAYBgPmZf158Ph+8Xm9CcjM/8ycyP6eAiIg0ig2AiEijeB5AAgz1XFAtx5QcWJ2rUlQNEdH0
      2AASYPiZBmBwbGEDIKIlh1NAREQaxQZARKRRKZ0CunHjBvx+P/R6Perq6vDpp5+iv78fK1eu
      RFVVVSpLIyJa9lI6AhgcHMShQ4dQV1eHWCyGvr4+HD58GO3t7aksi4hIE1K+E/js2bMwmUzY
      vHkzcnNzAQAWiwWSJAEAZFkGAIiiGD+jc7GJoggACcsvy3Ja18/8s4vFYgnLzfzMn8j8KW0A
      r776KgDg448/hiiKGB0dBTDxhhUEAQDi/zcajQk7lT8ajQJI3KUC9Hp9WtfP/LMzGAwJy838
      zJ/I/CltACdOnIDL5UJvby/27duHsbExfPzxxzCZTKksi4hIE1LaAI4dO4ZwOAyLxQKdThdf
      ttlsqSyLiEgTUr4PwGq1xv+t0+n44U9ElCQ8D4CISKPYAIiINIoNgIhIo9gAiIg0ig2AiEij
      2ACIiDSKDYCISKPYAIiINIoNgIhIo9gAiIg0KuWXgqDFU732p6rlN9+qxY/eqk1RNUS01HEE
      QESkUWwAREQaxQZARKRRbABERBrFBkBEpFHL4iig7/3+56rl4+trcHxDDf7z80FV/EWvFVu9
      vOEMERHAEQARkWYtixEAzW6uI6T7t/5FFTc4tiA7f3/C6ySi5OIIgIhIo9gAiIg0ilNA9Nx4
      qQmi5YUjACIijWIDICLSKDYAIiKNYgMgItIo7gSmBeN5BkTpiSMAIiKNSqsRAA9DJCJaPGnV
      AIiWOzEyjODQF8/EPAC8qSmIljU2AKIU6A6KeL81oIq9Xu5CNvwY7rmgfrD9UBIrIy1hAyDS
      EI4w6GlsAEQaEotyhEFfW1INIBwO49GjR1i9ejVMJlOqy6Eke/s/LquWt2wtwovbivGnP99U
      xSs8+aj0eHmY6SxmnmIi+tqsDeDWrVsYGhqCwWDAxo0b0d/fj4qKioQVc/LkSdTU1OD06dN4
      4403EvY8tDT932cawJtv1U40gCZ1AziOGlR6OGVBtFCzNoBQKISdO3fCZrOhv78f4+PjCStk
      dHQUeXl5WLNmDVpbW6EoCnQ6XfznkUhkyu9IsRhCodCUeEyaPi7FpHhcEARIkjTx+FgMkiRB
      EARVfCH/flYkElnU/NPVv5jrZ7r60z3/fNc/AESj0fio9Nl/A8CVy/fw3/7uXdVz/p9ffguO
      EiN+dvWcKv4POw/Cac2dtsaILjpj/bPV8Oy/IxExofnn8m/mX7r5dYqiKJhBQ0MDxsbGYLVa
      UVlZie7ubmzatGmmhy+I3+9HU1MTdu3ahQ8++AAHDx6EoiiQZRkAMDIyApvNtigfmj13/5fq
      uQ2OLbBn78S7v21RxTfXFKBq0wp82K6Ol+V4sDojB3/2q1/DCqseuWZ5yvNGIhFIkrRo+cdH
      bqjiMSUHepN30dbPTPWne/4DO9VnLP/gRzvw/R9uw5unfq2KH6moxuGyjfhVc1gVf6XEjGxd
      NwYf/Ub9h7EfQmHJloS9gYPBIB7cH5tTg6nw5M8pf2TcgA/OtKryvHy4HKZMPT71PVLFt3qL
      EZEtOPtQ3bRnWz+9jz1zbpBLKb/eWDan9WM22tEeVH+0rnbqYEUAkdFmVTw47oGsuFOS/xv3
      AdTW1sZHAInkcrnQ09MDRVEQDAah10+cpDz5DcxsNsNmS9wN3c1m84wnlR3fUDNtfOtzliNJ
      EgwGw6Llt9nU89nBYPBJPDHrZ7L+dM//LGGG5zQIk3F1AzCbzTBj+n1TZrMZZrNZtbxY/w4G
      gyhZ5cabz2w/JavcMGUJOL5evf14s3PmVE8wGMSq1R786C3PtK/tePbU0QoA/Pdcx5RYODj9
      +plr/VHZDED9AT3b+p9un6HJZILJbJwaN5uerIPnzz+f9ZPrnC5qhd2Zp4qM+3zwelOT//8D
      ZLGj+pEiKV4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='FIG2_Fru (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='FIG2_Pro' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deWwUZ4I+/qeqD/fldtvt+76wwSZgc4cj3CFAYAiTczbZTLSbaGdH2p39
      aqX9YzXSSqs9NH+MdjaZzGhXSSaZSUIGQsgynOHG4T5sA8bGxuD7ttt9d1d31+8Pfl2Tjg0x
      BGPjej5SpKTr7aq3Ku16qt6jSpBlWQYREamOONEVICKiicEAICJSKQYAEZFKMQCIiFSKAUBE
      pFIMACIilWIAEBGpFAOAiEilGABERCrFACDV6+7uhtPpnOhqED1yDABSvYGBAbjd7omuBtEj
      xwAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFK
      MQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhUigFARKRS
      DAAiIpViABARqRQDgIhIpRgAREQqpR1rQZfLBa/XO551IZoQoVAIHo8HPT09E10VokfqvgKg
      v79/POtCNCEEQUBCQgIMBgNEkTfF4yEUCkGSJBiNxomuypQVCAQAAHFxcWP+jiDLsjxeFSJ6
      HDQ2NiI9PR1ms5kBME6CwSCCwSAsFstEV2XK8vl8AHBfIctfOxGRSjEAiIhUigFARKRSY+4E
      VptQKASfzwdZlmEymaDV8lAR0dTyUM9qbrcb+/btw+Dg4J83oNXCZrMhPT0dRUVFSE1NHbeO
      tnA4jOHhYYTDYSQmJn6vk3ZbWxs++OADeL1evPXWWygpKXmINR2prq4O1dXV2LBhA2w227hu
      i4gIeMgBIEkS6urq0NnZOWKZIAhIT0/H5s2bMWfOnIe5WYXb7cann34Kh8OBt956CykpKQ+8
      rnA4DLfbDY/Hg3A4/BBrObqenh7U1tZi1apV474tIiJgHJuAnn32WaSnpyMYDKK3txe1tbXo
      7OzEzp07YbfbkZubC0EQHuo2w+Ewent70dfXh1Ao9L3WlZ2djZ/97GeIRCLIysp6SDUkIpo8
      xi0ASktLY5pNZs2ahQ8//BA9PT24desWcnNzIcsygsEgRFGETqcDcKft3eVyQa/Xw2w2AwBk
      WYbb7UZrayv8fj9ycnJgt9uh0WiU9UuSBEmSEIlElPVGJ0ZoNBpoNJqYwOnv70dHRwc0Gg1y
      cnKQkJAQU/+4uDikp6cDQExTUjgcRigUglarhUajQTAYREtLCyRJQkZGBmw220MPttHIsozh
      4WFoNBrEx8d/Z/lIJIJwOAytVjsu9fN4PAAAk8kUs36/349gMIj4+Pi7bleWZXg8HkiS9J3H
      T5ZlSJIEnU73SI4z0VT2yHo28/LyUFhYiJ6eHnR1dUGWZTgcDvzzP/8zzGYz/uM//gPXrl3D
      jh074HA4sGXLFqxZswYulwsHDhzAiRMnEAwGAdxpTsrPz8err76KjIwMCIKAd955Bzdu3EAk
      EgEA/Od//qey7YqKCrzxxhvQ6/Xo7e3Fnj17cO7cOUTnwGm1WqxZswZr165VQmd4eBi/+MUv
      4HA48O///u9Ku3xVVRU+++wzFBUVIS8vD2fPnoXL5QJwJzQ2bNiAtWvXjls/RzAYxNGjR3Hy
      5El4PB7Isgy73Y6NGzdi9uzZI0KxtrYWVVVVuH37tjIRp6ioCBqNBs8++yzS0tLg9/uxc+dO
      JCYmYv369THbCwQC+NWvfoW1a9eioqICgiDA4XBgx44dSEtLQygUwqVLlzA0NIRIJIKZM2di
      3bp1aGlpwdmzZ9HZ2YlwOIysrCy8+OKLmDZtmrLucDiMmpoa7N+/H729vRAEAXq9HuvWrcPi
      xYthMBgA3Amv5uZm7N69Gy0tLQgGgzAYDCgpKcGyZctQXl4+LseaaKp7pENboifcaPOMLMuI
      RCKQJAnNzc34/PPP0dfXp1xxS5KEo0eP4siRIwDu3FWYTCY0NjaiubkZ27Ztw+uvvw673Y7E
      xEQkJSVhcHAQkUgEdrtdWY/ValW298UXX6C6uhqJiYmYNWsWAoEAampqcOjQISQkJGDFihXK
      lWU4HEY4HFZCBfjzlfSNGzfQ1NSEuLg4ZGVlob+/H36/HydPnsS8efNgt9sf+vGLRCI4ceIE
      9u3bh/nz56OiogKSJOH48ePYsWMHzGYzSkpKIAgCIpEITp8+jS+//BIJCQnYsGEDkpKSMDQ0
      hEuXLsHpdCp9G5FIBH19fTH7+c1ttre3w+12K5+Fw2F0dXXh8uXLSE5Oxrx585Ceno7Gxkac
      P38e7e3tShisWLECTqcTe/fuxcGDB5UAkGUZ9fX1+PTTT5GTk4ONGzdCo9Gguroae/bsgUaj
      wbJlyyCKInp7e7Ft2zYEg0EsX74cWVlZGBoawoULF3D8+HEGANEDeiQBIMsympqa0NTUBFEU
      R7T/B4NBfPLJJ3A6nVi+fDlmz56NvLw8tLe349ixY4iLi8Pzzz+PJ598EqIoorOzEx988AFu
      3LiBU6dOYfPmzfjxj3+MwcFB/OpXv0JfXx9++tOfIiMjI6YeV69eRU1NDSwWC/7xH/8RSUlJ
      AIDLly/jf/7nf3DkyBHMnz9/TNPVU1JS8OKLL2L69OnQ6/VobW3FL37xC3i9XvT3949LALS1
      teHo0aNYtWoVNmzYoARccXEx3n33XRw7dgy5ubkwGo1obW3Fn/70JzzxxBN48cUXYTKZlPWY
      zWbs2bPne9VFEAQsWrQIzz//vDL1vLKyErdv34ZOp8Obb76pHF8A6OvrQ21trfLfHo8H+/bt
      Q0FBAV5//XXlzqusrAyyLOPAgQOorKyE1WpFR0cHOjo68POf/xyZmZnKOtasWYPh4eHvtR9E
      ajZuE8Hq6upw5swZHD9+HNu3b8cnn3yC/v5+pKeno7i4OCYAIpEInE4nfvCDH+CFF15AeXk5
      LBYLWlpa4PF4kJeXh7lz5yrNKhkZGVi6dKmynbGQZRk3btxAOBzGnDlzkJiYCFmWIcsySkpK
      kJaWBrfbPeoIptHk5ORg1qxZ0Ov1AIDExEQkJiYq+zMe2tvb4XA48NRTT8X0S1gsFuXkG22L
      b25uhiRJWLduXczJ/2ERBAGpqakxzx3R6/WwWq1ISkoaEaLJyckxo6m6urrgcDgwb968mPqJ
      ooj58+fD5XKhu7sbAKDT6SCKIrq7uyFJknInqdFoYkKGiO7PuN0B7Nu3L3ZDWi2Kiorw3HPP
      jRhVo9Fo8NJLL2HBggUxbeddXV0AgPz8fKU9GLhz8iktLQUA9Pb2IhwOx7R9jyYUCinzE1wu
      l9KsFF0myzJCoRAcDscD7O2f92M8dXd3w2g0oru7Wzk5RkUiEQwPDysd3+3t7cjMzFRC6VG5
      W8fstz8fGhqC3+9HIBBAQ0NDzLKBgQGlv6akpAQ5OTmYOXMmPvjgA5SUlKC8vBxZWVnK3Q4R
      PZhxC4CysjJYrVbodDokJiYiMzMT+fn5o05y0ul0qKysHNFxGj2ZRUcIfVP0yjvaTv9dJ99I
      JKL0PdTW1o565xAXF6d0NE9GPp8PXq8X27ZtG7EsHA7DYDAo9ff7/TAYDJN2pIwkSfB6vThw
      4MCICXvRO6jovthsNrz88ss4c+YMrly5gr1790Kv1yM9PR3PPPMMpk2bNmn3k2gyG7cAWL9+
      /ZhnzwqCMOqomeTkZAB32o9lWY75I+/t7QUAxMfHK2HwTd9+yrVOp1OGSy5cuBBLliwZtR6T
      uUnBZrNBr9fjb//2b+96wosGrN1uR01NDUKh0H09H/xRMZlMiI+Px5YtW5CXlzdqmWi/gCAI
      ygilZ555BgMDA7hx4waOHDmCjz/+GP/wD//A2dNED2BSP+AmOzsboiiiubkZbW1tyMnJgSAI
      8Pv9OHv2LAAgNzdXKa/X6yGKIsLhMAYGBpCenq4EiyiKSE9PhyAIaG5uxnPPPQez2QxBECDL
      MsLhMFwu16R+5k9qaiokSYLL5UJhYWFMCETHx0fvhPLz83Hs2DFcunQJixYtUsb/BwKBER2n
      0fUEg8GYoI02i40Hm80GnU6HgYEBVFZWxtzBRbcbrUf036NzOZKTk2G326HT6fDFF1+gu7ub
      AUD0ACbv2Q5AUVERpk2bhhs3bmDbtm1YvXo1DAYDqqurceHCBVgsFqUzGLhzVWmz2dDZ2Yld
      u3ahq6sLNpsNBoMB5eXlmD9/Pg4fPozOzk689957mDt3LpKSkpRJZtevX8eWLVvwxBNPTMj+
      yrKMQCCgvNghShRF6PV6FBUVITc3F59//jl++MMfoqioCMCd5pSmpiZcvHhRGe5ZUlKC6dOn
      Y9euXejp6UFRURFCoRBqampw5cqVmMljoijCZDLh9u3bGBwcRFJSEiKRCFpbW3Hu3DlIkvTQ
      9zU7OxtFRUU4fvw4kpKSlE7+6LDTM2fOoKKiAiUlJaitrUVvby+WLFmi1FuSJPT09ECWZeVO
      gYjuz6QOAIvFgk2bNuHTTz9Fc3MzOjo6IIqi0r79zDPPoLi4WCkviiJWrlyJ1tZWtLe3o7Oz
      EzqdDjNnzsT06dNhtVqxdetW7N27F/X19WhsbIRer1c6gVNSUib0ZOJ2u/Hb3/52xF1IXl4e
      XnvtNSQlJSnH43//93+RkpICo9GI/v5+BAIBJCcnK3c8FosFr7zyCnbt2oWamhrU1tZCEASk
      paVh4cKFMX0gOp0OZWVlqK+vx3/9138hMzMTQ0ND8Pl80Ov1I5rfHgadTqc052zfvh2HDh2C
      zWaDw+GA2+2GXq/HvHnzAABerxcnT57E6dOnkZqaCpPJhI6ODjidTsydOzdmaCgRjd1DfSVk
      IBDAhQsX4HK5sGDBgu9sT/f5fDh+/Di0Wi1WrVp119mzPT09uHjxItrb2xEIBJCeno6SkhLM
      mjVrxIkpOknr2rVrcDgc0Ol0mDFjBubOnQuNRgNZltHX14fq6moMDQ3B6/XCarUiLS0NpaWl
      ygPkAoEATp8+Db/fj+XLlyujTVpaWnD9+nWkpaWhsrJS2W4wGMS5c+cQCAQwe/Zspf9irKJ3
      IKP970hMTMTcuXOh1WohyzK6u7tRV1eHnp4eSJKExMREZGVloaysbMSomHA4DIfDgaGhIcTF
      xSEzMxMnTpzA0aNH8ZOf/ESZKxEMBnHhwgXU1dUhEAjAZrNh2rRpKCkpwfnz51FWVobMzEwI
      ggCfz4fLly8jPT0dhYWFMdu7ePEitFotZs6cGdOs09zcjFu3bmH16tXKZ7Isw+Vyoba2Fl1d
      XXC73YiPj0dGRgbKysqUx0KEw2F0dHSguroag4OD8Hg8iI+PR0lJCSoqKmJGiD0IvhJy/PGV
      kOPvQV4J+di8Ezg6YzgSiUCn0414ts83Rdv0w+EwBEGAVqsd8YcdLROJRKDRaCCK4mM1kiTa
      Ti7LstK+/836h0IhpQP4m58HAgF8/PHHGBwcxJtvvhnzDKToM5QikQi0Wu24PTdotH2JzrC+
      2/+L6JyNUCikPNPoYdWPATD+GADj70ECYFI3AX2TKIpjHs0SPenfq0M3WuZxJQjCqMNjo7q7
      u7F3715UVlYiNzcXFosFHo8HJ06cwNWrV7Fq1aoRf4yCIEzIiKFoB++9hvJGA260EV9E9GAe
      3zMg3ZNWq4XX68X//d//QZIk5QmmOp0O8+bNw5o1a8Z94hoRTW6PTRMQ3T+/34+Ojg64XC74
      /X7ExcXBbrcjIyPjnncPasMmoPHHJqDxN6WbgOj+GQwGZagoEdG38XKHiEilGABERCrFACAi
      UikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiI
      VIoBQESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIi
      lWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhI
      pRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJS
      KQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhU
      igFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKV
      YgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEil
      GABERCrFACAiUikGABGRSmknugJEE02WZXi9XkQiEYgir4nGQygUgiRJkGV5oqsyZQUCAQB3
      jvVYCTL/j4wrv9+Pnp6eia4G3cPg4CDC4fBEV4PokeMdwDiTZVlJZpqcdDodCgoKYDabIQjC
      RFdnSpIkCcFgEGazeaKrMmX5/X4AgMFgGPN3GADjzGg0oqSkZKKrQffQ2NgIjUYDjUbDJqBx
      EolEoNFooNXylDNeNBoNANzXMeavnYhIpRgAREQqxQAgIlIpNshNEuFwWBmJotPpRu2MjEQi
      CIVCd11ORHQ/eAcwSVy+fBm//OUv8Zvf/Ab9/f2jlmloaMAvf/lLpbf/QYRCITidTkQikQde
      BxFNDQyAScLlcqG1tRU3btzA119/PeoJ2u124/bt2/c10ePb6uvr8e67736vECGiqYEBMImY
      zWZUVFTg3LlzaGtrG5dteDwetLe3c+ITEbEPYDLRarVYvHgxWltbUVVVhYyMDOj1+nt+JxAI
      IBAIwGw2K+OAgTsT0Hw+H8LhMCwWC0KhEDweD7xeL2RZxvDwsHInIYoiLBaL8v1AIAC32w2/
      3w+NRoO4uDiYzWb2PRBNMQyASSY9PR1LlizBvn37sGjRIhQVFd2zfE1NDU6fPo3XXnsNSUlJ
      yueRSAQHDhzAwMAA3njjDTQ3N+MPf/gDfD4fQqEQfv3rXyuTnsxmM/76r/8aqampGBgYwJ49
      e1BbWwuXywVRFJGYmIiSkhL88Ic/RHx8/LjuPxE9OgyASWjevHm4ePEiDh06hOzsbMTFxd21
      rN/vH/VZNrIsw+12w+FwQJZlZGRkYOvWrWhoaMCJEyewYcMGGI1GAHdGHSUkJCAYDOKrr77C
      tWvX8NRTT6GsrAyiKKKxsREXL16E2+1mABBNIQyASSgpKQlLlizB3r17UVdXh4qKiu/d9GK1
      WlFZWYlgMIiqqipUVFSMOJk7nU60traivLwcmzZtUrZZWFiIJUuW3NczRoho8mMn8CQkiiIW
      LlwIu92OI0eOwOfzPZLtarVaWCwWtLe34/bt2/D7/crjey0WC5/jQjTFMAAmKaPRiFWrVuH2
      7duoq6t7JNs0GAx48skn4XA48Nvf/hYfffQR9u/fj9bWVo4aIpqCeEk3iZWVlWHmzJk4dOgQ
      CgsLx317oihi9uzZyMzMxKVLl9DQ0ICzZ8/i8OHDKC4uxl/8xV+wD4BoCuEdwCRmMpmwbNky
      9PT0oLq6+pG8TUkURaSlpWH9+vX46U9/irfeegsrVqxAQ0MDqqqqxn37RPToMAAmMUEQMGPG
      DMycORP79++H0+kctUwgEBgxOzgcDiMYDI4or9PpIIoihoeHRywLh8PweDxK0Oh0OmRmZmLN
      mjUoKipCW1sbHyFBNIUwACY5QRCwbNkyyLKMU6dOjVhutVrhcDhw48YNRCIRyLKM/v5+7N69
      G/X19SPKWywWGAwGnD9/XgmIUCgEWZbhdDqxbds2XL58OabNv7W1Fd3d3bDb7ZwIRjSFsA9g
      khAEQfnn2woLC7Fw4UJ89dVXI5YXFxejuLgY27Ztw759+xCJROD1epGTkwOj0ThinQUFBVi0
      aBEOHz6M06dPw2w2IxAI4Gc/+xmMRiM0Gg0+/vhj/P73v0dycjKcTifcbjfy8vKwbt06BgDR
      FMKXwk8S/f396OvrQ3FxMXQ63YjlDocDLS0tAIDy8nJlSKYsy+jt7cWVK1fQ09MDs9mMvLw8
      5OXlwePxIBgMorCwMObE7fV6UV9fj87OToRCIWRlZWHWrFnQ6/Xw+/1obW1Fe3s7+vr6oNFo
      kJOTg2nTpiEpKWlKBkBjYyPS09NhNpv5SshxEgwGEQwGYbFYJroqU1Z0uHh0gudYMABI9RgA
      448BMP4eJAD4ayciUikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAg
      IlIpBgARkUoxAOiefD4fWlpa4PV6J7oqRPSQMQDonjo6OvDhhx+ivb19oqtCRA8ZA4DuKfqS
      GL4TmGjqYQAQEakUA2CSkWVZeUPXd5Xzer3w+/1jWqfb7YYkSWN6r7AsywiHw2Oqw1jqSkST
      E98INgnIsoxgMIjLly/jypUr8Hg8iIuLQ15eHubOnYvU1FTlRSyRSAS3b9/GqVOn0N3drbyw
      ZcWKFTGvbJRlGZFIBLW1tbhw4QIcDgf0ej3Ky8uxaNGiEc9lj4bExYsXcfPmTbhcLpjNZsTF
      xcW8B1iWZUiShKtXr+LSpUtwu93Q6/XIysrCggULkJaWxmfqEz0m+Jc6CUiShM8++wyffvop
      XC4XkpKSoNPpcO7cOfz6179WrvJlWUZtbS3efvttdHd3o7S0FLm5ubhy5Qp+85vfoKurK2ad
      Bw8exEcffQRJklBeXo709HTs27cP77//PgKBgFJWlmW0tbXh3Xffxe7duxEIBJTQuXnz5ogA
      +OKLL/C73/0Ow8PDSExMRFxcHGpra/HOO+/A4XA8ugNHRN8L7wAmAY/Hg4sXL2LlypVYtWoV
      zGYzwuEwBgcH0dnZqbz+cXBwEAcOHEBpaSleeOEF2O12RCIRVFRU4MMPP8TXX3+NLVu2QKfT
      ob29HUeOHMHKlSuxZs0aGI1GyLKMrKws7Nq1C9XV1ViwYAEEQYDf78e+ffvgdDrx+uuvo7i4
      GEajEZIkoba2Ftu3b1fqKkkSTp8+jUWLFmHjxo0wm82QZRlDQ0Po6Oi4r7cREdHE4h3AJBCJ
      RBAMBpGQkID4+HhoNBro9Xqkp6djzpw5yjuCb968idbWVmzatAl2ux0AIIoiioqKMGfOHNTW
      1sLlcgEAzp8/D4PBgFWrVsFkMkEQBIiiiHnz5iE/Px8XL15U7iza29tRW1uLDRs2YNasWUp5
      vV6P+Pj4mLpGm6usViusViu0Wi10Oh1SU1NRWVnJACB6jPAOYBIwmUwoKSnBgQMHMDg4iNmz
      ZyM5ORlmsznmBfG9vb0wGAywWCxwOp0x60hPT4fD4VCadrq6upCZmYlAIBDThAMAdrsdra2t
      8Pv9MBqNaG9vR0JCAkpKSr6zrjqdDjNmzMDx48fh9Xoxe/ZspKWlwWQyQa/XP4SjQUSPCgNg
      EjAYDHj55Zdx9OhRXLp0CYcPH4bdbkdZWRmWLFmCnJwcCIKAoaEh+P1+vP322yPW4ff7EQwG
      lRm7Q0NDcLlcePfdd5WO4aihoSFYLBYlLHp6epS2/O8iiiJeeuklHD9+HDU1NTh27BiSkpJQ
      UlKCpUuXIj8/n53ARI8JBsAkIAgCMjIy8Pzzz2PdunXo6+tDXV0dLl26hLq6Ovz93/+9ckeg
      1Wqxfv36ESf1qLS0NACAxWKB2WzGihUrlD6Eb4qLi0NCQgKAO1f1Yxn2Ga1ramoqtmzZgtWr
      V2NgYADXrl1DdXU1Ghoa8Dd/8zfIycn5HkeDiB4VBsAkotfrYbfbYbfbMX36dMyYMQPvvfce
      GhoakJycjJSUFEiShPz8fKUP4G5SUlLQ3t6OmTNnwmQy3bOs3W7H6dOn4XK5lFD4LjqdDklJ
      SUhKSsK0adNQUVGBd999F9evX2cAED0meK8+CQwMDKC6uhput1v5TJZlaLVaiKKoXMEXFBQg
      OTkZu3fvxuDgoFI2Eomgv78fVVVVSidwZWUl+vr6UFVVBa/Xq1zdS5KErq4unDlzRmkumjZt
      GiKRCI4ePQqPx6OUdbvdaGtri7kzGB4exsWLF2P6IGRZhkajgUajGfVug4gmJ/61TgK9vb14
      //33MW3aNBQXF8NqtSrNQFqtFsXFxQCAjIwMrFixAjt37kR/fz9KS0thNBrR39+P5uZmDA8P
      o7S0FPHx8Zg2bRrmzZuHPXv24ObNmygoKIAoiujq6kJTUxNSUlJQVlYGAEhNTcXixYtx4sQJ
      uFwulJaWQpIkNDU1oaGhIaZzd3h4GL/73e9QWFiI0tJS2Gw29PX14caNG5BleUwdyUQ0OQgy
      5/FPOEmSUF9fj1OnTmFwcBCSJEEURWRkZGDNmjXIzc1V2vxDoRDq6upw6tQpOBwORCIRxMXF
      IT8/H0uXLkVKSgpEUVRm7J46dQo1NTXK1b7JZEJpaSmWLl0Ks9kMQRCUoZ0nT55UhodqNBrk
      5uZi+vTpqK2txbp165CTk4NwOIyGhgacOnUKfX19kCQJgiAgJSUFa9euVYLmcdLY2Ij09HSY
      zebHru6Pi2AwiGAwOGIGOj08Pp8PAO5rKDYDYBIJhUJwu93wer1KJ+3dmlSij24IhULKcNG7
      dQyHw2GlaSg6z+Bu6/T5fBgeHoZWq0VSUtJdy4bDYaWuOp0OCQkJMUNWHycMgPHHABh/DACi
      B8AAGH8MgPH3IAHAXzsRkUoxAIiIVIoBQESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJS
      KQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhU
      igFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKV
      YgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEil
      GABERCrFACAiUikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIp
      BgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEamUdqIrMNVFIhGEQqGJrgbdgyRJaAp3/NsAABPA
      SURBVG1thUajmeiqTFmyLCMSifAYj6NIJAIAEMWxX9czAMaZx+NBQ0PDRFeD7kEURSQkJECn
      00EQhImuzpQUDocRiUSg0+kmuipTVvRCU6sd+2ldkGVZHq8K0Z0fvt/vn+hq0D20t7cjMzMT
      ZrP5vq6eaOyCwSCCwSAsFstEV2XK8vl8AACj0Tjm7/AOYJxpNBqYzeaJrgbdA0/6pFb85RMR
      qRQDgIhIpRgAREQqxT6ASaKrqwstLS24V5/83LlzodfrH2GtiGgqYwBMEjdu3MDOnTths9nu
      OlZ65syZDAAiemgYAJNEJBJBXFwcXnjhBSQlJY1axmQyPeJaEdFUxgCYRDQaDVJTU5Gamnpf
      34vOshRFcUwTmcLhMARB+M7hj/e7XiJ6vDAAHmPBYBC1tbVobGyE0+mEyWRCYWEhAGDGjBkx
      dxKyLKOzsxMXLlxAX18fBEFAamoqsrOzIQgCKioqRqz3+vXr8Hq9MJlMyMnJwcKFC+9rkgkR
      TW4MgMdUT08P3n//fXR3dyMvLw9WqxUulwsHDx5Ed3c3/umf/kkJgHA4jF27duH48eNISUlB
      cnIydDod6uvrcfDgQVRWVioBIEkSPvroI1y5cgVZWVmw2WwYGhrC9evXcenSJbz55puIj4+f
      yF0nooeEATCJyLIMSZIQCARGLBMEQXlWTSAQwP79++FwOPD888+joqICZrMZ4XAY9fX1eOed
      d2LWef36dZw4cQKVlZXYsGEDkpKSoNFoMDQ0hPfeey9mOx0dHWhqasKqVauwfPlyxMfHIxgM
      oq+vD93d3eyEJppCGACTyPDwMP7t3/5t1GVJSUn4l3/5F2i1WjQ3N+PKlSvYsGEDlixZorTl
      i6KIxMTEmO/5fD4cO3YMeXl52Lp1KxISEpRlFosFBoMhprzf74cgCEhLS0NCQgIEQYDRaERu
      bi5yc3Mf8h4T0URiAEwiJpMJ69evh9VqHbFMr9dDFEXIsgyHwwFJklBRUfGdHbkejwcOhwMV
      FRWjrvfbMjIyYDQasWfPHng8HpSVlcFmsynbZ2cw0dTBAJhE9Ho9Zs2adc9RQNEA0Gg0I672
      RxMIBODxeJCSkjKmk3dCQgJeffVVHD58GAcOHMCOHTuQnZ2NGTNm4KmnnkJycvJ97RMRTV4M
      gMdQtL3f4/F85+N1dTodDAYDnE4nZFkeUwgUFBTg1VdfxcDAAHp6elBTU4PTp0+jo6MDP/rR
      j2C32x/WrhDRBOKzgB4zgiAgKSkJWq0Wly9fHvHoiOhbgaLMZjNsNhvq6urgdrtHrO/b5aPb
      MBqNyM7Oxty5c/HGG2/gxz/+Merr69HW1vZwd4iIJgwDYBKJTrwKh8Oj/hM92efn56OgoAD7
      9u3DuXPnMDg4iKGhIVy7dg2ff/55zDpNJhPmz5+PW7duYefOnejr64PD4UBHRwf27t2L5ubm
      mPJtbW24ffs2AoGAsj1ZlhEfHw9BENgHQDSFsAloEvH7/di3b99dH/mwefNmGI1GWCwWbN68
      GZ988gk++ugj2O12CIIAl8uF/Pz8mO+Iooj58+ejra0Np06dwrVr12C1WjE0NISkpKQRY/pb
      W1vx5ZdfYvr06SgsLITRaERfXx9qa2uRmZmJjIyM8dp9InrEGACThNVqRXp6Orq6uu5a5pvN
      NTk5OfjJT36C9vZ2dHR0QKfTobi4GH6/H9euXYu5UtfpdHjuueewePFi3Lp1C16vF1lZWUhP
      T8cf/vCHmLJz5syBLMs4e/Ysjh8/rmwzNTUVmzdvZicw0RTCAJgk5s6di7lz5465vCAISEhI
      QEJCAsrLy5XPz507B61WO+IuQq/XIycnBzk5OcpnXq8XAwMDMeP7jUYjli5dioULF2J4eFh5
      FET0pelENHUwAB5DQ0NDqK+vVx4BERcXh1AohN7eXhw6dAj5+fnK6CBZlnHp0iWYzWakpaXB
      ZDJBEAS43W5UVVXB5XJh2rRpI7ah0+l4tU80xTEAHkM+nw8HDx5EIBBAWloaLBYLgsEgWltb
      AQCvvPKK8tA2WZbR2NiI06dPIzMzE4mJiRBFEf39/ejo6MCSJUtQXFw8kbtDRBNEkO/1Ciqa
      lCKRCFwuF2pra9HZ2Ynh4WEYDAZkZGRgzpw5ykke+PPzhZqamnDz5k309fUhEonAbrdj+vTp
      mDZtGjQajapH9zQ2NiI9PR1ms/k7Z1bTgwkGgwgGg985b4UenM/nA4D7emIvA4BUjwEw/hgA
      4+9BAoC/diIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhUigFARKRSDAAiIpVi
      ABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEakUA4CISKUY
      AEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikG
      ABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoB
      QESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIA
      EBGpFAOAiEilGABERCrFACAiUikGABGRSmknugJEU0nA24W+tj9NdDUmHVmOQI7IcGg0E12V
      KSsSiQAARHHs1/UMAKKHKBIJIOBpm+hqEI0Jm4CIiFSKAUBEpFIMACIilWIAEBGpFAOAiEil
      GABERCrFACAiUikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIp
      BgARkUoxAIiIVIoBQESkUgwAIiKV4juBiR6iOFM2csv/30RXY9IJhSQEg0GYTOaJrsqUFQj4
      AQBxcYYxf4cBQPQQiaIWYpxtoqsx6chCEBo5CF2cZaKrMmWFIj4AgC7OOObvCLIsy2Mp6Pf7
      EQwGH6xmRJNYS0sLQqEQBEGY6KpMWdHTDI/x+HmQYzzmO4De3l709vbef62IJrnMzEzodLqJ
      rgbRIzfmO4BIJIIxFiV6rDQ0NMBisSA1NRUGw9jbT+n++P1+iKIIvV4/0VWZsrxeL+Li4qDR
      aMZUfsx3AKLIAUM0NcmyzIsbmjLu57fMszoRkUoxAIiIVIoBQESkUgwAIiKV4kQwItwZ5DDW
      kRP0YDQaDecBjDOtVntfA3YYAES4c3LiXIDxxeM7/u53iC2bgIiIVIoBQESkUgwAIiKVYgAQ
      EakUA4CISKUYAEREKsUAICJSKc4DILoPsizD7/ejr68PAwMDCAaDsFqtsNvtsNvtIyaTBQIB
      5V0aoigiJSUFqampqnkkcjAYRE9PDyRJgt1uR0JCwogykiShp6cHfX19iEQiSElJQVpaGuLi
      4iagxo+HYDCIoaEhOJ1OeDweGAwG2Gw2pKWljZhsJ8syfD4fenp60N/fD4PBALvdjrS0NAYA
      0f3w+/34/PPPce3aNTgcDkQiEWi1WuTk5GDr1q0oKSlRysqyjL179+L8+fMYHByEIAhISkrC
      smXLsG7duik/K1aWZVy7dg07duyA3+/H1q1bsWTJkhFljh49iuPHj2NwcBCyLCMxMRHz5s3D
      1q1bp/wxehCDg4PYv38/mpqaMDg4CJ/PB71ej+TkZKxduxYLFy6MuRDx+/344osvUF1dDafT
      Ca1WC7vdjmeffZYBQDRWQ0ND+Oijj9DZ2Ym1a9dizpw5MBqN6OrqQk1NTUzZUCiEP/3pTzh2
      7BgWL16MNWvWIBQK4eDBg9i/fz8EQcCaNWum9OMnXC4XduzYgeTkZDQ2NkKSpJjl4XAYR44c
      wd69ezFnzhw8/fTT0Ol0OHLkCI4fPw5RFLFp0yZotTxNRbW1teHtt9+GwWDA/PnzMWfOHMTH
      x6OzsxPHjh3DH//4RxgMBsyZMwfAnTuFTz75BFevXsUzzzyDhQsXwuFw4MCBA9i2bRsDgGgs
      ZFnG1atX0dLSgh/96EeoqKhQTkyFhYUoKCiIeRHHwMAAampqMGvWLGzatAkmkwkAsGXLFjgc
      Dly6dAkLFixAYmLihOzPeAuFQjhy5AhkWcbatWvR1NQ0oozL5cLFixdRUFCA5557DvHx8QCA
      jRs3wu12o6amBosWLUJGRsajrv6k5fP5kJqaiq1btyI/P1957o/VakVWVhb+9V//FXV1dZgz
      Zw5kWUZbWxtu3ryJJUuWYOXKldDr9bDZbHjxxRfx3//93+wEJhoLSZLw1VdfobCwEPPmzRtx
      VSoIQsxDuBoaGtDV1YXVq1crJ38AiI+Px8qVK9HS0oJbt249svo/arW1tTh58iTWr1+PwsLC
      Ucu0tLTg9u3bWLFihXLyBwCTyYTVq1eju7sbDQ0Nj6rKj4WCggL83d/9HQoLC0c89C0+Ph7J
      yckYHh4GcOc1vrW1tZAkCcuWLYvpd0pMTMSyZcsYAERjMTw8jL6+PixYsADAnTuCe70nu7Oz
      E4mJicjKyhqxLCcnBwkJCejs7BzXOk+UQCCAffv2IT09HQsWLLhrO35nZyesVityc3NHLMvK
      ykJiYuKUPUYPSqfTjTqAQJZldHV1oaOjQ7ljCofD6O7uRlpaGlJSUkZ8p6CggE1ARGPR19cH
      s9kMi8WC+vp6DAwMKCMq0tLSUFpaCqPRqJR3OByw2+2jPppXp9PBZrPB4XA8yl14JCRJwv79
      ++HxePDyyy8jLi4OPp9v1LJDQ0Ow2WyjPiVUFEUkJydjaGhovKv82It2tu/cuRMpKSlYtGgR
      gDt3AE6nE2lpaaP+Do1GIwOAaCyioy3++Mc/IhQKQZIkiKIISZIgyzJKS0uxdetW2O12CIIA
      p9MJq9U66tWvKIowm81wOp0TsCfjq7m5GadOncLy5cuRl5d3z7JOpxNms/muHeEWiwWDg4Pj
      Uc0pw+v14vz589i/fz9EUcRf/dVfIT09HcCdAHC73SguLh71uzqdjgFAFBUIBNDR0YFwOKx8
      ZrPZkJycDJ/PB41Gg/z8fMybNw/Z2dmwWq1wOp34+uuv8dVXX8FoNOKll16CXq+/a9PQ4y4U
      CqG1tTXmGMXHxyM1NRWBQABffvklEhMTsXr16u89eketQ0A9Hg+6u7sRiUSUz1JSUmCz2ZT/
      lmUZvb292LVrF2prazF37lxs3LgRqampMcftu36HDACi/5/D4cBnn30Gv9+vfDZr1ixs3boV
      NpsNBoMBK1asQH5+vrLcZrPh6aefxuDgIGpra/GDH/wAer0eCQkJcLvdo/4BRiIReDwe5OTk
      PIrdeqh8Ph+2b98Or9erfFZaWornnnsOJ0+eRG9vL7Zu3YpAIIBAIAAAyvH0+/3KOHSTyYSE
      hATcunUrJky+yel0jjpxbKprb2/H9u3bY4bNrlixAitXrgRw56Te1NSEzz//HA6HA5s2bcKy
      ZctgNptj1iOKIuLj4+FyuUbdjiRJDACiqISEBGzZsiXmhBQ9ASUnJ8Pr9cac+KJ0Oh3Ky8tR
      VVUFr9cLq9UKm82GlpaWUQMgFAphaGgITzzxxPjtzDgxGAzYvHnziDuA4eFhnD59GoFAAIcO
      HcLRo0eV5ZFIBKFQCMeOHcPFixdRXFyMl156CQkJCXA4HAiFQiO2I8syBgYGVDkENCMjA1u3
      bh1xBxDV2dmJ3//+9wCAv/zLv8SMGTPu2tRotVrR398PWZZHlPH7/QwAoiiDwYAZM2aMuiw5
      ORmiKKK6unrUP7hgMBgzQiM7OxsnTpxAS0sLioqKYsreunULHo8H2dnZ47Mj40in0416jLxe
      L9atWwePxzNimSRJ6OzsRF5eHkpKSpSTWXZ2NjweD27duoXKysqY77S0tGB4ePixvEv6vqxW
      K8rKykZd5vV6sWfPHoTDYbz22msoLS29a1OZRqNBZmYmvv76a3R1dSEzMzNmeWNjIwOAaCzM
      ZjMWLFiAS5cu4amnnkJWVpbyhxcKhVBdXR3z/Jri4mKkpqaiqqoKmZmZygghj8eDU6dOITMz
      c9Thj48rk8mkjD75Np/Ph927d2PGjBlYsWKF8nlubi6ysrJw6tQplJSUKE0Yfr8fVVVVSElJ
      uWsHplp1d3fj6tWrWL58OaZPn37PshqNBmVlZThz5gzOnTuHjRs3KiOuhoeHcfbsWQYA0VgI
      goAlS5bg1q1beP/997FhwwZkZWUhGAzizJkzaGpqwqZNm5QTfUpKChYsWICDBw8iLi4Oixcv
      RjgcxsmTJ9HY2Ihnn302plNPjaxWK5588kns3r0b27dvx/Lly6HRaHDmzBlcuHABa9euRVpa
      2kRXc1Jpa2tDIBCA2Wwe8fiRKKPRqDyTqqCgADNmzMCxY8dgMBhQXl4On8+Hw4cPY3h4mAFA
      NBaCICA/Px+vvPIKPvvsM7z//vtISEiAJEkIh8NYu3YtFixYoIy31mg0WLNmDZxOJ6qqqnDm
      zBnIsgxZlrFmzZo7szBHGZs9lX17f0VRxNKlS+HxeHDw4EFcvnwZgiAgFAph8eLFePrpp6f0
      s5IeRHRY7BdffHHXMtnZ2fj5z38OANBqtdiyZQskScLu3btx8OBBSJIEjUaD559/HoI8Vcer
      EY3RtWvXkJiYOKKNdDTffBx0W1sbzGYzsrOzkZiYOOrJSpIkOJ1ONDc3Q6PRoKCgAPHx8ap6
      wJksy3C73TAYDKNO+gqFQnC5XLh9+zZCoRAKCwthtVpHLat2gUAAwWDwnmWi80yiZFmGJEkY
      HBxES0uL8pu1Wq0MAKL7CQCiqURd96BERKRgABARqdT/B0qRZynW8w7IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='FIG2_Pro (2)' width='384'>
      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
      1et16vU6VqvVLOuNodOoLBtvIY1O0i8Kpnq9Ti6XY2Njg3w+f9PPw+EwHo/H/P8vvvgiOzs7
      bG5usra2xrlz5ygUCoyOjvLCCy8wODhINBolGAwyNjbG3NwcS0tLbG9vo6oqU1NTfO973zPv
      gaZpZgfwjW8pAA6Hg9bWVuB6IOi6/uU3VgjxtXff3gAeVAiUy2WSySSxWIxoNIrD4aBQKHzh
      n/H7/Xg8HrLZrNnZ29jDF663vVcqFbNtvq2tjVKpxPb2Nj09Pbc9Z1dXF9FolNdee+2Oyt7Z
      2UlnZydPPvkkAGfPnmVxcZF3332XwcFBAHNEUG9vL6+++iqZTIaLFy/y85//nD//8z/H6XTi
      cDhoa2ujp6eHF198kXA4fNtrhkIh4vE4GxsbZuezEKI5HWqjr8PhwOPxsLa2RrVapV6vU6lU
      zOGT97rIWK1WM5/e4fpIos8++4yVlRV6enrw+/13tBev1WolGAxy7Ngx3n77bWKxmHnuZDLJ
      zMwMlUrFHFY6MTFBpVJhZmaGjY0NswyZTIaFhQUA+vr6cDqd5rwCTdPMsfVbW1ucPXuWnZ0d
      dF2nUChw9uxZdnd3zePq9TqFQoFqtWo+wc/MzLCwsEA6nTbLXiqVKJVKZn+Ioijmd7l69Spb
      W1vkcjlzMlgsFuPy5cvMzMwAMDAwgKZprKyssLCwQL1eR9d1EokE8/Pz9/T7EUI8Wg71DcDn
      89HZ2cns7CyfffYZLpfLHJKZz+cPdDrejWw2y9WrV8nn86iqSjabPdAkcuNT/BexWCy0tLRw
      6tQppqenuXDhAmtra9hsNvb39ykWi/T19TEwMABcH320v7/P6uoqn3zyCR0dHWa4lUoljh07
      Rnd3N5lMhlQqxZkzZwiFQlgsFmq1mtks09nZaVbMa2trJBIJvF4vLpeLSqXC2toaqqrS19cH
      XO9YzuVyLC8vEwgEUBSFRCJBPB7n2LFjqKpqNnUNDw8zOzvL7Owse3t7eL1edF03Q7fRBNTf
      38/W1hZbW1ucOXOGWCxGvV4nn8+zv79/T78fIcSj5VADIBgMMjg4yKeffspHH31ErVbDYrHQ
      2tqK1+s90NRis9lwu90HOizhTyODAoHATaNSMpkMFy5cYHZ2FpvNRqFQoK+vj8cee4xTp04d
      OIfD4TCHfd6urN/4xjdYWFhgZmYGTdPM8fCnTp3i2LFj5kSrcDjMxMQEhmHw8ccfMzMzQ61W
      w+l00t7eDkAkEqFarVIul/nggw+w2+1mZe9yuXjxxRfNET6qqqLrOpcuXaJUKuF2u8nlcrjd
      bh5//HEmJycBcLlcLC4usra2Zj7ta5pGOBzm+eefN4fOejwe+vv7OXHiBOfOnePKlStYrVY0
      TcPlcjE2NmbOP+jq6mJ0dJRSqcTMzAxzc3PmLOTW1tY7fosSQjz6FOOQG+sbp9vd3QWuV2KN
      yuduFQoF5ubmOHPmDKdPn+bYsWMUi0VCoRA2m+2ehy/m83lyuRzlcpnOzk7sdvstz9n4bolE
      why+6nK5bjrGMAyz2abRLHYr1WqVQqFALpfDZrPR0tJy07Xr9TrVatUcZurz+W7qs7hRY9Jc
      qVTC4XDgdrtvWaHXajUqlQr7+/v4fD48Hs9NYXyvtra2yGQyD21fg2EY5PN5XC6XzIG4S3IP
      742maZTLZXNpmgftvv3GwuGwOULnMNlsNrPZpPEEfK9cLpe5TILNZvvSczaaY2733RoT2hr/
      +3ZUVcXn8+F2u1EU5ZbfR1EU7HY7ra2t5silL7qnjfkPjSC53bFWqxWn00lnZ+eXnlMI8fV0
      6AHQqMA+PxTxsM7d6Pw8zGaKOz3fnXy3xjF38jTUqKC/6NjG8NM7raAVRbmj73Onxwkhvr4e
      ice+xqJqjZmyQggh7t0j0WjncrkYHx9nfHz8qIsihBBfG4/EG4AQQojDJwEghBBNSgJACCGa
      lASAEEI0KQkAIYRoUhIAQgjRpCQAhBCiSUkACCFEk5IAEEKIJiUBIIQQTUoCQAghmpQEgBBC
      NCkJACGEaFISAEII0aQkAIQQoklJAAghRJOSABBCiCYlASCEEE1KAkAIIZqUBIAQQjQpCQAh
      hGhSEgBCCNGkJACEEKJJSQAIIUSTkgAQQogmJQEghBBNSgJACCGalASAEEI0KQkAIYRoUhIA
      QgjRpCQAhBCiSUkACCFEk5IAEEKIJiUBIIQQTUoCQAghmpQEgBBCNCkJACGEaFISAEII0aQk
      AIQQoklJAAghRJOSABBCiCYlASCEEE1KAkAIIZqUBIAQQjQpCQAhhGhSEgBCCNGkJACEEKJJ
      SQAIIUSTkgAQQogmJQEghBBNSjEMw7iTA1OpFNls9n6XR3yNFAoFqtUqLS0tR12U26pWq6iq
      isUiz0J3S+7h3avX6+i6js1mO5Lrq3d6YK1Wo1Kp3M+yiK8ZXdep1+sP9d+bRhkVRTnqojyy
      5B7ePcMwqNfr1Ov1I7n+Hb8BCPFVbW1tkclkmJiYOOqi3JJhGOTzeVwuF6p6x89C4gZyD++N
      pmmUy2V8Pt+RXF/e2YQQoklJAAghRJOSd7ZHTKlUolKpUKvVaG1tlXZXIcRdO9QAaPRoa5p2
      4HNFUbBarVgsFvM/cXcymQz7+/sUi0VaW1uPujhCiEfYoQbA5uYm58+f53e/+92fLqCqhEIh
      jh8/zvDwMH19fbS1tR3mZZtKMplkZWWFdDrNk08+KW8AQoi7duhNQKqqcuzYMZ599ln8fj+a
      ppFKpYjFYpw9e5a5uTn+4i/+gkAgIJWXEEIcoUMPAEVR8Pv9DA4O0traSq1WI51OEwwGOXv2
      LNvb22xubuL3+79yADRGrB5WcNw4AvYowuiwv48QQnwV96UT2GKxYLVasdls2Gw2XC4XHR0d
      bG9vc+3aNVZXVxkfH6dSqVCv17FaraiqSrlcRtM0DMPA5/NhsVio1+tomkaxWKRWq6EoCqqq
      YrfbcbvdwMEKtFqtUq1W0TQNXdexWq3Y7Xbsdrs5265Wq1GtVs3rNcrqdDpxOBzAnyZoNI6p
      1+sYhoHFYsHlcmGz2bBarWYlXqlU0DSNWq1mXtdms5nXbpxT13UqlQrlctmcPKOqqvl9b/wu
      mqaZ30fXdRRFIZ/P39THIoQQd+OBjQJSFIX29nZSqRSpVArDMLh69SrZbJZIJEJfXx8ffvgh
      i4uLVKtV/vZv/5ZAIEAmk2FpaYl33nmHjY0NHA4HnZ2dTExM8O1vf/umDuWlpSVmZ2dZWloi
      lUoRDAaZmJjg+PHj9Pf3A7C3t8e1a9c4c+YM29vb+P1+hoeHOXXqFFNTU8D1yjqXy3H27Fnm
      5+dJpVLouk5LSwsvvvgiAwMD5hIHuq4zMzPDwsICm5ubpNNpWlpaOHbsGBMTE4yMjJjlSyaT
      fPLJJ3z88ccUi0WcTifRaJQf/ehH+P1+MywAdnZ2uHz5MteuXSORSGCz2bBYLHg8HiKRyH3+
      jQkhvu4e6DDQZDJJMpk0K+JMJkMsFqNarfLWW2+hKAqhUIj+/n48Hg+pVIqPP/6Y2dlZTpw4
      wfe//32q1SpbW1tcuHABVVU5ceIE7e3t1Go1zp8/zyeffILH4+Hpp5+mtbWVRCKBYRjmOka7
      u7u89957JJNJXnrpJfr7+0kkEiwsLPD666/T0tJCR0cHe3t7zM7OcunSJZ5++mkCgQCGYZBM
      JtnZ2SESidDS0oJhGJw5c4Zr167h8Xh45ZVXcLvdJBIJisUisVjMDID5+XmuXbvG0tISP/7x
      j3G73WSzWRYXF/nZz37GD3/4Q3p7e9F1nY2NDX71q1/h8Xg4ceIE0WiUer3OwsICe3t7yARu
      IcS9ui8B0Gg+qdVq1Go1stkssViMjY0NdF2nr68Pi8WCruskEgm2trbw+/0MDQ3R2dlJKBTC
      ZrOxvLxMLpcjEokwMTFBJBKhVqvh8Xio1WpMT0/T09NDOBymVqvx6aefEgwGGRgYYHh4GK/X
      SygUQtM0s/lnbm7OHEI5MjJCOBzG7/dTLBbZ3NxkdnaWQCBALpdjf3+fUChEX18fwWAQwzBo
      a2sjn8/j9/vN77q5uYnNZqOjo4OBgQEcDgehUIhSqWQ26ei6zvr6OltbWwwNDdHb24vT6aRU
      KmG32/nkk0/Y2dkhGAxis9k4d+4cXq+XgYEBRkdHaWlpoV6vk8vlKJfLD/X6OkKIR8OhB0Bj
      bZC1tTXS6TTVapVEIsH29jalUom2tjZ6e3vNirFUKrG/v8/p06eZnJwkGAya51pZWUFRFEZG
      Rujt7TU/t9lseDwe/vCHP5DJZMx2+oWFBf76r/+a8fFxQqEQAB6P50D5FhcXsVgstLe34/P5
      qFQq2Gw2gsEgbW1tLC4ucuLECQzDwDAMHA4Huq5Tq9VwOBxEIhE6OzsPtNXrum6uhqhpGqqq
      0tLSQltbm9lEVa1W2dvbI5fLMTIygqqq6LqO3W6nq6sLRVGIx+Ok02n8fj+XLl3i5ZdfZnx8
      nK6uLvNafr8ft9tNtVo97F+dEKLJHHoA1Go1ZmdnmZ2dBTDbrKPRKFNTUwcqZ4CWlha6urp4
      /vnnbzpXKpUiEokQjUYPfN6oiN1uN6VSiWQyaXaSdnR0HDj/58XjcbP9fGNjw/w8m81it9tJ
      JpPUajXC4TDRaJRf/vKXJJNJ+vr66O3tZWBggEAgYP45RVGYnJzkd7/7HQsLCywtLTE2Nsbg
      4CDBYBCXy2Wev9Hx27h2I0RqtZr5xpDP53E6ncTjcfr6+giHw1/p/gshxJ069ACw2WxMTU3x
      3e9+16yIG7N/VVW9acVAt9t9UwXfUKvVzD9/K41ROI0n9M+PorndObe3t8nlcqyurpqfN0b5
      9PX14XA4aG1txe/3MzAwwOLiIru7u7zzzjv8/Oc/5+WXX2Zqasp8cj9+/DgdHR3s7OywsbHB
      pUuXeP3114lGo5w4cYJnnnnGHJWUTqc5c+bMgXIahkEgECAQCGCz2SiXy+aII5k1LYS4X+5L
      H0CjiaaxxOmXVcq3q+S8Xi+6rpPJZOjp6TE/13WdarVKoVDAZrPh8/nMoZ35fJ5yuYzT6bzl
      OT0eD3a7nWg0yujo6E0/v3FIpsPhoL29HbvdTl9fn9mXMT09TWdnJ21tbdhsNrPJpxEcg4OD
      7O7usra2xuXLlzl58iQejwebzYbb7WZsbIyWlpab7ovP58Pj8Zh9B3t7e7S0tDzUG6oIIR5d
      93UU0L1OcGoMG11fX2doaMis1AuFgjkk1O124/V60TQNv9/Pzs4OgUCAaDSKqpQiOJYAACAA
      SURBVKpommbOLfB4PHR0dFAsFnE4HPT29uJ2uzEMg1qtRrlcJp/PY7FYyOfzlEolvF4v7e3t
      WCwWyuUyoVCI119/nXw+b/YTxGIxPB4Pbrfb7MMIhULs7u6yvLxMvV7H5XLh9/vxer1YrVaG
      h4exWq0oikK9XiedTmOxWLDb7dTrdVpaWtjc3DSbkZxOpxl6pVLpnn83QgjxULcvDA0NUavV
      uHLlCslk0tw5Z39/n/fee4++vj7zydtutzM5Ocm1a9e4du2aWUk2OpljsRgAo6OjlEollpaW
      2N/fN69VKBTY3NzkzJkz5PN5dnZ2mJ6eJpFImO32tVqNXC53YHE7wzD47LPP2NjYoFAomOfL
      5/NUq1VzktuN/RZnz56lVCqZzU6apnHlyhUWFhbM8f7Dw8OsrKywsrJCJpMxzxmLxdjb23tQ
      vwIhxNfYob4BKIpi/ncYRkdHURSFzz77jH/+53+mtbWVSqWCxWIhHA7zd3/3d+ZsYJvNxg9+
      8APeeustpqen+c1vfoPT6aRSqTA+Ps6TTz7J4OAgU1NTWCwWzp8/z7/8y7/gdrvRNA2LxYLP
      5+M73/mO2ayTzWb5t3/7N3MClq7rlMtlfvCDHzA8PIyqqtTrdRwOB//7v/9LMpk0RwMVi0XG
      x8d57bXXzCGoTz75JJFIhDfffJN//Md/NN9oyuUyQ0NDvPTSS2Yz0A9/+EN+8Ytf8O677/Lr
      X//abOby+XwHRkoJIcTdOtQtIUulkjnapaOjw1xW4Xb29/epVqu4XK7bjtzJ5/PmYnKlUgmL
      xYLT6SQQCNDX13fgSbxerxOPx8lkMuZ4eafTSTAYJBQKmRO3stks6XSadDpNsVg0m17cbjdt
      bW34/X4qlQqZTIZ4PE6hUDCXoXC5XPT19eHz+XA4HBiGwf7+PqlUyux/qNVquN1uQqEQ4XDY
      HDWk67r5RpJKpcwlHWw2G4FAgNbWVjweD6qqmp3VyWSSXC5nzkJuvO3Y7Xa6u7sf6nWEZEvI
      rz+5h/fmqLeEfCT2BG7sM5DNZs3mlNt18t54fLFYNP9ifr6judF+XygUDqxbdLtjGm8JjQr6
      8xVvvV431xfSdd3s9LVarbcsY61WMydzORyO2/7jqVQqVCoVqtUqgUDgltd+WEkAfP3JPbw3
      Rx0Aj8RvrDEc8k43QGkcf+N4/c9rNFV90Y2/k2NuvKbT6fzCYLrRrYbE3orD4fjSNykhhLgb
      D3UnsBBCiPtHAkAIIZqUBIAQQjQpCQAhhGhSEgBCCNGkJACEEKJJSQAIIUSTkgAQQogmJQEg
      hBBNSgJACCGaVNMEQL1ep1KpmIvKCSFEs2uaAGgsJjc7O0sqlTrq4gghxJF76AOgsSLnvarV
      aiSTSc6cOSMbqgghBI9AAAghhLg/DnU56L29PdbW1lBVlVQqZW5mYrVazY3QNU1jcXGRWCyG
      2+2ms7OT0dFRotEocP2Jv1KpMD09zfLyMvl8HoBwOMzzzz9PIBDAbrcDUCwWWVpaYnt7m1Qq
      Ze71Gw6H6enpYXx8HIC1tTUWFxdZXV013wJWVlZQFAWHw8GpU6eIRCKHeSuEEOKhd6gBkMvl
      WF5eplgsHtiqsVKpcPHiRXOD83K5jMvlolQqsbW1ha7rZgBks1m2t7eZnZ3FZrPh8Xio1+uk
      UikuXLjAxMQE0WgURVEoFovE43HS6TRwfe38arXK5uYmqVTK3JELMHcMazQpff4/IYRoNoca
      AJVKhVQqxfb2Ns8++ywDAwP4/X729vb4z//8T9xuN0NDQ0xNTdHV1cXS0hKLi4tcvHiRV199
      FcMwiMVinD9/nkQiwfe+9z06OzupVqucP3+eDz74ALfbTSQSwW63U61WUVWVrq4uenp68Hq9
      bG5uMjMzw/z8PD09Pfj9flpbWzEMA4vFwvb2NgMDA4yMjADXA8rv9x/mbRBCiEfCoe8I5nA4
      ePXVV5mamjJ30urs7OQ3v/kNJ06c4KmnnqKtrQ0Ap9NJuVzmwoULwPWROhsbG1y+fJmf/OQn
      9Pb24nQ6MQyDb37zm3z44YdsbW2xvr7O8PAwXV1ddHV1Hbh+OBzG6XSiqipLS0tMTk6aWyk2
      9h/u6OhgcHDwsL+6EEI8Uh7YlpAWi+WmvWwbWy425HI5CoUC9XodgJ2dnQN7+fp8PjRNI5vN
      mp/t7e2xs7PD7u4u2WwWXddJp9NkMhnC4bA07wghxG08VHsC12o1arUamqaxvr5+00bujT13
      Gxutb25ucvXqVTKZDE6n03zjUBRF2vaFEOJLPFQB0KDrOqlUClVVD7whtLe3E4lEzIp+bm6O
      hYUFnE4n/f39tLe3o6oqsViM1dVVEonETeeWYBBCiOseqgDw+Xy43W4cDgfPPfccHR0d5pDP
      W5menmZkZISxsTGGh4fNz3VdJ5FI3BQAVquVSqWCruv37TsIIcSj4qGaCOZwOGhvb6enp4ff
      //73xONxNE3DMAw0TeP8+fNcuHCB1dVV4HqHbzabJZFImE/2GxsbXLp0yexYvvHc3d3dVKtV
      dnZ22NnZOTA0VAghms0DewP4fAfw7Y7p6uriiSee4MKFC7z11lu4XC5UVaVcLqPrOn19feak
      rbGxMa5du8b09DRbW1sAaJpGoVDA5XIduKaiKNjtdkZHR4nFYrz11lv4/X4sFgtPPvkk7e3t
      9+eLCyHEQ+pQA8Dj8dDZ2UkwGDQ7ahv6+/sJh8PYbDbzM6vVSjAY5NixY+ZnoVCI8fFxEokE
      W1tbpNNpLBYLmqbR1dWF3+/H6/UCMDg4SDKZZH19nY2NDaxWK36/n5aWFqLRKIZhoKrXv2Jj
      xNHjjz/OwsIC+/v7ZudxpVI5zNsghBCPBMV4iNs/NE2jWCyiaRp+vx+bzXbLN4lisUgmk8Hr
      9ZpvDF+kXq9TKpXIZDK0traiqupNgSXu3dbWFplMhomJiaMuyi0ZhkE+n7+jvzPi1uQe3htN
      0yiXy+bAlgftof6Nqap6R7N0XS4XLpfrjs+rKAput/umZiIhhGgmD3UA3Gnl/FUr8cbxUvkL
      IZrZQzUKSAghxIMjASCEEE1KAkAIIZqUBIAQQjQpCQAhhGhSEgBCCNGkJACEEKJJSQAIIUST
      kgAQQogmJQEghBBNSgJACCGalASAEEI0KQkAIYRoUhIAQgjRpCQAhBCiSUkACCFEk5IAEEKI
      JiUBIIQQTUoCQAghmpQEgBBCNCkJACGEaFISAEII0aQkAIQQoklJAAghRJOSABBCiCYlASCE
      EE1KAkAIIZqUBIAQQjQpCQAhhGhSEgBCCNGkJACEEKJJSQAIIUSTkgAQQogmJQEghBBNSgJA
      CCGalASAEEI0KQkAIYRoUhIAQgjRpCQAhBCiSUkACCFEk5IAEEKIJiUBIIQQTUoCQAghmpQE
      gBBCNCkJACGEaFISAEII0aQkAIQQoklJAAghRJOSABBCiCYlASCEEE1KAkAIIZqUBIAQQjQp
      9U4P1HUdXdfvZ1nE10y9XscwDKrV6lEX5bZqtRqaplGv14+6KI8suYd3r1arUavVjuzfiGIY
      hnEnB25sbBCLxe53eYQQQjwgdxwA1WoVTdPud3nE18j+/j75fJ6BgYGjLsptFYtFHA4HVqv1
      qIvySDIMg1KpJPfwLjWe/t1u95Fc/46bgOx2O3a7/X6WRXzNpNNpLBYLHo/nqItyS4ZhUK/X
      cblcqOod/1MQNzAMA8Mw5B7eJU3TjvTfiHQCCyFEk5IAEEKIJvW1eGfL5XLs7e1RKBQYHBzE
      6/UedZGEEOKhd6gBkEql2NjY4OrVq+ZniqJgt9vx+/1Eo1E6OjoIBoOHeVnK5TKxWIxEIkE0
      Gn3kAqAxVLJQKGC32x+58gshHk2HGgC5XI6VlRU+++wzwuEwNpsNRVFQVRWbzUYmk6FYLHL8
      +HHsdjuKohzKdTVNI5vNkkqlqNVqh3LOBy2fz7O2tkYgEJAAEEI8EIfeBKSqKseOHeN73/se
      4XAYXdfJ5/N89tlnzMzMsLq6SjQaJRKJHPalH1mGYRCPx/n000/p7+9naGjoqIskhGgC96UT
      2GKxmMNGXS4XbW1tfPvb3+bUqVO43W4uXrx4y1mDjSFlj4pHrbxCCHGj+9IJ3GjaubGJx2q1
      4vf78Xq9ZDIZs+IsFovE43HOnz9PLpdDURT8fj+Tk5NEo1EcDseBc2ezWXZ3d1leXiadTmO1
      WqlUKmSz2S9sOsnn8ywsLKCqKvl8nkwmQyqVwmq10tPTQzgcxm63c+3aNfPzlpYWjh8/TiQS
      OTDGeXt7m6WlJXZ2dsjn8/j9foaHh+nu7iYcDgPX+yV2dnbY3NwkkUhQKpVQVRWfz0c0GmVi
      YgKLxUIymWRhYYH5+Xl2dnYol8vmkht2u52hoaGHeiKVEOLR9cBGATUqfEVRsFiuv3iUy2V2
      d3e5fPky6XTaXDsmmUxy/vx5nE4nra2tZgjkcjkWFxdZW1sjm81iGAYWi4VyuUyxWPzCyRTl
      cpmlpSXK5TJWqxXDMKhUKlQqFXK5HD6fj2AwSCqVolQqoWkauVwOi8VCMBhEVVV0XadcLnPx
      4kXS6TSVSgXDMMhms8zOzlKpVHA6nXi9XsrlMvF4nO3tbarVqrnmRzqdZm9vj0gkQjAYpFar
      USqVKBQK1Go1KpUK+XweuB4AMvtaCHG/3JcAaDSN3NjMo+s6mUyGfD5PZ2cniqKQyWSYn5/n
      /fff5yc/+Ql9fX3UajVWVlb4+c9/TldXFw6HwwyAra0tPv30U5LJJE899RSTk5PU63U2NjaY
      np7+wjLVajVSqRRra2scP36c8fFxotEom5ubvP7668zOzhKNRnnppZdob29nf3+f+fl5Pvnk
      E06ePInb7aZarRKLxXjvvfd4+umnefbZZ4lGoywvL/N///d/FAoFwuEwXq+XSqVCvV7H7/cz
      MjKC1+s1z/nRRx8xODjI2NiY+fNarUY+n6erq4uTJ09e/+WoKi0tLffjVySEEPcnAMrlMnt7
      e+b6Qblcjk8//ZS9vT3a2to4ffo0FouFy5cvs7W1xcmTJ3n88cfNP+9wODh58iRXr1413wIA
      Xn/9ddrb23n66ac5ceKEeXy9XieRSLC3t/elZXvllVcYHx+no6MDgEgkwsWLF+nq6uJb3/oW
      XV1dALS0tOBwOHj//ffNkUWpVIq33nqL48ePc+LECfr7+wEYHR1la2uL9fV1zpw5w9DQEO3t
      7bS3tx+4dnt7O+FwmGq1yvLystlk1NnZST6fZ3l5mXA4zPDw8N3ffCGEuEOHHgC6rrO5ucnb
      b78NYD4Jd3d389xzz9HT04PT6QSuN+mUSiXC4TCbm5vmOSqVCg6Hg729Pcrlsvk2kUwmGRkZ
      obu7+1DLrCjKTUNSb/WZpmnE43GOHTtGNps9UObGctnFYtH8LJPJsLe3x+bmJvl8nlqtRqFQ
      YGtri9bWVlk+VwhxpA49ABRFwe1209nZia7r7O3tsbi4yMjICNFolGg0anaoVqtVisWi2RTU
      oOs6lUoFu92OqqrmRKlyuXxfJkrdbj7C5z+v1+sUi0VyuRwbGxskk0nzZ5lMBsBsrorH4ywv
      L7OxsYGqqlgsFlRVxW6343a7ZQSREOLIHXoAWCwWotEoL7/8MqqqsrS0RCwWQ1GUW1Z6lUqF
      eDx+00qCiqLQ2dlJIBDAMAyzGaZerx/5xjSJRMJcRfJGPp8Pv98PwOrqKleuXCEej/Pcc8/R
      3t6O3W4nn8/jdDpv2VwloSCEeJDu6yiglpYWHnvsMQKBAD/72c/Y39/n1KlTZienx+MhEonQ
      0dHBX/3VX932PIZh4PV6sVqt7O3tsbW1xbFjx+5n0W9JVVVCoRA9PT2cPn2a3t7e2x577do1
      PB4Pp06dOtC/kUql2N/fZ39//8DxVqsVTdMe2ZnMQohHz31fDdRms9Hb28sPfvADFEXhj3/8
      Ix999BG6rjMwMEAwGOTSpUtsb2+bwyo1TWNtbY0PPviAlZUV81wjIyOk02mmp6fZ3d3FMAwK
      hYI5L+B+83q9TE1NcfXqVVZWVkilUuZT+97eHpcuXeLDDz8EIBAIoGkasVjMPGZ/f59r167x
      ySefHGj/VxSFrq4uFEUhkUiwsbEB/GlLxYZMJsOlS5e4cOGCea+EEOJuHeobwK06Ti0WCw6H
      g6GhIcrlMouLi5w7d46WlhY8Hg/9/f0kEgneeecdAoEAVqsVXdcpFApm80/jnCdOnODy5cts
      bm7yhz/8gUgkQqVSIZVKUSwW76lv4E7WJXK73YyMjLCwsMDy8jL7+/v4fD5zLL/NZiMUCgHQ
      29vLwsICS0tL5lN9tVoln8+jqupN98rpdNLd3c3+/j7vv/8+4XAYRVEYHh42J4Ktrq4yOzuL
      3W5nYmLirr+rEELAIQeA3W43n3xtNtuBnwWDQY4fP47D4eDdd98lHo8zNjbGwMAAlUqFjz/+
      mJ2dHeB6k4/b7aavr+9ApT46OkqhUKBYLLKyskIsFjMDJhKJ0NraettdiWw2G+FwGJ/Pd1PZ
      GpXtjZ8rioLD4aCnp8c8p91up6uri8cff5xr166xsrKCxWKhVqvhcrno6emhra0NuB4AjVFA
      ly5dwmq14vF4zFnD9Xrd7DBuhMHIyAiGYbCyssLu7i52u51QKGQON52bm2N3d5f29nZzMp0Q
      QtytO94T+H5qNJE0loj4spE+1WqVbDZLPp8nFArh8Xge+H6k9XrdnLXrdDpvuyVeY+io2+3G
      5XJ96baa9XqdWq1GPB4nEAiYe63W63X+6Z/+ifHxcU6dOvVIzBXY2toik8k8tG8rhmGQz+dl
      O8N7IPfw3miaRrlcxufzHcn1H5rfmKIoBAKBOzrWZrPR0tJCMBjEYrEc2rLSX4WiKDidTnNZ
      69uVQVVVIpHIFx7z+fPabDba29vNP1MqlVhcXCQajTI+Pm6+EQghxL14KALgVovHfdnxD/qJ
      /1ZlAL60HF+1rLc6r6qqtLW18cwzz9DZ2SlPWkKIQyE1ySNAVVVaW1tpa2uTtn8hxKGRAHgE
      NPZXEEKIwySPk0II0aQkAIQQoklJAAghRJOSABBCiCYlASCEEE1KAkAAmJvulMtl2ahGiCYh
      ASCAP+3Z/MYbb5ib2wghvt4kAASAuQLr2bNnyefzR10cIcQDIAEggOtNQLquk8vljnzHNSHE
      gyEB8P8d9naMR7m9o2wtKYS4ExIAQgjRpA51LaD19XXm5uYYGRmho6PD3PAE4OLFi2iaRiAQ
      YGRkhNXVVTY2NiiXy3i9Xi5dukQymcThcNDZ2cnzzz9vbqReqVTY3t7m8uXLZlv12toa9Xqd
      jo4OxsbGeOKJJ/B4PMD1rRN3d3dZWVnh+eefJ5lMsri4yPz8PI899hgjIyOEw2EMw+D9999n
      YWGBvb09SqUSHR0dPP300/T399Pa2mqWP5/Ps729zblz59jZ2cFisdDS0kJfXx8vv/yyed2N
      jQ3effddEokENpuNSCTC6dOnGRsbO7CeTzweZ2FhgdXVVXN7y0gkwvDwMKOjo7S0tKDrOmtr
      aywsLLC+vk46ncbtdtPZ2cn4+DhjY2Pm6qG6rrOyssLZs2fZ2tqiUCgQDAZ55plnGBwcJBKJ
      mNcul8tsb29z8eJF1tbWqNVqqKp600Y5Qoivt0MNgEYl2dnZeaDCAUgmk1QqFfP/FwoFFhcX
      yWazdHV10d3dTU9PD4VCgXw+z8WLF3nppZew2+3ouk4+n2dubo5QKEQ4HOaJJ54gk8mQTqeZ
      n5+nVCrx6quvAn/aMGZzc5NLly4Rj8fZ29sjGAzS0tKC3W4nl8uxtrbGlStXaGtro7OzE4vF
      Qi6XY3p6mkKhwOOPP04wGKRYLDIzM8PS0hJWq5WJiQlz7+JUKgVALpdjYWGB6elpuru7GR0d
      NcPqww8/JBAIEIlEcLlcAHz88ceUSiVze0fDMCgWi1QqFbLZLC0tLayurjI/P08sFqOnp4fe
      3l40TQNge3ubsbExAHNbzHfeeYdgMMjk5CR2u51iscjly5ep1WrY7XaCwSC1Wo2ZmRmWl5cp
      FouMj49jsVjQNI10On2Yfx2EEA+5Qw0ATdPI5/NomnZTG3S5XKZcLlOtVoE/VdLlchmPx8PE
      xARer5d4PM78/DxXr17lqaeewu/3m5VtNpslGo0yODhINBolmUwyOzvL6uoq586d44UXXsBu
      t5vj2WOxmLmpisfjYWxsjI6ODpxOJ7u7u5w7dw5FURgaGqKvrw+Hw8Hq6ipvv/026+vrtLa2
      EgwG2dnZMfcAPn36NCMjI+i6TjqdZnd3F4BYLMbq6ip7e3u8/PLLdHZ2UqlUWF1dZXp6mtXV
      VZxOJ06nE7j+RtTf38/IyAhDQ0MYhsH29jaKophLPq+vr5vf4fjx43g8HnK5HOl0mlwuZ97b
      fD7P6uoqa2trHD9+nGPHjuH3+4nFYvzP//wPGxsb5ndJJBLmG8/IyAhPPPEEdrudfD7P2toa
      Z8+ePcy/EkKIh9iRLgcdDocJhUJ897vfNT9zu90oisI777xjbqbe0NHRwfHjx5mcnASgpaWF
      1tZWrFYrv/vd79jf3zffPGq1GltbWxiGwUsvvcQ3vvEN8+lb13WSySTnzp3jH/7hH4hEIrjd
      bgAmJydJJpOsr68zMzPD8ePHmZ6eRtd1Jicnee655w6Up/EUvrCwQDabNSv0xncxDIPR0VEW
      FhYIh8NEIhEMw2B/f59nnnmGkZERWlpaAMz9hBvi8Th2u53e3l56enoACIVC9PX1HTgukUgw
      MzPD6OgoQ0NDB/YlPnbsmNncND4+zszMDMVikf7+fl577TXzHC6XSyaACdFkHrr9ABRF+Uo7
      XjWaVlpbW9nf3zcrU4vFQjAY5G/+5m/o6uo60P6ez+fJ5/PYbDZ6e3tv2olscHCQeDzO5uYm
      cH1v256eni/chzeRSJh9CAsLC+bn5XIZl8vFxsYGxWLR/I7f+MY3OHv2LBcuXGB4eJjh4WF6
      e3vxer3mbmCTk5N89NFH/Pa3vzX7Vhobzzf6OwCKxSKxWIzHH3+c3d1dstms+TOLxUK5XCaZ
      TAKwublJW1ubGVJCiOb10AXAV9UIDKfTeaAit1gs+P1+PB4PNpvtwM90Xader2O1Wm+5w5bV
      akVRFHM8vK7rXxpMuq6b/Q6NZq7G543N610ul1mOF198kc3NTbNv5NNPP+XChQv09fUxPj5O
      JBIhGo3yzDPP0NfXRzabZX19nYWFBTweD8eOHeOJJ55AURTq9TrVapWtrS3K5fKBsMvlcuYe
      ygClUsncS1kI0dzuSwA8yDHotVoNTdPQNA2Px2NWbI1N21VVvamyU1UVq9WKrutUKhVsNtuB
      Y8rlMrqum6NiGh3RpVLptuVonBPA5/Md+FkwGMRutxMKhczP+vv7CQQCJBIJ4vE429vbbG9v
      s7a2htPpJBKJ4Pf7GRoaIhKJsL29TSwWIxaLkUwm+fTTT3nsscfMELPZbNTrddxut9nU1SiL
      qqoH3ozK5fIXfhchRHM41ABodLjW6/UDk5EaC43dazDceD5FUTAMg3K5TDabJZvNEgqF7mgo
      o8vlwul0UqlUyGQyBAIB86nZMAwSiQSapuH3+4HrFXilUiEejzM8PHzgbaLxJuHxeAiFQnR0
      dPBnf/ZnB45pfH+LxWJ+B13XCQQCBINBsznm7NmzLC0tceXKFZ566il0XTf3Aw6HwwCk02mm
      p6f5+c9/TqVSwel0miN8IpEITz31lHls49o33ne/3082m2Vvbw9d183ga5RRCNE8DrUdwOl0
      4vf7mZ2dpVQqYRgGpVKJq1evcvXqVbMd+m5pmoau62aFlsvleOONN5iZmWFsbIxwOHxHAWCz
      2Whra+PkyZP893//tzkWvl6vE4vFeP/99ymXy5w8eRKAZ/5fe3fW28Z19gH8P5zhDIe7uEgi
      Re2LRcu27EZ2mtbpkgQIetvWSNGin+C9e9EP0A/Qr9CbAkGQAL0oEDhODBdG6jiW5a2CLFu2
      JUrURq0Ud84MZ+a9cOa8ojZLsmyJ4fMDfGHhaHjmoTDPnHOeM/PeeyiXy7h16xaePXsGwzBg
      GAZWV1fx8OFDAEA8HofT6cTIyAhmZ2fZNJCiKJicnMS1a9eQSCTY4xa++uorTE9Ps3amaSKT
      yaBcLrP9E7du3cLDhw+xvLzM+l4oFJDL5cDzPBu5NDY24sKFCxgeHsaLFy+qyjmTySRu376N
      W7duAQDOnj0LRVEwNjaGhw8fwjRNVCoVLC4u4v79+6/1/RBCasuRjgCCwSD6+vpw7do1fP75
      5+wu3booW1Mke7FGETtZXl7G1atX8f3330MURWSzWUiShI6ODpw9e3bbcfYSCoXwq1/9Cl9+
      +SWuXbsGURQhSRJWV1cRCAQQj8dZtU1zczMGBwfx9OlTfPnll3C73ahUKqy8dGhoCLFYDOVy
      GZqm4YsvvoDb7QYAlrDi8ThbpxAEARsbG/jqq6/YMfL5PAqFAtra2nDhwgUAL6eVnjx5gtu3
      b7PqqHw+D5vNhg8++ACCIIDjOHi9Xpw6dQrnz5/H3bt3MTIyAkmSWFKLRCJslNHR0YHTp0/j
      yZMnuHr1Ku7evQtd13ddDyGE/HgdaQJwu91oa2vD4OAgCoUCDMOAIAgIBAKw2WzweDysRDEc
      DuPUqVOs/NLC8zy8Xi/ef//9qkoXAJAkCX6/H4FAAKZpwuVyIRwOo7W1FS0tLaydtVv2/Pnz
      VbuRN5NlGbFYDIODg1hbW4OiKOA4DrFYDN3d3awix2rb3t4OQRAgSRJUVYVpmpAkie0Wdjqd
      rFRzYmKCTXnZbDY4nU60tbXB4/GA4zjY7Xb09PSw3cdW7X80GkVHRwc7l2g0Cl3XIcsyu5g7
      nU40NDSgr68PNpuNHa+hoQEXLlxAIpFAoVBgUz9OpxPRaBTNzc3sO+rt7YUoilW7gD0eD3w+
      H0KhEJv6IoT8uHHmEa/YWodbWVkB8P/TQq+jUChgYmICd+7cwbvvvou+HLL25QAAFHJJREFU
      vj5WzbLTIu9hjl8oFKAoCsLhMERR3PGY1rml02kIggBRFNnGrs1tTNNENptlF+etSc6iqipK
      pRIrSbXWIrauMWiahkwmwxa6rcqmnVib4KxqIKfTueO56LoOVVWxuroKt9sNp9O5a7I8rPn5
      eWQyGZw+ffpIj3tUTNNEPp+HLMsHKj0m/49i+Ho0TUO5XN5WOPK2HPk3Zl28tj4K4qjY7XZ4
      PJ4jDZh1UX0V69w2V/Ps1IbjOPj9/lceTxRFiKIIn8+3axubzQZJkvYdT2vEsVvSsfA8D1mW
      2aiFEFJ/amrSd6/1AUIIIQdTEwnAbrcjEong0qVLaGpqOu7uEELIj0JNTNqJoohIJIJIJHLc
      XSGEkB+NmhgBEEIIOXo1MQIg5G0oagY+H6d3IhyUaZjgOA2g5bmDMwETJjju9TbJHhYlAEJ+
      YAIoavQu5cOhuL2e44kfTQERQkidogRACCF1ihIAIYTUKUoAhBBSpygBEEJInaIEQAghdYoS
      ACGE1ClKAIQQUqcoARBCSJ2iBEAIIXWKEgAhhNQpSgCEEFKnKAEQQkidogRACCF1ihIAIYTU
      KUoAhBBSpygBEEJInaIEQAghdYoSACGE1Cl6JzAhP3DZbfifoeBxd6OmmKaJfD4PWZYhCHQ5
      OShN01Aul+HxeI7l82kEQAghdYoSACGE1ClKAIQQUqcoARBCSJ2iVRtCfqBXilic/PS4u1Fz
      dF0Hb7MBHHfcXak5pmnCNAxkeP5YPp8SACE/ME0dSmH2uLtRkyrH3QFyKDQFRAghdYoSACGE
      1ClKAIQQUqcoARBCSJ2iBEAIIXWKEgAhhNQpSgCEEFKnKAEQQkidogRACCF1ihIAIYTUKUoA
      hBBSpygBEEJInaIEQAghdYoSACGE1ClKAIQQUqcoARBCSJ2iBEAIIXWKEgAhhNQpSgCEEFKn
      6J3AhPyAF1xoG/jf4+5GjTFRKBTgcMjgj+nF5rWsUtGgqiqcTtexfD4lAEJ+wHE22CX/cXej
      ppimCV4VIIgyBIEuJwdm01AxyrBLnmP5+H1/Y+VyGaqqvsm+kB8ZVVWh6zqy2exxd2VXxWIR
      lUqF7l4PyTRNlEoliuEhVSoVaJoG0zSP5fM5c5+fPDs7i6WlpTfdH0IIIW/JvhOAYRjHlqVI
      bVpcXEQmk0F/f/9xd2VXpVIJkiTBZqN6iMOiGB6erutQVRWyLB/L5+97Coi+XHJQHMeB47gT
      OzVgmiZsNhtsNtuJ7eNJRzF8PVb8jit2dFUnhJA6RQmAEELqFCUAQgipU5QACCGkTlECIHVN
      EARwHHfc3ahpFMPD4zjuWDfQ0dY9Urc4joMoisfdjZpGMXw9PM8fa/UUjQAIIaROUQIghJA6
      RQmAEELqFCUAQgipU5QACCGkTlECIISQOkVloKSm6boO0zRhmibsdvu+2huG8cr6a13XoWka
      8vk8PB4PBEHYs1yvUqlAURQoisLa10pt/H5jaBgGe7+DLMsQRfFAMbTb7Xs+VLJSqbD3jtRa
      DC2mabJz5nkeDocDkiTt2d4wDGQyGdjtdoii+Mr2qqqiUChAFEU4HI7X2kdACYDUHOux5Ovr
      60in09B1HS6XC7FYbNf2mqYhl8thaWkJkiTB6/UiHA7v2N46bjqdRrFYhMvlQkNDA/u39dgr
      KytYXV1FLpeDqqpwu91obGyE3++Hy3U8r/p7FeuCn06nsb6+DtM04XK50NLSsmP7XC6HjY0N
      dp4OhwNerxfBYHDHOK6vr2N9fR0bGxsshoFAAA0NDfD7q9+6ZhgGVldXsbKygnw+D03T4HK5
      TnwMNzPNl6/GTKfTWFlZQbFYhM1mg9PpRCAQQCQS2ZbQFEVBJpPB8vIy0uk0BEFgf2vRaBQ2
      m62qfbFYxOrqKtbX15HL5WC32+H3+xEIBBAMBg+1n4ASAKlJhmFgdHQU9+/fh2EYOH369J4J
      IJ/PY3R0FNevX0dbWxvOnz+/awIYHx/HyMgIJicn4fV62TsNhoaG8N57723rx927dzE8PMwu
      jJlMBpcvX8bFixfR19d35Od+VHRdx+joKEZGRmCz2XD69OldE8DMzAzu3buH4eFh+P1+FAoF
      hEIhXLx4Eb/5zW+2tR8bG8PIyAgSiQS8Xi82NjYwMDCAoaEhvPvuu9v6cffuXXz//fcoFAqQ
      JAnZbBa/+MUvcPHiRfT09LyR8z9Kpmlibm4Od+7cwb179+D1eqEoCgCgr68Pf/jDH+B2u6su
      0ul0Gvfv38eNGzfA8zwbPXZ0dOBPf/oTHA5HVQJYWlrC9evX8fTpU9hsNiiKgnA4jHfeeQe/
      /vWv4XQ6D9xvSgCkpqRSKTx+/Bg3b96EoiiQZRmhUGjX9lNTUxgeHsbY2Bg0TYPb7d5156qm
      aRgbG8O///1vdHZ24ve//z2i0Sjm5uZw48YN3Lx5Ew6HA+fOnQPP80in05icnMTXX3+N3/72
      txgYGIDP58Pc3Bw+/fRTqKoK0zRx6tSpNxWOQ1lcXMTY2Bi+/fZbFsPdkiEAPH78GP/5z3+Q
      z+fxl7/8BW1tbVhbW8ODBw/wzTffoLm5GT09PfB4PFBVFY8fP8aNGzdw6tQpfPLJJ4hEIpid
      ncX169dx8+ZNiKKI8+fPg+M4rK+v4/nz5/j6669x5coVxONxeDwezM/P4x//+AdUVYVhGCc6
      kQLAo0ePMDY2hrW1Nfz1r3+F1+uFpmlIJpP47LPPcO3aNVy6dAmdnZ0AXr4u9erVq1hZWcFH
      H32Ejz/+GKqq4t69e7h9+zY+++wz/O53v4Pf74dhGKhUKvj73/+O1tZWfPLJJxgaGoKiKPjX
      v/6FZ8+eIZPJ4I9//OOB+02LwKSmWMPfSCSCK1eu4OzZs9umZTZbXFwEAPT39+PKlStob2/f
      9U6pUqlgYmICkUgEXV1dCIVC4Hke4XAYXV1dCIfDmJiYgGEYAF5Oi7x48QIDAwNobW2Fz+eD
      3W5Hc3Mz+vv7wXEcpqenjzwGr2ttbQ35fB7RaBRXrlzBmTNntk3LbDY1NQWHw4He3l40NzdD
      EAQ0NDSgvb0d/f39mJiYQKFQAPAyiU5MTCAWi6Gzs5NNTTQ2NqK7uxuhUAgTExNsGi+TyWBq
      agoDAwOIxWLw+XwQRZHFEACSyeSbD8prmp2dhWmaOHv2LLxeLwRBgMPhQGNjI9577z0kk0ms
      r6+zv51EIoFyuYympib85Cc/Ac/zkCQJHR0dGBwcxNTUFAqFAnRdh6IoSCQSsNls6O7uRm9v
      L2w2GyRJwtmzZ9Hc3Izp6WkoisKOv1+UAEhNkWUZzc3NGBwcxLlz59DU1ASHw7Fre2tIbbX3
      +Xy7Lprpuo5EIoFIJIJoNMpe0+d0OhGLxRAOh5FIJNjFK5/PY2ZmBv39/QgEAuy1iC6XC11d
      XeB5HgsLC0cfhNckyzIikQiLSWNj454xnJ2dhcPhQGdnJ1wuFziOgyRJCIfD6O3tRSKRQKlU
      AvAyiSYSCUSjUUQikW0xDAaD22I4OzvLYiiKIothd3c3OI47kTHcam1tDQDQ1tbGzoHnebjd
      bgwMDCCbzSKbzaJcLgN4mdTsdjuamprQ3NwM4OVbF0OhELq6ulAoFJDJZFAul6EoCmZmZhAI
      BNDU1IRAIMDetNfW1oZQKMTa67p+oH5TAiA1pbW1FUNDQ/j5z3++r/fQxuNxXLp0CefOnXtl
      dYWu61hYWEA4HN42qggEAggEAlhYWGDvxy6VSkilUujs7Nz2TteWlhbwPI+VlRW24HpStLe3
      Y2hoCD/72c/2jKHV76WlJTgcDnahsrhcLrS1tWFhYQGKosA0TVQqFSwsLKCpqWnbqCIYDMLv
      92NhYYEdu1gsYnl5GZ2dnduSUCwWA8dxWF1dPXEx3KpYLMIwDLjd7qqfi6KIlpYW2Gw25PN5
      5HI5AMDCwsKOhQiyLCMQCMDpdLIiBEVRsLCwgFgsBo/HU9Xe6/XC7/dDkiQsLS1B07QD9ZsS
      AKkpgiAcqOzNbrfvqzrCGmqrqgqfz7et8sTtdsPr9UJVVVbuqSgKNE1DY2PjtnWFhoYGOBwO
      1u4k2W8MTdNkMXE6ndsu6NYoYGtMVFXdsXrH4/GwdQLrznZzDLeWoFqjqpMYw62cTieKxSJe
      vHhR9XPrTj0YDMIwDJYAstksnE4nvF7vtmPxPI+mpiaUSiUoisJKb0Oh0I4vj5dlGcFgENls
      9sAjAFoEJgQvpy5KpRJsNhtEUdyWNARBYEP7YrEIXdehqiprv/UuenONfLFYhCiKNVfTbhgG
      isUigJfnv/UCzfM8O3dFUVAsFlEul/cVw1KpBJ7noWla1XE2q6UYdnZ24tmzZ3jw4AE8Hg9i
      sRgMw0A2m8Xy8jLW19cRCoWgqiqAl+fD8/yO+y44joMsy1AUBZVKBYIgsOqonW5mrPUD6+/y
      ICgBkBPFMAyUSiU8f/6c/cxadGxubn5jz07nOA4cx71ymsE0TdZ2P+2tY79Nuq6jVCpV3Y1a
      NeORSOSV02ab7afvm2Ni/f9NtD9uqqoik8mwKSzg5bx9T08POjo6oKoqXrx4gdHRUUxPT8Nm
      s0HXdVQqFaiqCo7jWOxfdT5bz3k/5785pvtFCYCcKLquo1Ao4MGDB+xnsiyjq6sLjY2NbywB
      WHet1qYxwzCqLpTWrlbTNCGKIrs7tdpvnWrSNI3djb3tF6YYhoF8Pl8VQ6fTic7OTjQ1Ne07
      AVgxAcAuZJvPxTAMFhPr7v5VMaxUKiyGPM9XxXDrHb4VQ+ulM8edBFRVxcrKCh4+fMiqbXie
      Z0UD1t/A6OgoZmdnIYoivF4vmpqa2DlY6xySJLHyzq2sqTfreFbFj6qqO97hW6NRSZIoAZDa
      xvM8XC4Xzp8/z35mt9sRDAYPdOd6UFbZnjXcLpfLVQt65XIZxWIRgiDA6XRCkiQ2JM9kMvD7
      /VUJIJ/PQ1VV2O32Q23QeR1W9cnrxpDjODidTgiCgHK5zB4/YNE0DdlslsXO6XSiXC5DEATk
      8/ltMSyVSiyGsixDEAS2CJ3JZNDQ0FB1/Fwux5Lr247hTkRRRDgcxuDgIBsBbI5RLBZDLBbD
      Rx99xH7HWrweHR2Fw+Fg8bDWk6wpts2sR0PIsgxJkmCaJnw+H9tpvpWqqsjlcvB6vQe+QaIE
      QE4Ua/4zHo9X/cy6E3qTBEFAa2sr5ufn4ff7qy5eqVQKqVQKra2trB/WoxPGx8cxODhYVWU0
      NTUFVVW3Vc68DdZFaacYHuYuOhqNolAoYGZmpqo6KpPJ4OnTp2htbWV3tlYM5+bm4PP5qmK4
      uLiI5eXlbTGMRCIYHx/HhQsXqhLA5OQkKpUKmpqaDtznN8Fut6OhoQEej6cqAew1OimVSpia
      mgLP8/D7/fD5fABeVrMlEgnIsozBwcGq9mtra1hZWUEwGITb7YaqqmhtbcXY2Bja29vR2trK
      2udyOaytrWFjYwPRaPTAo02qAiInijVPKssy++dwOGC329/oFID1cLj+/n7Mzc1hZmYG2WwW
      wMsLXSKRwNLSEvr7+9kzWjweD3p7ezE6OopUKsVKAdPpNJ4+fQrDMNDR0XGoudnXPZejiKHV
      7+7ubpRKJTx79gwbGxvsuTfz8/MYHx9Hf38/2x9gt9vR39+PZDKJmZkZVvVibfhaWVlhm+Q4
      joPP50N3dzeLYalUgq7rSKfTePLkCUzTRHt7+1uP4W7xsEY7m+NqLWpns1l2vsDLhd7FxUUM
      Dw+jo6MDoVCILWp3dXXBNE0sLCywtRqrDHl8fByNjY1sU5zD4UB3dzey2SySySRbg7A2LqZS
      KYTDYXg8HhoBkB+3tbU15HI5Nhe6srKCjY0NiKKIyclJAGDldS6Xi9WoW3O2Gxsb0HW9qr11
      pyoIAuLxOJLJJJLJJHuoWyqVwtzcHHRdRzweZ3evPp8Pp06dwqNHj9jdqtvtRiqVwtLSEjo7
      O9nW/5NkdXUV+Xx+WwzL5TKLicvlgsfjgcvlQk9PD1ZXV5FKpTA+Po5oNIp0Oo1EIoFMJoN4
      PM5KPu12O+LxOKanp5FMJuFyuRAOh7G4uIj5+XmYpol4PM4u5n6/H319ffjvf/+LyclJqKoK
      l8uFpaUlLC8vo7e3Fx0dHccSp4MoFovsb9Oq7c9kMpifn8fi4iI+/vhjhEIhdt4tLS0IBoNI
      pVJ49OgRBEGApml4/vw5ZmZmcObMGfZEVJvNhpaWFjQ0NGBxcRF2u52V3j558gSlUgnxeHzP
      zXy74cyTvLuC1LT5+XlkMhmcPn36yI75z3/+E9999x179MBOzpw5g8uXL+PChQv429/+hmQy
      uWcd+Ycffoh33nkH3d3dAIBbt27h3r17eP78OdxuN3K5HOLxOC5evIif/vSnVb+r6zquXbuG
      O3fuIJPJQJIk5PN5vP/++xgaGjqRz7D54osvcOfOnT1jeO7cOVy+fJlNTzx+/BgjIyMYHh6G
      x+NBqVRCY2MjhoaGdnwY3Lfffot79+5hcnKSxXBgYAAXL17EpUuXqtpqmoZvvvkGt2/fRj6f
      h91uR6FQwC9/+UsMDQ3VxMPgkskk7ty5g++++45diK1k9uGHH7JNd5ulUin2MDiO49hjsDs7
      O/HnP/95W2ns9PQ0rl+/jidPnrDjW9/BBx98QAmAnCxvIgFYG4f2+rO1atYFQWDTMnu1typ6
      rOGzpmls0XNtbQ2hUAhOp5NNo2xmPZ/dmgIoFosIhUJwuVysDyfNQWMIgJUyWjt3vV4vPB4P
      ey/AVpqmoVQqoVAosBp4l8sFSZJ2jWGxWEQul6uK4U77CU4iayNhsVjE+vo6dF2Hx+OB1+vd
      dfrNqqIqlUrsMeUulwtut5tdzDf/jvUZ+Xwe6XQasizD6/Wy7+AwU2SUAMgb8yYSwNtivfyk
      VCpBluVXLkJbZaKaprH2xz1nfdSsx2WUSqVtSXMnVpljuVw+UAwrlQocDkfNxdAwDBiGgXK5
      zEpdX/USnM2PxLDKYvd6KY81968oCmv7OgmSEgB5Y2o5ARBSD6gKiBBC6tT/AepszhXaHcwB
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='FIG2_Pro (3)' width='384'>
      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
      YQEgIjqoM7YIHq52FF7FAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='FIG2_Pro (4)' width='384'>
      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
      r9HZ2YknnngCb775Jh555BGMjo5i3759qKysxLx580rWZogrAEmSsG/fPjgcDmzatAnd3d1T
      tolEIjh//vyUs+QdO3ZgYmICn376KR566CEEAgGoqoru7m4MDg5i8+bNWL9+PWw2GyoqKhAI
      BPD3f//3OHnyJDo6OmZ1p3M6ndi2bRsqKysndWf4/X7U19cjlUrh2rVrGB8fR3V1NVRVxalT
      p2CxWPDNb36zeDBYt24d4vE49u3bh66urmI74vE4PvnkE7S3t2PHjh3w+XwAgG3btiGRSOD8
      +fNYt24dgsHgrLS30AWyfft2rFu3rlgPAGzatKl4ljw0NIS2trZie1VVxWuvvVY8aK5duxbx
      eBx79uzBlStXsHz5clgsFiSTSZw9exatra3YuXNnsZvl2WefRSKRwGeffYaHH3645MF3pnR1
      deHdd99FMBjEX/zFX6C/v7/kdqqqoqurC4ODg3jyyScn7aOVlZX4h3/4B5w8eRJLliyBxWKB
      qqr49NNPkc1m8cYbb2DJkiUAgJUrVyKbzeJXv/oVLly4gIcffnjOHUgzmQw6OzvR1taGHTt2
      IBAIAACeeuopRKNRnD59Gs8///y03WR6U1UVx48fx759+7Bo0SJs3LgRhw4dQtDNEFUAABBX
      SURBVD6fL7l9ob2tra3YsWNH8aT7qaeewsTEBE6cOIHt27cXr2bj8TjOnDmDNWvWYOvWrcVu
      4B07diAajaKzsxOrV68ueZUk/CCwoig4deoULly4gO3bt0/7Zb169WrxgH57F4nP58OmTZvQ
      19eH3t5eALcC5ezZs8VLrtsXF6upqcH69etx4cIFjI2NzWzjvsRms6GlpQU+n2/Kl9ThcBQP
      +pIkAQDGxsaKB+3bu0lsNhvWrl2LiooKnD17trh9b28vrl+/jscff3zSwba8vBybN2/G0NAQ
      rl69Ogst/VOb3njjDWzZsmVSPYU2FLoskskkgFuPLT1//jzWrl07KaSsVitWr16N6upqnDlz
      BrlcDgDQ39+Pnp4ebNy4cdLBw+12Y/PmzRgZGcHnn38+Cy39E6/Xi+9973v40Y9+hBUrVqC8
      vLzkdpIk4ZNPPoHP58PatWsn7aO1tbVYv349zp8/X9xHE4kEzp49i46ODtx3332T3qujowPt
      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
    </thumbnail>
    <thumbnail height='384' name='Fig2a_h' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Fig2b_h' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Fig2c_h' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Fig2d_h' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Table 1' width='384'>
      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
      qbKE1mruAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
